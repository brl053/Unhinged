# ============================================================================
# Multimodal AI Integration Test Configuration
# ============================================================================
#
# @file multimodal-test-config.yaml
# @version 1.0.0
# @author Unhinged Team
# @date 2025-01-06
# @description Configuration for multimodal AI architecture integration tests
#
# Defines test environments, service endpoints, and test parameters
# for comprehensive validation of the gRPC-based architecture refactoring
#
# ============================================================================

# Test Environment Configuration
environments:
  local:
    kotlin_backend:
      url: "http://localhost:8080"
      health_endpoint: "/health"
      api_prefix: "/api/multimodal"
    
    vision_grpc:
      host: "localhost"
      port: 50051
      timeout_seconds: 60
      max_message_size: 16777216  # 16MB
    
    context_grpc:
      host: "localhost"
      port: 50052
      timeout_seconds: 30
      max_message_size: 4194304   # 4MB
    
    frontend:
      url: "http://localhost:8081"
      timeout_seconds: 30
  
  docker:
    kotlin_backend:
      url: "http://backend:8080"
      health_endpoint: "/health"
      api_prefix: "/api/multimodal"
    
    vision_grpc:
      host: "vision-ai-enhanced"
      port: 50051
      timeout_seconds: 60
      max_message_size: 16777216
    
    context_grpc:
      host: "context-llm"
      port: 50052
      timeout_seconds: 30
      max_message_size: 4194304
    
    frontend:
      url: "http://frontend:8081"
      timeout_seconds: 30

# Test Data Configuration
test_data:
  assets_directory: "tests/assets"
  screenshots_directory: "tests/screenshots"
  
  synthetic_images:
    screenshot:
      width: 800
      height: 600
      format: "PNG"
      elements:
        - type: "header"
          color: "#2196F3"
          text: "Application Header"
        - type: "navigation"
          color: "#f5f5f5"
          items: ["Dashboard", "Settings", "Profile"]
        - type: "form"
          elements: ["input", "button"]
    
    document:
      width: 600
      height: 800
      format: "PNG"
      content:
        - type: "title"
          text: "Test Document Title"
        - type: "paragraph"
          text: "Sample document for OCR testing"
        - type: "heading"
          text: "Section Heading"
    
    ui_component:
      width: 400
      height: 300
      format: "PNG"
      elements:
        - type: "form_container"
          title: "Login Form"
        - type: "input_field"
          label: "Username"
        - type: "input_field"
          label: "Password"
        - type: "button"
          text: "Login"
          color: "#2196F3"
    
    natural_image:
      width: 500
      height: 300
      format: "PNG"
      elements:
        - type: "sky"
          color: "#87CEEB"
        - type: "ground"
          color: "#90EE90"
        - type: "sun"
          color: "#FFD700"
        - type: "tree"
          trunk_color: "#8B4513"
          leaves_color: "#228B22"
        - type: "house"
          wall_color: "#DC143C"
          roof_color: "#8B4513"

# Test Scenarios Configuration
test_scenarios:
  basic_analysis:
    workflow_type: "basic_analysis"
    expected_confidence_min: 0.5
    expected_response_time_max: 10000  # 10 seconds
    test_images: ["screenshot", "document", "ui_component", "natural_image"]
  
  contextual_analysis:
    workflow_type: "contextual_analysis"
    expected_confidence_min: 0.6
    expected_response_time_max: 15000  # 15 seconds
    test_images: ["screenshot", "ui_component", "document"]
    context_enhancement: true
  
  iterative_refinement:
    workflow_type: "iterative_refinement"
    expected_confidence_min: 0.7
    expected_response_time_max: 30000  # 30 seconds
    test_images: ["document", "screenshot"]
    max_iterations: 3
  
  multi_model_consensus:
    workflow_type: "multi_model_consensus"
    expected_confidence_min: 0.8
    expected_response_time_max: 25000  # 25 seconds
    test_images: ["natural_image", "screenshot"]
    consensus_threshold: 0.8

# Performance Benchmarks
performance:
  response_time_targets:
    basic_analysis: 5000      # 5 seconds
    contextual_analysis: 10000 # 10 seconds
    iterative_refinement: 20000 # 20 seconds
    multi_model_consensus: 15000 # 15 seconds
  
  throughput_targets:
    concurrent_requests: 5
    requests_per_minute: 30
  
  resource_limits:
    memory_usage_max: "2GB"
    cpu_usage_max: "80%"
    gpu_memory_max: "14GB"

# Architecture Validation Rules
architecture_validation:
  service_boundaries:
    kotlin_backend:
      responsibilities:
        - "Business logic orchestration"
        - "API request/response handling"
        - "User authentication and authorization"
        - "Workflow selection and configuration"
        - "Data persistence and caching"
        - "Cross-cutting concerns (logging, metrics)"
      
      forbidden_operations:
        - "Direct model inference"
        - "Image processing operations"
        - "LLM text generation"
    
    python_vision_service:
      responsibilities:
        - "Model loading and inference"
        - "Image preprocessing"
        - "Vision model execution"
        - "Result formatting"
      
      forbidden_operations:
        - "Business logic decisions"
        - "User authentication"
        - "Data persistence"
        - "API routing"
        - "Workflow orchestration"
    
    python_context_service:
      responsibilities:
        - "LLM text generation"
        - "Context search and retrieval"
        - "Prompt enhancement"
        - "Text processing"
      
      forbidden_operations:
        - "Business logic decisions"
        - "User authentication"
        - "Data persistence"
        - "API routing"
        - "Workflow orchestration"

# Error Handling Test Cases
error_scenarios:
  validation_errors:
    - name: "Empty image data"
      input: { image: "", analysis_type: "screenshot" }
      expected_status: 400
      expected_error_code: "VALIDATION_ERROR"
    
    - name: "Invalid analysis type"
      input: { image: "valid_image_data", analysis_type: "invalid_type" }
      expected_status: 400
      expected_error_code: "VALIDATION_ERROR"
    
    - name: "Missing user ID"
      input: { image: "valid_image_data", analysis_type: "screenshot" }
      headers: {}
      expected_status: 401
      expected_error_code: "UNAUTHORIZED"
  
  processing_errors:
    - name: "Corrupted image data"
      input: { image: "corrupted_data", analysis_type: "screenshot" }
      expected_status: 500
      expected_error_code: "PROCESSING_ERROR"
    
    - name: "Service unavailable"
      scenario: "grpc_service_down"
      expected_status: 500
      expected_error_code: "SERVICE_UNAVAILABLE"
  
  network_errors:
    - name: "gRPC connection timeout"
      scenario: "network_delay"
      expected_behavior: "graceful_degradation"
    
    - name: "gRPC service unreachable"
      scenario: "service_down"
      expected_behavior: "error_response_with_retry"

# Test Execution Configuration
execution:
  parallel_execution: true
  max_concurrent_tests: 3
  retry_attempts: 2
  cleanup_after_tests: true
  
  test_order:
    - "service_health_checks"
    - "basic_functionality_tests"
    - "workflow_tests"
    - "error_handling_tests"
    - "performance_tests"
    - "architecture_validation_tests"
  
  reporting:
    generate_html_report: true
    generate_json_report: true
    include_screenshots: true
    include_performance_metrics: true
    
    output_directory: "test-results/multimodal"
    report_formats: ["html", "json", "junit"]

# CI/CD Integration
ci_cd:
  required_services:
    - "kotlin-backend"
    - "vision-ai-enhanced"
    - "context-llm"
  
  service_startup_timeout: 120  # 2 minutes
  test_timeout: 1800           # 30 minutes
  
  success_criteria:
    min_test_pass_rate: 95
    max_average_response_time: 15000
    max_error_rate: 5
  
  failure_actions:
    - "capture_service_logs"
    - "generate_debug_report"
    - "preserve_test_artifacts"

# Monitoring and Observability
monitoring:
  metrics_collection: true
  log_aggregation: true
  
  key_metrics:
    - "test_execution_time"
    - "service_response_times"
    - "error_rates_by_service"
    - "resource_utilization"
    - "grpc_communication_overhead"
  
  alerts:
    - condition: "test_failure_rate > 10%"
      action: "notify_team"
    - condition: "average_response_time > 20s"
      action: "performance_investigation"
    - condition: "service_unavailable"
      action: "immediate_escalation"
