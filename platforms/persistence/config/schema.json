{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Persistence Platform Configuration Schema",
  "description": "JSON Schema for validating persistence platform YAML configuration",
  "type": "object",
  "required": ["persistence_platform"],
  "properties": {
    "persistence_platform": {
      "type": "object",
      "required": ["version", "technologies", "databases", "tables"],
      "properties": {
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Semantic version of the configuration schema"
        },
        "technologies": {
          "type": "object",
          "description": "Database technology configurations",
          "patternProperties": {
            "^[a-z_]+$": {
              "type": "object",
              "required": ["type", "use_cases"],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "cache", "newsql", "nosql_document", "vector_database",
                    "search_analytics", "wide_column", "graph", "olap_warehouse"
                  ]
                },
                "clusters": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "use_cases": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
          }
        },
        "databases": {
          "type": "object",
          "description": "Database definitions",
          "patternProperties": {
            "^[a-z_]+$": {
              "type": "object",
              "required": ["primary_technology", "use_case"],
              "properties": {
                "primary_technology": {
                  "type": "string"
                },
                "backup_technology": {
                  "type": "string"
                },
                "use_case": {
                  "type": "string"
                },
                "retention_policy": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tables": {
          "type": "object",
          "description": "Table/collection definitions",
          "patternProperties": {
            "^[a-z_]+$": {
              "type": "object",
              "required": ["database", "technology", "schema"],
              "properties": {
                "database": {
                  "type": "string"
                },
                "technology": {
                  "type": "string"
                },
                "schema": {
                  "type": "object",
                  "description": "Table schema definition"
                },
                "access_patterns": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["type"],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "point_lookup", "range_scan", "document_query",
                          "vector_similarity", "full_text_search", "graph_traversal",
                          "time_range_query", "olap_query"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "queries": {
          "type": "object",
          "description": "Named query definitions",
          "patternProperties": {
            "^[a-z_]+$": {
              "type": "object",
              "required": ["type", "parameters"],
              "properties": {
                "table": { "type": "string" },
                "tables": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "type": { "type": "string" },
                "parameters": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "cache_strategy": {
                  "type": "string",
                  "enum": ["none", "redis_aside", "write_through", "write_behind"]
                },
                "cache_ttl": { "type": "string" }
              }
            }
          }
        },
        "operations": {
          "type": "object",
          "description": "Operation definitions",
          "patternProperties": {
            "^[a-z_]+$": {
              "type": "object",
              "required": ["type"],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "insert", "update", "delete", "soft_delete",
                    "distributed_transaction", "async_pipeline", "ml_pipeline"
                  ]
                },
                "table": { "type": "string" },
                "steps": {
                  "type": "array",
                  "items": { "type": "object" }
                },
                "rollback_strategy": { "type": "string" },
                "timeout": { "type": "string" }
              }
            }
          }
        },
        "routing": {
          "type": "object",
          "description": "Data routing rules",
          "patternProperties": {
            "^[a-z_]+$": {
              "type": "object",
              "required": ["criteria", "technologies"],
              "properties": {
                "criteria": { "type": "string" },
                "technologies": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "priority": {
                  "type": "string",
                  "enum": ["critical", "high", "medium", "low", "batch"]
                }
              }
            }
          }
        },
        "sharding": {
          "type": "object",
          "properties": {
            "strategies": {
              "type": "object",
              "patternProperties": {
                "^[a-z_]+$": {
                  "type": "object",
                  "required": ["shard_key"],
                  "properties": {
                    "shard_key": { "type": "string" },
                    "shard_count": { "type": "integer", "minimum": 1 },
                    "hash_function": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "lifecycle": {
          "type": "object",
          "properties": {
            "policies": {
              "type": "object",
              "patternProperties": {
                "^[a-z_]+$": {
                  "type": "object",
                  "required": ["applies_to", "rules"],
                  "properties": {
                    "applies_to": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["action"],
                        "properties": {
                          "age": { "type": "string" },
                          "condition": { "type": "string" },
                          "action": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "type": "object",
          "properties": {
            "endpoints": {
              "type": "object",
              "patternProperties": {
                "^/api/v\\d+/[a-z_/]+$": {
                  "type": "object",
                  "required": ["operations"],
                  "properties": {
                    "operations": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "rate_limit": { "type": "string" },
                    "authentication": {
                      "type": "string",
                      "enum": ["required", "optional", "admin_required"]
                    }
                  }
                }
              }
            },
            "protocols": {
              "type": "object",
              "properties": {
                "rest": {
                  "type": "object",
                  "properties": {
                    "enabled": { "type": "boolean" },
                    "port": { "type": "integer" }
                  }
                },
                "grpc": {
                  "type": "object",
                  "properties": {
                    "enabled": { "type": "boolean" },
                    "port": { "type": "integer" }
                  }
                }
              }
            }
          }
        },
        "monitoring": {
          "type": "object",
          "properties": {
            "metrics": {
              "type": "array",
              "items": { "type": "string" }
            },
            "alerts": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["condition", "severity"],
                "properties": {
                  "condition": { "type": "string" },
                  "severity": {
                    "type": "string",
                    "enum": ["critical", "warning", "info"]
                  }
                }
              }
            }
          }
        },
        "environments": {
          "type": "object",
          "patternProperties": {
            "^(development|staging|production)$": {
              "type": "object",
              "properties": {
                "technologies": {
                  "type": "object",
                  "patternProperties": {
                    "^[a-z_]+$": {
                      "type": "object",
                      "properties": {
                        "replicas": { "type": "integer", "minimum": 1 },
                        "memory": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
