# ============================================================================
# Unhinged Backend Configuration
# ============================================================================
# 
# @file application.conf
# @version 1.0.0
# @author Unhinged Team
# @date 2025-01-04
# @description HOCON configuration for Unhinged backend services
# 
# This configuration includes:
# - Database connection settings with LLM-optimized pool configurations
# - gRPC and HTTP server settings
# - Event streaming and CDC configuration
# - LLM-specific service parameters
# - Monitoring and metrics settings
# ============================================================================

# ========================================================================
# Application Settings
# ========================================================================
application {
    name = "unhinged-backend"
    version = "1.0.0"
    environment = ${?ENV}
    environment = "development"
}

# ========================================================================
# Server Configuration
# ========================================================================
server {
    http {
        host = "0.0.0.0"
        port = 8080
        port = ${?HTTP_PORT}
    }
    
    grpc {
        host = "0.0.0.0"
        port = 9090
        port = ${?GRPC_PORT}
        
        # gRPC-specific settings
        max_message_size = 4194304  # 4MB
        max_header_list_size = 8192
        keepalive_time_seconds = 30
        keepalive_timeout_seconds = 5
        permit_keepalive_without_calls = true
    }
}

# ========================================================================
# Database Configuration - LLM Optimized
# ========================================================================
database {
    # Primary database for read/write operations
    url = "jdbc:postgresql://localhost:5432/unhinged_dev"
    url = ${?DATABASE_URL}
    username = "unhinged"
    username = ${?DATABASE_USER}
    password = "unhinged_dev"
    password = ${?DATABASE_PASSWORD}
    
    # Connection pool settings optimized for LLM workloads
    pool {
        maximum = 20
        maximum = ${?DATABASE_POOL_MAX}
        minimum = 5
        minimum = ${?DATABASE_POOL_MIN}
        timeout = 30000  # 30 seconds
        timeout = ${?DATABASE_POOL_TIMEOUT}
    }
    
    # Read-only replica for session context queries
    readonly {
        url = "jdbc:postgresql://localhost:5432/unhinged_dev"
        url = ${?DATABASE_READONLY_URL}
        username = "unhinged_readonly"
        username = ${?DATABASE_READONLY_USER}
        password = "unhinged_readonly"
        password = ${?DATABASE_READONLY_PASSWORD}
        
        pool {
            maximum = 30  # More connections for read queries
            maximum = ${?DATABASE_READONLY_POOL_MAX}
            minimum = 10
            minimum = ${?DATABASE_READONLY_POOL_MIN}
            timeout = 15000  # Shorter timeout for reads
            timeout = ${?DATABASE_READONLY_POOL_TIMEOUT}
        }
    }
    
    # Migration settings
    migration {
        enabled = true
        enabled = ${?DATABASE_MIGRATION_ENABLED}
        baseline_on_migrate = true
        validate_on_migrate = true
    }
}

# ========================================================================
# Event Streaming Configuration
# ========================================================================
events {
    # CDC event publishing
    cdc {
        enabled = true
        enabled = ${?CDC_ENABLED}
        
        # Kafka configuration
        kafka {
            bootstrap_servers = "localhost:9092"
            bootstrap_servers = ${?KAFKA_BOOTSTRAP_SERVERS}
            
            # Producer settings
            producer {
                acks = "all"
                retries = 3
                batch_size = 16384
                linger_ms = 5
                buffer_memory = 33554432
            }
            
            # Consumer settings
            consumer {
                group_id = "unhinged-backend"
                group_id = ${?KAFKA_CONSUMER_GROUP}
                auto_offset_reset = "earliest"
                enable_auto_commit = false
            }
        }
        
        # Topic configuration
        topics {
            document_events = "unhinged.document.events"
            llm_events = "unhinged.llm.events"
            agent_events = "unhinged.agent.events"
            session_events = "unhinged.session.events"
            system_events = "unhinged.system.events"
        }
    }
    
    # Event batching for performance
    batch {
        size = 100
        size = ${?EVENT_BATCH_SIZE}
        timeout_ms = 5000
        timeout_ms = ${?EVENT_BATCH_TIMEOUT}
    }
    
    # Event retry configuration
    retry {
        max_attempts = 3
        max_attempts = ${?EVENT_RETRY_MAX_ATTEMPTS}
        backoff_ms = 1000
        backoff_ms = ${?EVENT_RETRY_BACKOFF}
    }
}

# ========================================================================
# LLM-Specific Configuration
# ========================================================================
llm {
    # Session context optimization
    context {
        max_tokens = 8000  # Conservative limit for context window
        max_tokens = ${?LLM_CONTEXT_MAX_TOKENS}
        relevance_threshold = 0.7
        relevance_threshold = ${?LLM_CONTEXT_RELEVANCE_THRESHOLD}
        recency_weight = 0.3  # Weight for recency in scoring
        recency_weight = ${?LLM_CONTEXT_RECENCY_WEIGHT}
    }
    
    # Token estimation settings
    tokens {
        estimation_model = "gpt-4"  # Model to use for token estimation
        estimation_model = ${?LLM_TOKEN_ESTIMATION_MODEL}
        chars_per_token = 4  # Rough estimation for English text
        chars_per_token = ${?LLM_CHARS_PER_TOKEN}
    }
}

# ========================================================================
# Document Analysis Configuration
# ========================================================================
document {
    analysis {
        # Semantic analysis settings
        semantic {
            enabled = true
            enabled = ${?DOCUMENT_SEMANTIC_ANALYSIS_ENABLED}
            confidence_threshold = 0.8
            confidence_threshold = ${?DOCUMENT_SEMANTIC_CONFIDENCE_THRESHOLD}
        }
        
        # Auto-tagging settings
        auto_tagging {
            enabled = true
            enabled = ${?DOCUMENT_AUTO_TAGGING_ENABLED}
            max_tags = 10
            max_tags = ${?DOCUMENT_AUTO_TAGGING_MAX_TAGS}
        }
        
        # Token estimation model
        token_model = "gpt-4"
        token_model = ${?DOCUMENT_TOKEN_MODEL}
    }
    
    # Content processing limits
    limits {
        max_document_size_mb = 10
        max_document_size_mb = ${?DOCUMENT_MAX_SIZE_MB}
        max_batch_size = 100
        max_batch_size = ${?DOCUMENT_MAX_BATCH_SIZE}
    }
}

# ========================================================================
# Caching Configuration
# ========================================================================
cache {
    # Document cache settings
    document {
        max_size = 10000  # Maximum number of cached documents
        max_size = ${?CACHE_DOCUMENT_MAX_SIZE}
        ttl_minutes = 60  # Time to live in minutes
        ttl_minutes = ${?CACHE_DOCUMENT_TTL_MINUTES}
        
        # Cache warming settings
        warming {
            enabled = true
            enabled = ${?CACHE_DOCUMENT_WARMING_ENABLED}
            popular_threshold = 10  # Access count threshold
            popular_threshold = ${?CACHE_DOCUMENT_POPULAR_THRESHOLD}
        }
    }
    
    # Session context cache
    session_context {
        max_size = 5000
        max_size = ${?CACHE_SESSION_CONTEXT_MAX_SIZE}
        ttl_minutes = 30  # Shorter TTL for dynamic content
        ttl_minutes = ${?CACHE_SESSION_CONTEXT_TTL_MINUTES}
    }
}

# ========================================================================
# Monitoring and Metrics
# ========================================================================
metrics {
    enabled = true
    enabled = ${?METRICS_ENABLED}
    
    # Detailed metrics (may impact performance)
    detailed {
        enabled = false
        enabled = ${?METRICS_DETAILED_ENABLED}
    }
    
    # Prometheus settings
    prometheus {
        enabled = true
        enabled = ${?PROMETHEUS_ENABLED}
        port = 9091
        port = ${?PROMETHEUS_PORT}
        path = "/metrics"
        path = ${?PROMETHEUS_PATH}
    }
    
    # JVM metrics
    jvm {
        enabled = true
        enabled = ${?METRICS_JVM_ENABLED}
    }
}

# ========================================================================
# Health Check Configuration
# ========================================================================
health {
    check {
        timeout_ms = 5000
        timeout_ms = ${?HEALTH_CHECK_TIMEOUT}
        interval_seconds = 30
        interval_seconds = ${?HEALTH_CHECK_INTERVAL}
    }
    
    # Component health checks
    components {
        database = true
        database = ${?HEALTH_CHECK_DATABASE}
        cdc_service = true
        cdc_service = ${?HEALTH_CHECK_CDC_SERVICE}
        event_emitter = true
        event_emitter = ${?HEALTH_CHECK_EVENT_EMITTER}
    }
}

# ========================================================================
# Logging Configuration
# ========================================================================
logging {
    level = "INFO"
    level = ${?LOG_LEVEL}
    
    # Structured logging for production
    structured = false
    structured = ${?LOG_STRUCTURED}
    
    # Log file settings
    file {
        enabled = false
        enabled = ${?LOG_FILE_ENABLED}
        path = "logs/unhinged-backend.log"
        path = ${?LOG_FILE_PATH}
        max_size = "100MB"
        max_files = 10
    }
}

# ========================================================================
# Security Configuration
# ========================================================================
security {
    # JWT settings (for future authentication)
    jwt {
        secret = "your-secret-key"
        secret = ${?JWT_SECRET}
        issuer = "unhinged-backend"
        issuer = ${?JWT_ISSUER}
        expiration_hours = 24
        expiration_hours = ${?JWT_EXPIRATION_HOURS}
    }
    
    # CORS settings
    cors {
        allowed_hosts = ["localhost:3000", "localhost:8080"]
        allowed_methods = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
        allowed_headers = ["Content-Type", "Authorization"]
    }
}

# ========================================================================
# Development Settings
# ========================================================================
development {
    # Enable debug features in development
    debug_mode = true
    debug_mode = ${?DEBUG_MODE}
    
    # Mock external services
    mock_llm_service = false
    mock_llm_service = ${?MOCK_LLM_SERVICE}
    
    # Database seeding
    seed_database = false
    seed_database = ${?SEED_DATABASE}
}
