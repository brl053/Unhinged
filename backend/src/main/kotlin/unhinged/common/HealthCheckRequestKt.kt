// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package unhinged.common;

@kotlin.jvm.JvmName("-initializehealthCheckRequest")
public inline fun healthCheckRequest(block: unhinged.common.HealthCheckRequestKt.Dsl.() -> kotlin.Unit): unhinged.common.HealthCheckRequest =
  unhinged.common.HealthCheckRequestKt.Dsl._create(unhinged.common.HealthCheckRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 **
 * Universal health check request
 * ```
 *
 * Protobuf type `unhinged.common.v1.HealthCheckRequest`
 */
public object HealthCheckRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.common.HealthCheckRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.common.HealthCheckRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.common.HealthCheckRequest = _builder.build()

    /**
     * ```
     * Optional: specific service component
     * ```
     *
     * `string service = 1;`
     */
    public var service: kotlin.String
      @JvmName("getService")
      get() = _builder.getService()
      @JvmName("setService")
      set(value) {
        _builder.setService(value)
      }
    /**
     * ```
     * Optional: specific service component
     * ```
     *
     * `string service = 1;`
     */
    public fun clearService() {
      _builder.clearService()
    }

    /**
     * ```
     * Check dependent services too
     * ```
     *
     * `bool include_dependencies = 2;`
     */
    public var includeDependencies: kotlin.Boolean
      @JvmName("getIncludeDependencies")
      get() = _builder.getIncludeDependencies()
      @JvmName("setIncludeDependencies")
      set(value) {
        _builder.setIncludeDependencies(value)
      }
    /**
     * ```
     * Check dependent services too
     * ```
     *
     * `bool include_dependencies = 2;`
     */
    public fun clearIncludeDependencies() {
      _builder.clearIncludeDependencies()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.common.HealthCheckRequest.copy(block: `unhinged.common`.HealthCheckRequestKt.Dsl.() -> kotlin.Unit): unhinged.common.HealthCheckRequest =
  `unhinged.common`.HealthCheckRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

