// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_events.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package unhinged.cdc;

@kotlin.jvm.JvmName("-initializeuserEvent")
public inline fun userEvent(block: unhinged.cdc.UserEventKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.UserEvent =
  unhinged.cdc.UserEventKt.Dsl._create(unhinged.cdc.CdcEvents.UserEvent.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `unhinged.cdc.UserEvent`
 */
public object UserEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcEvents.UserEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcEvents.UserEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcEvents.UserEvent = _builder.build()

    /**
     * `string user_id = 1;`
     */
    public var userId: kotlin.String
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * `string user_id = 1;`
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }

    /**
     * `.unhinged.cdc.UserEventType event_type = 2;`
     */
    public var eventType: unhinged.cdc.CdcEvents.UserEventType
      @JvmName("getEventType")
      get() = _builder.getEventType()
      @JvmName("setEventType")
      set(value) {
        _builder.setEventType(value)
      }
    public var eventTypeValue: kotlin.Int
      @JvmName("getEventTypeValue")
      get() = _builder.getEventTypeValue()
      @JvmName("setEventTypeValue")
      set(value) {
        _builder.setEventTypeValue(value)
      }
    /**
     * `.unhinged.cdc.UserEventType event_type = 2;`
     */
    public fun clearEventType() {
      _builder.clearEventType()
    }

    /**
     * `.unhinged.cdc.UserCreated user_created = 10;`
     */
    public var userCreated: unhinged.cdc.CdcEvents.UserCreated
      @JvmName("getUserCreated")
      get() = _builder.getUserCreated()
      @JvmName("setUserCreated")
      set(value) {
        _builder.setUserCreated(value)
      }
    /**
     * `.unhinged.cdc.UserCreated user_created = 10;`
     */
    public fun clearUserCreated() {
      _builder.clearUserCreated()
    }
    /**
     * `.unhinged.cdc.UserCreated user_created = 10;`
     * @return Whether the userCreated field is set.
     */
    public fun hasUserCreated(): kotlin.Boolean {
      return _builder.hasUserCreated()
    }

    /**
     * `.unhinged.cdc.UserLoggedIn user_logged_in = 11;`
     */
    public var userLoggedIn: unhinged.cdc.CdcEvents.UserLoggedIn
      @JvmName("getUserLoggedIn")
      get() = _builder.getUserLoggedIn()
      @JvmName("setUserLoggedIn")
      set(value) {
        _builder.setUserLoggedIn(value)
      }
    /**
     * `.unhinged.cdc.UserLoggedIn user_logged_in = 11;`
     */
    public fun clearUserLoggedIn() {
      _builder.clearUserLoggedIn()
    }
    /**
     * `.unhinged.cdc.UserLoggedIn user_logged_in = 11;`
     * @return Whether the userLoggedIn field is set.
     */
    public fun hasUserLoggedIn(): kotlin.Boolean {
      return _builder.hasUserLoggedIn()
    }

    /**
     * `.unhinged.cdc.TeamMemberAdded team_member_added = 12;`
     */
    public var teamMemberAdded: unhinged.cdc.CdcEvents.TeamMemberAdded
      @JvmName("getTeamMemberAdded")
      get() = _builder.getTeamMemberAdded()
      @JvmName("setTeamMemberAdded")
      set(value) {
        _builder.setTeamMemberAdded(value)
      }
    /**
     * `.unhinged.cdc.TeamMemberAdded team_member_added = 12;`
     */
    public fun clearTeamMemberAdded() {
      _builder.clearTeamMemberAdded()
    }
    /**
     * `.unhinged.cdc.TeamMemberAdded team_member_added = 12;`
     * @return Whether the teamMemberAdded field is set.
     */
    public fun hasTeamMemberAdded(): kotlin.Boolean {
      return _builder.hasTeamMemberAdded()
    }
    public val eventDataCase: unhinged.cdc.CdcEvents.UserEvent.EventDataCase
      @JvmName("getEventDataCase")
      get() = _builder.getEventDataCase()

    public fun clearEventData() {
      _builder.clearEventData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcEvents.UserEvent.copy(block: `unhinged.cdc`.UserEventKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.UserEvent =
  `unhinged.cdc`.UserEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.cdc.CdcEvents.UserEventOrBuilder.userCreatedOrNull: unhinged.cdc.CdcEvents.UserCreated?
  get() = if (hasUserCreated()) getUserCreated() else null

public val unhinged.cdc.CdcEvents.UserEventOrBuilder.userLoggedInOrNull: unhinged.cdc.CdcEvents.UserLoggedIn?
  get() = if (hasUserLoggedIn()) getUserLoggedIn() else null

public val unhinged.cdc.CdcEvents.UserEventOrBuilder.teamMemberAddedOrNull: unhinged.cdc.CdcEvents.TeamMemberAdded?
  get() = if (hasTeamMemberAdded()) getTeamMemberAdded() else null

