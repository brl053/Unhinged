// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_events.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package unhinged.cdc;

@kotlin.jvm.JvmName("-initializedocumentEvent")
public inline fun documentEvent(block: unhinged.cdc.DocumentEventKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.DocumentEvent =
  unhinged.cdc.DocumentEventKt.Dsl._create(unhinged.cdc.CdcEvents.DocumentEvent.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `unhinged.cdc.DocumentEvent`
 */
public object DocumentEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcEvents.DocumentEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcEvents.DocumentEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcEvents.DocumentEvent = _builder.build()

    /**
     * `string document_uuid = 1;`
     */
    public var documentUuid: kotlin.String
      @JvmName("getDocumentUuid")
      get() = _builder.getDocumentUuid()
      @JvmName("setDocumentUuid")
      set(value) {
        _builder.setDocumentUuid(value)
      }
    /**
     * `string document_uuid = 1;`
     */
    public fun clearDocumentUuid() {
      _builder.clearDocumentUuid()
    }

    /**
     * `string document_type = 2;`
     */
    public var documentType: kotlin.String
      @JvmName("getDocumentType")
      get() = _builder.getDocumentType()
      @JvmName("setDocumentType")
      set(value) {
        _builder.setDocumentType(value)
      }
    /**
     * `string document_type = 2;`
     */
    public fun clearDocumentType() {
      _builder.clearDocumentType()
    }

    /**
     * `string namespace = 3;`
     */
    public var namespace: kotlin.String
      @JvmName("getNamespace")
      get() = _builder.getNamespace()
      @JvmName("setNamespace")
      set(value) {
        _builder.setNamespace(value)
      }
    /**
     * `string namespace = 3;`
     */
    public fun clearNamespace() {
      _builder.clearNamespace()
    }

    /**
     * `int32 version = 4;`
     */
    public var version: kotlin.Int
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * `int32 version = 4;`
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * `.unhinged.cdc.DocumentEventType event_type = 5;`
     */
    public var eventType: unhinged.cdc.CdcEvents.DocumentEventType
      @JvmName("getEventType")
      get() = _builder.getEventType()
      @JvmName("setEventType")
      set(value) {
        _builder.setEventType(value)
      }
    public var eventTypeValue: kotlin.Int
      @JvmName("getEventTypeValue")
      get() = _builder.getEventTypeValue()
      @JvmName("setEventTypeValue")
      set(value) {
        _builder.setEventTypeValue(value)
      }
    /**
     * `.unhinged.cdc.DocumentEventType event_type = 5;`
     */
    public fun clearEventType() {
      _builder.clearEventType()
    }

    /**
     * `.unhinged.cdc.DocumentCreated created = 10;`
     */
    public var created: unhinged.cdc.CdcEvents.DocumentCreated
      @JvmName("getCreated")
      get() = _builder.getCreated()
      @JvmName("setCreated")
      set(value) {
        _builder.setCreated(value)
      }
    /**
     * `.unhinged.cdc.DocumentCreated created = 10;`
     */
    public fun clearCreated() {
      _builder.clearCreated()
    }
    /**
     * `.unhinged.cdc.DocumentCreated created = 10;`
     * @return Whether the created field is set.
     */
    public fun hasCreated(): kotlin.Boolean {
      return _builder.hasCreated()
    }

    /**
     * `.unhinged.cdc.DocumentUpdated updated = 11;`
     */
    public var updated: unhinged.cdc.CdcEvents.DocumentUpdated
      @JvmName("getUpdated")
      get() = _builder.getUpdated()
      @JvmName("setUpdated")
      set(value) {
        _builder.setUpdated(value)
      }
    /**
     * `.unhinged.cdc.DocumentUpdated updated = 11;`
     */
    public fun clearUpdated() {
      _builder.clearUpdated()
    }
    /**
     * `.unhinged.cdc.DocumentUpdated updated = 11;`
     * @return Whether the updated field is set.
     */
    public fun hasUpdated(): kotlin.Boolean {
      return _builder.hasUpdated()
    }

    /**
     * `.unhinged.cdc.DocumentDeleted deleted = 12;`
     */
    public var deleted: unhinged.cdc.CdcEvents.DocumentDeleted
      @JvmName("getDeleted")
      get() = _builder.getDeleted()
      @JvmName("setDeleted")
      set(value) {
        _builder.setDeleted(value)
      }
    /**
     * `.unhinged.cdc.DocumentDeleted deleted = 12;`
     */
    public fun clearDeleted() {
      _builder.clearDeleted()
    }
    /**
     * `.unhinged.cdc.DocumentDeleted deleted = 12;`
     * @return Whether the deleted field is set.
     */
    public fun hasDeleted(): kotlin.Boolean {
      return _builder.hasDeleted()
    }

    /**
     * `.unhinged.cdc.DocumentAccessed accessed = 13;`
     */
    public var accessed: unhinged.cdc.CdcEvents.DocumentAccessed
      @JvmName("getAccessed")
      get() = _builder.getAccessed()
      @JvmName("setAccessed")
      set(value) {
        _builder.setAccessed(value)
      }
    /**
     * `.unhinged.cdc.DocumentAccessed accessed = 13;`
     */
    public fun clearAccessed() {
      _builder.clearAccessed()
    }
    /**
     * `.unhinged.cdc.DocumentAccessed accessed = 13;`
     * @return Whether the accessed field is set.
     */
    public fun hasAccessed(): kotlin.Boolean {
      return _builder.hasAccessed()
    }

    /**
     * `.unhinged.cdc.DocumentTagged tagged = 14;`
     */
    public var tagged: unhinged.cdc.CdcEvents.DocumentTagged
      @JvmName("getTagged")
      get() = _builder.getTagged()
      @JvmName("setTagged")
      set(value) {
        _builder.setTagged(value)
      }
    /**
     * `.unhinged.cdc.DocumentTagged tagged = 14;`
     */
    public fun clearTagged() {
      _builder.clearTagged()
    }
    /**
     * `.unhinged.cdc.DocumentTagged tagged = 14;`
     * @return Whether the tagged field is set.
     */
    public fun hasTagged(): kotlin.Boolean {
      return _builder.hasTagged()
    }

    /**
     * `.unhinged.cdc.DocumentVersioned versioned = 15;`
     */
    public var versioned: unhinged.cdc.CdcEvents.DocumentVersioned
      @JvmName("getVersioned")
      get() = _builder.getVersioned()
      @JvmName("setVersioned")
      set(value) {
        _builder.setVersioned(value)
      }
    /**
     * `.unhinged.cdc.DocumentVersioned versioned = 15;`
     */
    public fun clearVersioned() {
      _builder.clearVersioned()
    }
    /**
     * `.unhinged.cdc.DocumentVersioned versioned = 15;`
     * @return Whether the versioned field is set.
     */
    public fun hasVersioned(): kotlin.Boolean {
      return _builder.hasVersioned()
    }
    public val eventDataCase: unhinged.cdc.CdcEvents.DocumentEvent.EventDataCase
      @JvmName("getEventDataCase")
      get() = _builder.getEventDataCase()

    public fun clearEventData() {
      _builder.clearEventData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcEvents.DocumentEvent.copy(block: `unhinged.cdc`.DocumentEventKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.DocumentEvent =
  `unhinged.cdc`.DocumentEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.cdc.CdcEvents.DocumentEventOrBuilder.createdOrNull: unhinged.cdc.CdcEvents.DocumentCreated?
  get() = if (hasCreated()) getCreated() else null

public val unhinged.cdc.CdcEvents.DocumentEventOrBuilder.updatedOrNull: unhinged.cdc.CdcEvents.DocumentUpdated?
  get() = if (hasUpdated()) getUpdated() else null

public val unhinged.cdc.CdcEvents.DocumentEventOrBuilder.deletedOrNull: unhinged.cdc.CdcEvents.DocumentDeleted?
  get() = if (hasDeleted()) getDeleted() else null

public val unhinged.cdc.CdcEvents.DocumentEventOrBuilder.accessedOrNull: unhinged.cdc.CdcEvents.DocumentAccessed?
  get() = if (hasAccessed()) getAccessed() else null

public val unhinged.cdc.CdcEvents.DocumentEventOrBuilder.taggedOrNull: unhinged.cdc.CdcEvents.DocumentTagged?
  get() = if (hasTagged()) getTagged() else null

public val unhinged.cdc.CdcEvents.DocumentEventOrBuilder.versionedOrNull: unhinged.cdc.CdcEvents.DocumentVersioned?
  get() = if (hasVersioned()) getVersioned() else null

