// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_events.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package unhinged.cdc;

@kotlin.jvm.JvmName("-initializedocumentVersioned")
public inline fun documentVersioned(block: unhinged.cdc.DocumentVersionedKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.DocumentVersioned =
  unhinged.cdc.DocumentVersionedKt.Dsl._create(unhinged.cdc.CdcEvents.DocumentVersioned.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `unhinged.cdc.DocumentVersioned`
 */
public object DocumentVersionedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcEvents.DocumentVersioned.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcEvents.DocumentVersioned.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcEvents.DocumentVersioned = _builder.build()

    /**
     * `int32 new_version = 1;`
     */
    public var newVersion: kotlin.Int
      @JvmName("getNewVersion")
      get() = _builder.getNewVersion()
      @JvmName("setNewVersion")
      set(value) {
        _builder.setNewVersion(value)
      }
    /**
     * `int32 new_version = 1;`
     */
    public fun clearNewVersion() {
      _builder.clearNewVersion()
    }

    /**
     * `int32 previous_version = 2;`
     */
    public var previousVersion: kotlin.Int
      @JvmName("getPreviousVersion")
      get() = _builder.getPreviousVersion()
      @JvmName("setPreviousVersion")
      set(value) {
        _builder.setPreviousVersion(value)
      }
    /**
     * `int32 previous_version = 2;`
     */
    public fun clearPreviousVersion() {
      _builder.clearPreviousVersion()
    }

    /**
     * `string version_reason = 3;`
     */
    public var versionReason: kotlin.String
      @JvmName("getVersionReason")
      get() = _builder.getVersionReason()
      @JvmName("setVersionReason")
      set(value) {
        _builder.setVersionReason(value)
      }
    /**
     * `string version_reason = 3;`
     */
    public fun clearVersionReason() {
      _builder.clearVersionReason()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcEvents.DocumentVersioned.copy(block: `unhinged.cdc`.DocumentVersionedKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.DocumentVersioned =
  `unhinged.cdc`.DocumentVersionedKt.Dsl._create(this.toBuilder()).apply { block() }._build()

