// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: audio.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package unhinged.audio;

@kotlin.jvm.JvmName("-initializelanguageDetection")
public inline fun languageDetection(block: unhinged.audio.LanguageDetectionKt.Dsl.() -> kotlin.Unit): unhinged.audio.LanguageDetection =
  unhinged.audio.LanguageDetectionKt.Dsl._create(unhinged.audio.LanguageDetection.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `unhinged.audio.v1.LanguageDetection`
 */
public object LanguageDetectionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.audio.LanguageDetection.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.audio.LanguageDetection.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.audio.LanguageDetection = _builder.build()

    /**
     * `string language = 1;`
     */
    public var language: kotlin.String
      @JvmName("getLanguage")
      get() = _builder.getLanguage()
      @JvmName("setLanguage")
      set(value) {
        _builder.setLanguage(value)
      }
    /**
     * `string language = 1;`
     */
    public fun clearLanguage() {
      _builder.clearLanguage()
    }

    /**
     * `string language_code = 2;`
     */
    public var languageCode: kotlin.String
      @JvmName("getLanguageCode")
      get() = _builder.getLanguageCode()
      @JvmName("setLanguageCode")
      set(value) {
        _builder.setLanguageCode(value)
      }
    /**
     * `string language_code = 2;`
     */
    public fun clearLanguageCode() {
      _builder.clearLanguageCode()
    }

    /**
     * `float confidence = 3;`
     */
    public var confidence: kotlin.Float
      @JvmName("getConfidence")
      get() = _builder.getConfidence()
      @JvmName("setConfidence")
      set(value) {
        _builder.setConfidence(value)
      }
    /**
     * `float confidence = 3;`
     */
    public fun clearConfidence() {
      _builder.clearConfidence()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.audio.LanguageDetection.copy(block: `unhinged.audio`.LanguageDetectionKt.Dsl.() -> kotlin.Unit): unhinged.audio.LanguageDetection =
  `unhinged.audio`.LanguageDetectionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

