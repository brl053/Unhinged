// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: audio.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package unhinged.audio;

@kotlin.jvm.JvmName("-initializesTTChunkPayload")
public inline fun sTTChunkPayload(block: unhinged.audio.STTChunkPayloadKt.Dsl.() -> kotlin.Unit): unhinged.audio.STTChunkPayload =
  unhinged.audio.STTChunkPayloadKt.Dsl._create(unhinged.audio.STTChunkPayload.newBuilder()).apply { block() }._build()
/**
 * ```
 **
 * STT audio input payload
 * Used with common.v1.StreamChunk.data field for binary audio input
 * ```
 *
 * Protobuf type `unhinged.audio.v1.STTChunkPayload`
 */
public object STTChunkPayloadKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.audio.STTChunkPayload.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.audio.STTChunkPayload.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.audio.STTChunkPayload = _builder.build()

    /**
     * `string stt_id = 1;`
     */
    public var sttId: kotlin.String
      @JvmName("getSttId")
      get() = _builder.getSttId()
      @JvmName("setSttId")
      set(value) {
        _builder.setSttId(value)
      }
    /**
     * `string stt_id = 1;`
     */
    public fun clearSttId() {
      _builder.clearSttId()
    }

    /**
     * `.unhinged.audio.v1.AudioMetadata audio_metadata = 2;`
     */
    public var audioMetadata: unhinged.audio.AudioMetadata
      @JvmName("getAudioMetadata")
      get() = _builder.getAudioMetadata()
      @JvmName("setAudioMetadata")
      set(value) {
        _builder.setAudioMetadata(value)
      }
    /**
     * `.unhinged.audio.v1.AudioMetadata audio_metadata = 2;`
     */
    public fun clearAudioMetadata() {
      _builder.clearAudioMetadata()
    }
    /**
     * `.unhinged.audio.v1.AudioMetadata audio_metadata = 2;`
     * @return Whether the audioMetadata field is set.
     */
    public fun hasAudioMetadata(): kotlin.Boolean {
      return _builder.hasAudioMetadata()
    }

    /**
     * `bool is_final_chunk = 3;`
     */
    public var isFinalChunk: kotlin.Boolean
      @JvmName("getIsFinalChunk")
      get() = _builder.getIsFinalChunk()
      @JvmName("setIsFinalChunk")
      set(value) {
        _builder.setIsFinalChunk(value)
      }
    /**
     * `bool is_final_chunk = 3;`
     */
    public fun clearIsFinalChunk() {
      _builder.clearIsFinalChunk()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.audio.STTChunkPayload.copy(block: `unhinged.audio`.STTChunkPayloadKt.Dsl.() -> kotlin.Unit): unhinged.audio.STTChunkPayload =
  `unhinged.audio`.STTChunkPayloadKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.audio.STTChunkPayloadOrBuilder.audioMetadataOrNull: unhinged.audio.AudioMetadata?
  get() = if (hasAudioMetadata()) getAudioMetadata() else null

