// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package unhinged.cdc;

@kotlin.jvm.JvmName("-initializesubscriptionOptions")
public inline fun subscriptionOptions(block: unhinged.cdc.SubscriptionOptionsKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcService.SubscriptionOptions =
  unhinged.cdc.SubscriptionOptionsKt.Dsl._create(unhinged.cdc.CdcService.SubscriptionOptions.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `unhinged.cdc.SubscriptionOptions`
 */
public object SubscriptionOptionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcService.SubscriptionOptions.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcService.SubscriptionOptions.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcService.SubscriptionOptions = _builder.build()

    /**
     * ```
     * Delivery options
     * ```
     *
     * `string delivery_mode = 1;`
     */
    public var deliveryMode: kotlin.String
      @JvmName("getDeliveryMode")
      get() = _builder.getDeliveryMode()
      @JvmName("setDeliveryMode")
      set(value) {
        _builder.setDeliveryMode(value)
      }
    /**
     * ```
     * Delivery options
     * ```
     *
     * `string delivery_mode = 1;`
     */
    public fun clearDeliveryMode() {
      _builder.clearDeliveryMode()
    }

    /**
     * `int32 batch_size = 2;`
     */
    public var batchSize: kotlin.Int
      @JvmName("getBatchSize")
      get() = _builder.getBatchSize()
      @JvmName("setBatchSize")
      set(value) {
        _builder.setBatchSize(value)
      }
    /**
     * `int32 batch_size = 2;`
     */
    public fun clearBatchSize() {
      _builder.clearBatchSize()
    }

    /**
     * `int32 batch_timeout_ms = 3;`
     */
    public var batchTimeoutMs: kotlin.Int
      @JvmName("getBatchTimeoutMs")
      get() = _builder.getBatchTimeoutMs()
      @JvmName("setBatchTimeoutMs")
      set(value) {
        _builder.setBatchTimeoutMs(value)
      }
    /**
     * `int32 batch_timeout_ms = 3;`
     */
    public fun clearBatchTimeoutMs() {
      _builder.clearBatchTimeoutMs()
    }

    /**
     * ```
     * Replay options
     * ```
     *
     * `bool replay_from_beginning = 4;`
     */
    public var replayFromBeginning: kotlin.Boolean
      @JvmName("getReplayFromBeginning")
      get() = _builder.getReplayFromBeginning()
      @JvmName("setReplayFromBeginning")
      set(value) {
        _builder.setReplayFromBeginning(value)
      }
    /**
     * ```
     * Replay options
     * ```
     *
     * `bool replay_from_beginning = 4;`
     */
    public fun clearReplayFromBeginning() {
      _builder.clearReplayFromBeginning()
    }

    /**
     * `int64 replay_from_sequence = 5;`
     */
    public var replayFromSequence: kotlin.Long
      @JvmName("getReplayFromSequence")
      get() = _builder.getReplayFromSequence()
      @JvmName("setReplayFromSequence")
      set(value) {
        _builder.setReplayFromSequence(value)
      }
    /**
     * `int64 replay_from_sequence = 5;`
     */
    public fun clearReplayFromSequence() {
      _builder.clearReplayFromSequence()
    }

    /**
     * `.google.protobuf.Timestamp replay_from_time = 6;`
     */
    public var replayFromTime: com.google.protobuf.Timestamp
      @JvmName("getReplayFromTime")
      get() = _builder.getReplayFromTime()
      @JvmName("setReplayFromTime")
      set(value) {
        _builder.setReplayFromTime(value)
      }
    /**
     * `.google.protobuf.Timestamp replay_from_time = 6;`
     */
    public fun clearReplayFromTime() {
      _builder.clearReplayFromTime()
    }
    /**
     * `.google.protobuf.Timestamp replay_from_time = 6;`
     * @return Whether the replayFromTime field is set.
     */
    public fun hasReplayFromTime(): kotlin.Boolean {
      return _builder.hasReplayFromTime()
    }

    /**
     * ```
     * Error handling
     * ```
     *
     * `int32 max_retry_attempts = 7;`
     */
    public var maxRetryAttempts: kotlin.Int
      @JvmName("getMaxRetryAttempts")
      get() = _builder.getMaxRetryAttempts()
      @JvmName("setMaxRetryAttempts")
      set(value) {
        _builder.setMaxRetryAttempts(value)
      }
    /**
     * ```
     * Error handling
     * ```
     *
     * `int32 max_retry_attempts = 7;`
     */
    public fun clearMaxRetryAttempts() {
      _builder.clearMaxRetryAttempts()
    }

    /**
     * `int32 retry_backoff_ms = 8;`
     */
    public var retryBackoffMs: kotlin.Int
      @JvmName("getRetryBackoffMs")
      get() = _builder.getRetryBackoffMs()
      @JvmName("setRetryBackoffMs")
      set(value) {
        _builder.setRetryBackoffMs(value)
      }
    /**
     * `int32 retry_backoff_ms = 8;`
     */
    public fun clearRetryBackoffMs() {
      _builder.clearRetryBackoffMs()
    }

    /**
     * `bool send_to_dlq_on_failure = 9;`
     */
    public var sendToDlqOnFailure: kotlin.Boolean
      @JvmName("getSendToDlqOnFailure")
      get() = _builder.getSendToDlqOnFailure()
      @JvmName("setSendToDlqOnFailure")
      set(value) {
        _builder.setSendToDlqOnFailure(value)
      }
    /**
     * `bool send_to_dlq_on_failure = 9;`
     */
    public fun clearSendToDlqOnFailure() {
      _builder.clearSendToDlqOnFailure()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcService.SubscriptionOptions.copy(block: `unhinged.cdc`.SubscriptionOptionsKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcService.SubscriptionOptions =
  `unhinged.cdc`.SubscriptionOptionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.cdc.CdcService.SubscriptionOptionsOrBuilder.replayFromTimeOrNull: com.google.protobuf.Timestamp?
  get() = if (hasReplayFromTime()) getReplayFromTime() else null

