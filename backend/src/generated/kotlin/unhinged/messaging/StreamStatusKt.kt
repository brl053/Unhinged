// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messaging.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package unhinged.messaging;

@kotlin.jvm.JvmName("-initializestreamStatus")
public inline fun streamStatus(block: unhinged.messaging.StreamStatusKt.Dsl.() -> kotlin.Unit): unhinged.messaging.Messaging.StreamStatus =
  unhinged.messaging.StreamStatusKt.Dsl._create(unhinged.messaging.Messaging.StreamStatus.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `unhinged.messaging.StreamStatus`
 */
public object StreamStatusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.messaging.Messaging.StreamStatus.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.messaging.Messaging.StreamStatus.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.messaging.Messaging.StreamStatus = _builder.build()

    /**
     * ```
     * "connected", "disconnected", "error"
     * ```
     *
     * `string status = 1;`
     */
    public var status: kotlin.String
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * ```
     * "connected", "disconnected", "error"
     * ```
     *
     * `string status = 1;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * `int32 messages_received = 2;`
     */
    public var messagesReceived: kotlin.Int
      @JvmName("getMessagesReceived")
      get() = _builder.getMessagesReceived()
      @JvmName("setMessagesReceived")
      set(value) {
        _builder.setMessagesReceived(value)
      }
    /**
     * `int32 messages_received = 2;`
     */
    public fun clearMessagesReceived() {
      _builder.clearMessagesReceived()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.messaging.Messaging.StreamStatus.copy(block: `unhinged.messaging`.StreamStatusKt.Dsl.() -> kotlin.Unit): unhinged.messaging.Messaging.StreamStatus =
  `unhinged.messaging`.StreamStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()

