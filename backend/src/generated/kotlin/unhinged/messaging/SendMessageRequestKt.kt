// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messaging.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package unhinged.messaging;

@kotlin.jvm.JvmName("-initializesendMessageRequest")
public inline fun sendMessageRequest(block: unhinged.messaging.SendMessageRequestKt.Dsl.() -> kotlin.Unit): unhinged.messaging.Messaging.SendMessageRequest =
  unhinged.messaging.SendMessageRequestKt.Dsl._create(unhinged.messaging.Messaging.SendMessageRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * Send a message
 * ```
 *
 * Protobuf type `unhinged.messaging.SendMessageRequest`
 */
public object SendMessageRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.messaging.Messaging.SendMessageRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.messaging.Messaging.SendMessageRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.messaging.Messaging.SendMessageRequest = _builder.build()

    /**
     * `.unhinged.messaging.Message message = 1;`
     */
    public var message: unhinged.messaging.Messaging.Message
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * `.unhinged.messaging.Message message = 1;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
    /**
     * `.unhinged.messaging.Message message = 1;`
     * @return Whether the message field is set.
     */
    public fun hasMessage(): kotlin.Boolean {
      return _builder.hasMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.messaging.Messaging.SendMessageRequest.copy(block: `unhinged.messaging`.SendMessageRequestKt.Dsl.() -> kotlin.Unit): unhinged.messaging.Messaging.SendMessageRequest =
  `unhinged.messaging`.SendMessageRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.messaging.Messaging.SendMessageRequestOrBuilder.messageOrNull: unhinged.messaging.Messaging.Message?
  get() = if (hasMessage()) getMessage() else null

