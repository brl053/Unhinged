# Unhinged Production Port Allocation Configuration
# @llm-type infrastructure-config
# @llm-legend Definitive port mapping for all Unhinged services using categorical allocation
# @llm-key Production port assignments eliminating conflicts through systematic categorization
# @llm-map Central configuration driving docker-compose port generation and service discovery
# @llm-axiom All services must have deterministic ports within their logical category ranges
# @llm-token port-mapping-config: Authoritative service port allocation for Unhinged architecture

version: "1.0"
generated: "2025-10-20T19:30:00Z"
description: "Unhinged categorical port allocation - conflict-free production mapping"

# Port Category Definitions
categories:
  frontend:
    range: [1000, 1099]
    description: "Web interfaces and user-facing applications"
  backend:
    range: [1100, 1199]
    description: "REST APIs and application services"
  database:
    range: [1200, 1299]
    description: "SQL, NoSQL, and graph databases"
  vector:
    range: [1300, 1399]
    description: "Vector databases and AI data stores"
  messaging:
    range: [1400, 1499]
    description: "Event streaming and message brokers"
  ai_ml:
    range: [1500, 1599]
    description: "Machine learning and AI processing"
  admin:
    range: [1600, 1699]
    description: "Management and administrative interfaces"
  storage:
    range: [1700, 1799]
    description: "Object storage and file systems"
  observability:
    range: [1800, 1899]
    description: "Monitoring, logging, and tracing"
  platform:
    range: [1900, 1999]
    description: "Core platform and infrastructure"
  gateway:
    range: [2000, 2099]
    description: "API gateways and ingress controllers (future)"
  security:
    range: [2100, 2199]
    description: "Authentication and security tools (future)"

# Service Port Mappings
services:
  # Frontend Services (1000-1099)
  frontend:
    category: frontend
    external_port: 1000
    internal_port: 3000
    description: "React web interface"
    files: ["docker-compose.yml"]

  # Backend APIs (1100-1199)
  backend:
    category: backend
    external_port: 1100
    internal_port: 8080
    description: "Main application API"
    files: ["docker-compose.yml", "build-config.yml"]

  speech-to-text:
    category: backend
    external_port: 1101
    internal_port: 8000
    description: "Whisper speech-to-text API"
    files: ["docker-compose.yml"]

  text-to-speech:
    category: backend
    external_port: 1102
    internal_port: 8000
    description: "Text-to-speech synthesis API"
    files: ["docker-compose.yml"]

  vision-ai:
    category: backend
    external_port: 1103
    internal_port: 8000
    description: "Computer vision processing API"
    files: ["docker-compose.yml", "docker-compose.simple.yml"]

  whisper-tts:
    category: backend
    external_port: 1104
    internal_port: 8000
    description: "Audio processing API"
    files: ["build-config.yml", "docker-compose.simple.yml"]

  # Databases (1200-1299)
  database:
    category: database
    external_port: 1200
    internal_port: 5432
    description: "PostgreSQL main database"
    files: ["docker-compose.yml", "build-config.yml"]

  postgres:
    category: database
    external_port: 1201
    internal_port: 5432
    description: "PostgreSQL simple deployment"
    files: ["docker-compose.simple.yml"]

  cockroachdb:
    category: database
    external_port: 1202
    internal_port: 26257
    description: "CockroachDB distributed SQL"
    files: ["docker-compose.yml", "platforms/docker-compose.all.yml"]

  cockroachdb-ui:
    category: database
    external_port: 1203
    internal_port: 8080
    description: "CockroachDB admin interface"
    files: ["docker-compose.yml", "platforms/docker-compose.all.yml"]

  mongodb:
    category: database
    external_port: 1204
    internal_port: 27017
    description: "MongoDB document store"
    files: ["docker-compose.yml", "platforms/docker-compose.all.yml"]

  neo4j-http:
    category: database
    external_port: 1205
    internal_port: 7474
    description: "Neo4j graph database HTTP"
    files: ["docker-compose.yml", "platforms/docker-compose.all.yml"]

  neo4j-bolt:
    category: database
    external_port: 1206
    internal_port: 7687
    description: "Neo4j graph database Bolt"
    files: ["docker-compose.yml", "platforms/docker-compose.all.yml"]

  cassandra:
    category: database
    external_port: 1207
    internal_port: 9042
    description: "Cassandra wide-column store"
    files: ["docker-compose.yml", "platforms/docker-compose.all.yml"]

  # Vector/AI Stores (1300-1399)
  weaviate:
    category: vector
    external_port: 1300
    internal_port: 8080
    description: "Weaviate vector database"
    files: ["docker-compose.yml", "platforms/docker-compose.all.yml"]

  chroma:
    category: vector
    external_port: 1301
    internal_port: 8000
    description: "Chroma vector store"
    files: ["docker-compose.yml"]

  redis:
    category: vector
    external_port: 1302
    internal_port: 6379
    description: "Redis cache and vector store"
    files: ["docker-compose.yml", "platforms/docker-compose.all.yml"]

  elasticsearch:
    category: vector
    external_port: 1303
    internal_port: 9200
    description: "Elasticsearch search and vector"
    files: ["docker-compose.yml", "platforms/docker-compose.all.yml"]

  # Message Queues/Streaming (1400-1499)
  kafka:
    category: messaging
    external_port: 1400
    internal_port: 9092
    description: "Apache Kafka event streaming"
    files: ["docker-compose.yml", "build-config.yml"]

  zookeeper:
    category: messaging
    external_port: 1401
    internal_port: 2181
    description: "Zookeeper coordination service"
    files: ["docker-compose.yml", "build-config.yml"]

  cdc-service:
    category: messaging
    external_port: 1402
    internal_port: 8080
    description: "Change data capture service"
    files: ["docker-compose.yml"]

  # AI/ML Services (1500-1599)
  llm:
    category: ai_ml
    external_port: 1500
    internal_port: 11434
    description: "Large language model service"
    files: ["docker-compose.yml", "build-config.yml"]

  flink-jobmanager:
    category: ai_ml
    external_port: 1501
    internal_port: 8081
    description: "Apache Flink stream processing"
    files: ["docker-compose.yml"]

  spark-master:
    category: ai_ml
    external_port: 1502
    internal_port: 7077
    description: "Apache Spark cluster master"
    files: ["docker-compose.yml"]

  # Admin/Management UIs (1600-1699)
  kafka-ui:
    category: admin
    external_port: 1600
    internal_port: 8080
    description: "Kafka management interface"
    files: ["docker-compose.yml"]

  spark-ui:
    category: admin
    external_port: 1601
    internal_port: 8080
    description: "Spark cluster web UI"
    files: ["docker-compose.yml"]

  persistence-platform-ui:
    category: admin
    external_port: 1602
    internal_port: 9090
    description: "Data platform management UI"
    files: ["platforms/docker-compose.all.yml"]

  # Storage/Object Store (1700-1799)
  minio-api:
    category: storage
    external_port: 1700
    internal_port: 9000
    description: "MinIO S3-compatible API"
    files: ["docker-compose.yml", "platforms/docker-compose.all.yml"]

  minio-console:
    category: storage
    external_port: 1701
    internal_port: 9001
    description: "MinIO management console"
    files: ["docker-compose.yml", "platforms/docker-compose.all.yml"]

  # Observability/Monitoring (1800-1899)
  jaeger-ui:
    category: observability
    external_port: 1800
    internal_port: 16686
    description: "Jaeger distributed tracing UI"
    files: ["platforms/docker-compose.all.yml"]

  jaeger-collector:
    category: observability
    external_port: 1801
    internal_port: 14268
    description: "Jaeger trace collector"
    files: ["platforms/docker-compose.all.yml"]

  loki:
    category: observability
    external_port: 1802
    internal_port: 3100
    description: "Loki log aggregation"
    files: ["docker-compose.observability.yml"]

  tempo-http:
    category: observability
    external_port: 1803
    internal_port: 3200
    description: "Tempo trace storage HTTP"
    files: ["docker-compose.observability.yml"]

  tempo-grpc:
    category: observability
    external_port: 1804
    internal_port: 4317
    description: "Tempo trace storage gRPC"
    files: ["docker-compose.observability.yml"]

  tempo-otlp:
    category: observability
    external_port: 1805
    internal_port: 4318
    description: "Tempo OTLP endpoint"
    files: ["docker-compose.observability.yml"]

  prometheus:
    category: observability
    external_port: 1806
    internal_port: 9090
    description: "Prometheus metrics collection"
    files: ["docker-compose.yml", "docker-compose.observability.yml", "platforms/docker-compose.all.yml"]

  grafana:
    category: observability
    external_port: 1807
    internal_port: 3000
    description: "Grafana dashboards and visualization"
    files: ["docker-compose.yml", "docker-compose.observability.yml", "platforms/docker-compose.all.yml"]

  otel-collector-grpc:
    category: observability
    external_port: 1808
    internal_port: 4317
    description: "OpenTelemetry collector gRPC"
    files: ["docker-compose.observability.yml"]

  otel-collector-http:
    category: observability
    external_port: 1809
    internal_port: 4318
    description: "OpenTelemetry collector HTTP"
    files: ["docker-compose.observability.yml"]

  otel-collector-metrics:
    category: observability
    external_port: 1810
    internal_port: 8889
    description: "OpenTelemetry collector metrics"
    files: ["docker-compose.observability.yml"]

  # Platform Services (1900-1999)
  persistence-platform-api:
    category: platform
    external_port: 1900
    internal_port: 8080
    description: "Data platform API service"
    files: ["platforms/docker-compose.all.yml"]

# Reserved for Future Use
# Gateway/Ingress Services (2000-2099)
# api-gateway: 2000:8080
# nginx-ingress: 2001:80
# control-proxy: 2002:9000

# Security Services (2100-2199)  
# vault: 2100:8200
# oauth-proxy: 2101:4180
