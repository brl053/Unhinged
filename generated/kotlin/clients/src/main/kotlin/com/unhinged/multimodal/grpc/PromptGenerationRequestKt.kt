//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: context_service.proto

package com.unhinged.multimodal.grpc;

@kotlin.jvm.JvmName("-initializepromptGenerationRequest")
public inline fun promptGenerationRequest(block: com.unhinged.multimodal.grpc.PromptGenerationRequestKt.Dsl.() -> kotlin.Unit): com.unhinged.multimodal.grpc.PromptGenerationRequest =
  com.unhinged.multimodal.grpc.PromptGenerationRequestKt.Dsl._create(com.unhinged.multimodal.grpc.PromptGenerationRequest.newBuilder()).apply { block() }._build()
public object PromptGenerationRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.unhinged.multimodal.grpc.PromptGenerationRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.unhinged.multimodal.grpc.PromptGenerationRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.unhinged.multimodal.grpc.PromptGenerationRequest = _builder.build()

    /**
     * <pre>
     * Base prompt to enhance
     * </pre>
     *
     * <code>string base_prompt = 1;</code>
     */
    public var basePrompt: kotlin.String
      @JvmName("getBasePrompt")
      get() = _builder.getBasePrompt()
      @JvmName("setBasePrompt")
      set(value) {
        _builder.setBasePrompt(value)
      }
    /**
     * <pre>
     * Base prompt to enhance
     * </pre>
     *
     * <code>string base_prompt = 1;</code>
     */
    public fun clearBasePrompt() {
      _builder.clearBasePrompt()
    }

    /**
     * <pre>
     * Type of analysis (screenshot, natural_image, document, ui_component)
     * </pre>
     *
     * <code>string analysis_type = 2;</code>
     */
    public var analysisType: kotlin.String
      @JvmName("getAnalysisType")
      get() = _builder.getAnalysisType()
      @JvmName("setAnalysisType")
      set(value) {
        _builder.setAnalysisType(value)
      }
    /**
     * <pre>
     * Type of analysis (screenshot, natural_image, document, ui_component)
     * </pre>
     *
     * <code>string analysis_type = 2;</code>
     */
    public fun clearAnalysisType() {
      _builder.clearAnalysisType()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ContextTypesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Types of context to include (documentation, ui_components, api_endpoints, architecture)
     * </pre>
     *
     * <code>repeated string context_types = 3;</code>
     * @return A list containing the contextTypes.
     */
    public val contextTypes: com.google.protobuf.kotlin.DslList<kotlin.String, ContextTypesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getContextTypesList()
      )
    /**
     * <pre>
     * Types of context to include (documentation, ui_components, api_endpoints, architecture)
     * </pre>
     *
     * <code>repeated string context_types = 3;</code>
     * @param value The contextTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addContextTypes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextTypesProxy>.add(value: kotlin.String) {
      _builder.addContextTypes(value)
    }
    /**
     * <pre>
     * Types of context to include (documentation, ui_components, api_endpoints, architecture)
     * </pre>
     *
     * <code>repeated string context_types = 3;</code>
     * @param value The contextTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignContextTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextTypesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * Types of context to include (documentation, ui_components, api_endpoints, architecture)
     * </pre>
     *
     * <code>repeated string context_types = 3;</code>
     * @param values The contextTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllContextTypes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextTypesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllContextTypes(values)
    }
    /**
     * <pre>
     * Types of context to include (documentation, ui_components, api_endpoints, architecture)
     * </pre>
     *
     * <code>repeated string context_types = 3;</code>
     * @param values The contextTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllContextTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextTypesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * Types of context to include (documentation, ui_components, api_endpoints, architecture)
     * </pre>
     *
     * <code>repeated string context_types = 3;</code>
     * @param index The index to set the value at.
     * @param value The contextTypes to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setContextTypes")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextTypesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setContextTypes(index, value)
    }/**
     * <pre>
     * Types of context to include (documentation, ui_components, api_endpoints, architecture)
     * </pre>
     *
     * <code>repeated string context_types = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearContextTypes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextTypesProxy>.clear() {
      _builder.clearContextTypes()
    }
    /**
     * <pre>
     * Maximum number of context items to include
     * </pre>
     *
     * <code>int32 max_context_items = 4;</code>
     */
    public var maxContextItems: kotlin.Int
      @JvmName("getMaxContextItems")
      get() = _builder.getMaxContextItems()
      @JvmName("setMaxContextItems")
      set(value) {
        _builder.setMaxContextItems(value)
      }
    /**
     * <pre>
     * Maximum number of context items to include
     * </pre>
     *
     * <code>int32 max_context_items = 4;</code>
     */
    public fun clearMaxContextItems() {
      _builder.clearMaxContextItems()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ContextHintsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Additional context hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_hints = 5;</code>
     */
     public val contextHints: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ContextHintsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getContextHintsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getContextHintsMap()
      )
    /**
     * <pre>
     * Additional context hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_hints = 5;</code>
     */
    @JvmName("putContextHints")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ContextHintsProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putContextHints(key, value)
       }
    /**
     * <pre>
     * Additional context hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_hints = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setContextHints")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ContextHintsProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <pre>
     * Additional context hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_hints = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeContextHints")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ContextHintsProxy>
      .remove(key: kotlin.String) {
         _builder.removeContextHints(key)
       }
    /**
     * <pre>
     * Additional context hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_hints = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllContextHints")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ContextHintsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllContextHints(map)
       }
    /**
     * <pre>
     * Additional context hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; context_hints = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearContextHints")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ContextHintsProxy>
      .clear() {
         _builder.clearContextHints()
       }

    /**
     * <pre>
     * LLM model to use for generation
     * </pre>
     *
     * <code>string model = 6;</code>
     */
    public var model: kotlin.String
      @JvmName("getModel")
      get() = _builder.getModel()
      @JvmName("setModel")
      set(value) {
        _builder.setModel(value)
      }
    /**
     * <pre>
     * LLM model to use for generation
     * </pre>
     *
     * <code>string model = 6;</code>
     */
    public fun clearModel() {
      _builder.clearModel()
    }

    /**
     * <pre>
     * Maximum tokens for enhanced prompt
     * </pre>
     *
     * <code>int32 max_tokens = 7;</code>
     */
    public var maxTokens: kotlin.Int
      @JvmName("getMaxTokens")
      get() = _builder.getMaxTokens()
      @JvmName("setMaxTokens")
      set(value) {
        _builder.setMaxTokens(value)
      }
    /**
     * <pre>
     * Maximum tokens for enhanced prompt
     * </pre>
     *
     * <code>int32 max_tokens = 7;</code>
     */
    public fun clearMaxTokens() {
      _builder.clearMaxTokens()
    }

    /**
     * <pre>
     * Temperature for generation
     * </pre>
     *
     * <code>float temperature = 8;</code>
     */
    public var temperature: kotlin.Float
      @JvmName("getTemperature")
      get() = _builder.getTemperature()
      @JvmName("setTemperature")
      set(value) {
        _builder.setTemperature(value)
      }
    /**
     * <pre>
     * Temperature for generation
     * </pre>
     *
     * <code>float temperature = 8;</code>
     */
    public fun clearTemperature() {
      _builder.clearTemperature()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.unhinged.multimodal.grpc.PromptGenerationRequest.copy(block: com.unhinged.multimodal.grpc.PromptGenerationRequestKt.Dsl.() -> kotlin.Unit): com.unhinged.multimodal.grpc.PromptGenerationRequest =
  com.unhinged.multimodal.grpc.PromptGenerationRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

