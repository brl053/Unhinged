//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google/protobuf/duration.proto

package com.google.protobuf;

@kotlin.jvm.JvmName("-initializeduration")
public inline fun duration(block: com.google.protobuf.DurationKt.Dsl.() -> kotlin.Unit): com.google.protobuf.Duration =
  com.google.protobuf.DurationKt.Dsl._create(com.google.protobuf.Duration.newBuilder()).apply { block() }._build()
public object DurationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.google.protobuf.Duration.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.protobuf.Duration.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.protobuf.Duration = _builder.build()

    /**
     * <pre>
     * Signed seconds of the span of time. Must be from -315,576,000,000
     * to +315,576,000,000 inclusive. Note: these bounds are computed from:
     * 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
     * </pre>
     *
     * <code>int64 seconds = 1;</code>
     */
    public var seconds: kotlin.Long
      @JvmName("getSeconds")
      get() = _builder.getSeconds()
      @JvmName("setSeconds")
      set(value) {
        _builder.setSeconds(value)
      }
    /**
     * <pre>
     * Signed seconds of the span of time. Must be from -315,576,000,000
     * to +315,576,000,000 inclusive. Note: these bounds are computed from:
     * 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
     * </pre>
     *
     * <code>int64 seconds = 1;</code>
     */
    public fun clearSeconds() {
      _builder.clearSeconds()
    }

    /**
     * <pre>
     * Signed fractions of a second at nanosecond resolution of the span
     * of time. Durations less than one second are represented with a 0
     * `seconds` field and a positive or negative `nanos` field. For durations
     * of one second or more, a non-zero value for the `nanos` field must be
     * of the same sign as the `seconds` field. Must be from -999,999,999
     * to +999,999,999 inclusive.
     * </pre>
     *
     * <code>int32 nanos = 2;</code>
     */
    public var nanos: kotlin.Int
      @JvmName("getNanos")
      get() = _builder.getNanos()
      @JvmName("setNanos")
      set(value) {
        _builder.setNanos(value)
      }
    /**
     * <pre>
     * Signed fractions of a second at nanosecond resolution of the span
     * of time. Durations less than one second are represented with a 0
     * `seconds` field and a positive or negative `nanos` field. For durations
     * of one second or more, a non-zero value for the `nanos` field must be
     * of the same sign as the `seconds` field. Must be from -999,999,999
     * to +999,999,999 inclusive.
     * </pre>
     *
     * <code>int32 nanos = 2;</code>
     */
    public fun clearNanos() {
      _builder.clearNanos()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.google.protobuf.Duration.copy(block: com.google.protobuf.DurationKt.Dsl.() -> kotlin.Unit): com.google.protobuf.Duration =
  com.google.protobuf.DurationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

