//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: observability.proto

package unhinged.observability;

@kotlin.jvm.JvmName("-initializepartitionInfo")
public inline fun partitionInfo(block: unhinged.observability.PartitionInfoKt.Dsl.() -> kotlin.Unit): unhinged.observability.PartitionInfo =
  unhinged.observability.PartitionInfoKt.Dsl._create(unhinged.observability.PartitionInfo.newBuilder()).apply { block() }._build()
public object PartitionInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.observability.PartitionInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.observability.PartitionInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.observability.PartitionInfo = _builder.build()

    /**
     * <pre>
     * Date-based partition (YYYY-MM-DD)
     * </pre>
     *
     * <code>string date_partition = 1;</code>
     */
    public var datePartition: kotlin.String
      @JvmName("getDatePartition")
      get() = _builder.getDatePartition()
      @JvmName("setDatePartition")
      set(value) {
        _builder.setDatePartition(value)
      }
    /**
     * <pre>
     * Date-based partition (YYYY-MM-DD)
     * </pre>
     *
     * <code>string date_partition = 1;</code>
     */
    public fun clearDatePartition() {
      _builder.clearDatePartition()
    }

    /**
     * <pre>
     * Hour-based partition (HH)
     * </pre>
     *
     * <code>string hour_partition = 2;</code>
     */
    public var hourPartition: kotlin.String
      @JvmName("getHourPartition")
      get() = _builder.getHourPartition()
      @JvmName("setHourPartition")
      set(value) {
        _builder.setHourPartition(value)
      }
    /**
     * <pre>
     * Hour-based partition (HH)
     * </pre>
     *
     * <code>string hour_partition = 2;</code>
     */
    public fun clearHourPartition() {
      _builder.clearHourPartition()
    }

    /**
     * <pre>
     * Service-based partition
     * </pre>
     *
     * <code>string service_partition = 3;</code>
     */
    public var servicePartition: kotlin.String
      @JvmName("getServicePartition")
      get() = _builder.getServicePartition()
      @JvmName("setServicePartition")
      set(value) {
        _builder.setServicePartition(value)
      }
    /**
     * <pre>
     * Service-based partition
     * </pre>
     *
     * <code>string service_partition = 3;</code>
     */
    public fun clearServicePartition() {
      _builder.clearServicePartition()
    }

    /**
     * <pre>
     * Log level partition
     * </pre>
     *
     * <code>string level_partition = 4;</code>
     */
    public var levelPartition: kotlin.String
      @JvmName("getLevelPartition")
      get() = _builder.getLevelPartition()
      @JvmName("setLevelPartition")
      set(value) {
        _builder.setLevelPartition(value)
      }
    /**
     * <pre>
     * Log level partition
     * </pre>
     *
     * <code>string level_partition = 4;</code>
     */
    public fun clearLevelPartition() {
      _builder.clearLevelPartition()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class CustomPartitionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Custom partition keys
     * </pre>
     *
     * <code>map&lt;string, string&gt; custom_partitions = 10;</code>
     */
     public val customPartitions: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, CustomPartitionsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getCustomPartitionsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getCustomPartitionsMap()
      )
    /**
     * <pre>
     * Custom partition keys
     * </pre>
     *
     * <code>map&lt;string, string&gt; custom_partitions = 10;</code>
     */
    @JvmName("putCustomPartitions")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, CustomPartitionsProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putCustomPartitions(key, value)
       }
    /**
     * <pre>
     * Custom partition keys
     * </pre>
     *
     * <code>map&lt;string, string&gt; custom_partitions = 10;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setCustomPartitions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, CustomPartitionsProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <pre>
     * Custom partition keys
     * </pre>
     *
     * <code>map&lt;string, string&gt; custom_partitions = 10;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeCustomPartitions")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, CustomPartitionsProxy>
      .remove(key: kotlin.String) {
         _builder.removeCustomPartitions(key)
       }
    /**
     * <pre>
     * Custom partition keys
     * </pre>
     *
     * <code>map&lt;string, string&gt; custom_partitions = 10;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllCustomPartitions")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, CustomPartitionsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllCustomPartitions(map)
       }
    /**
     * <pre>
     * Custom partition keys
     * </pre>
     *
     * <code>map&lt;string, string&gt; custom_partitions = 10;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearCustomPartitions")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, CustomPartitionsProxy>
      .clear() {
         _builder.clearCustomPartitions()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.observability.PartitionInfo.copy(block: unhinged.observability.PartitionInfoKt.Dsl.() -> kotlin.Unit): unhinged.observability.PartitionInfo =
  unhinged.observability.PartitionInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

