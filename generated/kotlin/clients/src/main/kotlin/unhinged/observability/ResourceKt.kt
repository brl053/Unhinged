//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: observability.proto

package unhinged.observability;

@kotlin.jvm.JvmName("-initializeresource")
public inline fun resource(block: unhinged.observability.ResourceKt.Dsl.() -> kotlin.Unit): unhinged.observability.Resource =
  unhinged.observability.ResourceKt.Dsl._create(unhinged.observability.Resource.newBuilder()).apply { block() }._build()
public object ResourceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.observability.Resource.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.observability.Resource.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.observability.Resource = _builder.build()

    /**
     * <pre>
     * Service name (e.g., "chat-service")
     * </pre>
     *
     * <code>string service_name = 1;</code>
     */
    public var serviceName: kotlin.String
      @JvmName("getServiceName")
      get() = _builder.getServiceName()
      @JvmName("setServiceName")
      set(value) {
        _builder.setServiceName(value)
      }
    /**
     * <pre>
     * Service name (e.g., "chat-service")
     * </pre>
     *
     * <code>string service_name = 1;</code>
     */
    public fun clearServiceName() {
      _builder.clearServiceName()
    }

    /**
     * <pre>
     * Service version
     * </pre>
     *
     * <code>string service_version = 2;</code>
     */
    public var serviceVersion: kotlin.String
      @JvmName("getServiceVersion")
      get() = _builder.getServiceVersion()
      @JvmName("setServiceVersion")
      set(value) {
        _builder.setServiceVersion(value)
      }
    /**
     * <pre>
     * Service version
     * </pre>
     *
     * <code>string service_version = 2;</code>
     */
    public fun clearServiceVersion() {
      _builder.clearServiceVersion()
    }

    /**
     * <pre>
     * Instance identifier
     * </pre>
     *
     * <code>string service_instance_id = 3;</code>
     */
    public var serviceInstanceId: kotlin.String
      @JvmName("getServiceInstanceId")
      get() = _builder.getServiceInstanceId()
      @JvmName("setServiceInstanceId")
      set(value) {
        _builder.setServiceInstanceId(value)
      }
    /**
     * <pre>
     * Instance identifier
     * </pre>
     *
     * <code>string service_instance_id = 3;</code>
     */
    public fun clearServiceInstanceId() {
      _builder.clearServiceInstanceId()
    }

    /**
     * <pre>
     * Environment (dev/staging/prod)
     * </pre>
     *
     * <code>string deployment_environment = 4;</code>
     */
    public var deploymentEnvironment: kotlin.String
      @JvmName("getDeploymentEnvironment")
      get() = _builder.getDeploymentEnvironment()
      @JvmName("setDeploymentEnvironment")
      set(value) {
        _builder.setDeploymentEnvironment(value)
      }
    /**
     * <pre>
     * Environment (dev/staging/prod)
     * </pre>
     *
     * <code>string deployment_environment = 4;</code>
     */
    public fun clearDeploymentEnvironment() {
      _builder.clearDeploymentEnvironment()
    }

    /**
     * <pre>
     * Kubernetes cluster
     * </pre>
     *
     * <code>string k8s_cluster_name = 5;</code>
     */
    public var k8SClusterName: kotlin.String
      @JvmName("getK8SClusterName")
      get() = _builder.getK8SClusterName()
      @JvmName("setK8SClusterName")
      set(value) {
        _builder.setK8SClusterName(value)
      }
    /**
     * <pre>
     * Kubernetes cluster
     * </pre>
     *
     * <code>string k8s_cluster_name = 5;</code>
     */
    public fun clearK8SClusterName() {
      _builder.clearK8SClusterName()
    }

    /**
     * <pre>
     * Kubernetes namespace
     * </pre>
     *
     * <code>string k8s_namespace = 6;</code>
     */
    public var k8SNamespace: kotlin.String
      @JvmName("getK8SNamespace")
      get() = _builder.getK8SNamespace()
      @JvmName("setK8SNamespace")
      set(value) {
        _builder.setK8SNamespace(value)
      }
    /**
     * <pre>
     * Kubernetes namespace
     * </pre>
     *
     * <code>string k8s_namespace = 6;</code>
     */
    public fun clearK8SNamespace() {
      _builder.clearK8SNamespace()
    }

    /**
     * <pre>
     * Pod name
     * </pre>
     *
     * <code>string k8s_pod_name = 7;</code>
     */
    public var k8SPodName: kotlin.String
      @JvmName("getK8SPodName")
      get() = _builder.getK8SPodName()
      @JvmName("setK8SPodName")
      set(value) {
        _builder.setK8SPodName(value)
      }
    /**
     * <pre>
     * Pod name
     * </pre>
     *
     * <code>string k8s_pod_name = 7;</code>
     */
    public fun clearK8SPodName() {
      _builder.clearK8SPodName()
    }

    /**
     * <pre>
     * Host name
     * </pre>
     *
     * <code>string host_name = 8;</code>
     */
    public var hostName: kotlin.String
      @JvmName("getHostName")
      get() = _builder.getHostName()
      @JvmName("setHostName")
      set(value) {
        _builder.setHostName(value)
      }
    /**
     * <pre>
     * Host name
     * </pre>
     *
     * <code>string host_name = 8;</code>
     */
    public fun clearHostName() {
      _builder.clearHostName()
    }

    /**
     * <pre>
     * Host architecture
     * </pre>
     *
     * <code>string host_arch = 9;</code>
     */
    public var hostArch: kotlin.String
      @JvmName("getHostArch")
      get() = _builder.getHostArch()
      @JvmName("setHostArch")
      set(value) {
        _builder.setHostArch(value)
      }
    /**
     * <pre>
     * Host architecture
     * </pre>
     *
     * <code>string host_arch = 9;</code>
     */
    public fun clearHostArch() {
      _builder.clearHostArch()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AttributesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Custom resource attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 20;</code>
     */
     public val attributes: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, AttributesProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getAttributesMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getAttributesMap()
      )
    /**
     * <pre>
     * Custom resource attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 20;</code>
     */
    @JvmName("putAttributes")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, AttributesProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putAttributes(key, value)
       }
    /**
     * <pre>
     * Custom resource attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 20;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setAttributes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, AttributesProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <pre>
     * Custom resource attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 20;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeAttributes")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, AttributesProxy>
      .remove(key: kotlin.String) {
         _builder.removeAttributes(key)
       }
    /**
     * <pre>
     * Custom resource attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 20;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllAttributes")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, AttributesProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllAttributes(map)
       }
    /**
     * <pre>
     * Custom resource attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 20;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearAttributes")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, AttributesProxy>
      .clear() {
         _builder.clearAttributes()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.observability.Resource.copy(block: unhinged.observability.ResourceKt.Dsl.() -> kotlin.Unit): unhinged.observability.Resource =
  unhinged.observability.ResourceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

