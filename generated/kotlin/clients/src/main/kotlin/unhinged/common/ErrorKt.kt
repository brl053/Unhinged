//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: common.proto

package unhinged.common;

@kotlin.jvm.JvmName("-initializeerror")
public inline fun error(block: unhinged.common.ErrorKt.Dsl.() -> kotlin.Unit): unhinged.common.Error =
  unhinged.common.ErrorKt.Dsl._create(unhinged.common.Error.newBuilder()).apply { block() }._build()
public object ErrorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.common.Error.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.common.Error.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.common.Error = _builder.build()

    /**
     * <pre>
     * Standard error code
     * </pre>
     *
     * <code>.unhinged.common.v1.ErrorCode code = 1;</code>
     */
    public var code: unhinged.common.ErrorCode
      @JvmName("getCode")
      get() = _builder.getCode()
      @JvmName("setCode")
      set(value) {
        _builder.setCode(value)
      }
    /**
     * <pre>
     * Standard error code
     * </pre>
     *
     * <code>.unhinged.common.v1.ErrorCode code = 1;</code>
     */
    public fun clearCode() {
      _builder.clearCode()
    }

    /**
     * <pre>
     * Human-readable error message
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <pre>
     * Human-readable error message
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * <pre>
     * Additional error details
     * </pre>
     *
     * <code>string details = 3;</code>
     */
    public var details: kotlin.String
      @JvmName("getDetails")
      get() = _builder.getDetails()
      @JvmName("setDetails")
      set(value) {
        _builder.setDetails(value)
      }
    /**
     * <pre>
     * Additional error details
     * </pre>
     *
     * <code>string details = 3;</code>
     */
    public fun clearDetails() {
      _builder.clearDetails()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FieldErrorsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Field-specific validation errors
     * </pre>
     *
     * <code>repeated .unhinged.common.v1.ErrorField field_errors = 4;</code>
     */
     public val fieldErrors: com.google.protobuf.kotlin.DslList<unhinged.common.ErrorField, FieldErrorsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFieldErrorsList()
      )
    /**
     * <pre>
     * Field-specific validation errors
     * </pre>
     *
     * <code>repeated .unhinged.common.v1.ErrorField field_errors = 4;</code>
     * @param value The fieldErrors to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFieldErrors")
    public fun com.google.protobuf.kotlin.DslList<unhinged.common.ErrorField, FieldErrorsProxy>.add(value: unhinged.common.ErrorField) {
      _builder.addFieldErrors(value)
    }
    /**
     * <pre>
     * Field-specific validation errors
     * </pre>
     *
     * <code>repeated .unhinged.common.v1.ErrorField field_errors = 4;</code>
     * @param value The fieldErrors to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFieldErrors")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.common.ErrorField, FieldErrorsProxy>.plusAssign(value: unhinged.common.ErrorField) {
      add(value)
    }
    /**
     * <pre>
     * Field-specific validation errors
     * </pre>
     *
     * <code>repeated .unhinged.common.v1.ErrorField field_errors = 4;</code>
     * @param values The fieldErrors to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFieldErrors")
    public fun com.google.protobuf.kotlin.DslList<unhinged.common.ErrorField, FieldErrorsProxy>.addAll(values: kotlin.collections.Iterable<unhinged.common.ErrorField>) {
      _builder.addAllFieldErrors(values)
    }
    /**
     * <pre>
     * Field-specific validation errors
     * </pre>
     *
     * <code>repeated .unhinged.common.v1.ErrorField field_errors = 4;</code>
     * @param values The fieldErrors to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFieldErrors")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.common.ErrorField, FieldErrorsProxy>.plusAssign(values: kotlin.collections.Iterable<unhinged.common.ErrorField>) {
      addAll(values)
    }
    /**
     * <pre>
     * Field-specific validation errors
     * </pre>
     *
     * <code>repeated .unhinged.common.v1.ErrorField field_errors = 4;</code>
     * @param index The index to set the value at.
     * @param value The fieldErrors to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFieldErrors")
    public operator fun com.google.protobuf.kotlin.DslList<unhinged.common.ErrorField, FieldErrorsProxy>.set(index: kotlin.Int, value: unhinged.common.ErrorField) {
      _builder.setFieldErrors(index, value)
    }
    /**
     * <pre>
     * Field-specific validation errors
     * </pre>
     *
     * <code>repeated .unhinged.common.v1.ErrorField field_errors = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFieldErrors")
    public fun com.google.protobuf.kotlin.DslList<unhinged.common.ErrorField, FieldErrorsProxy>.clear() {
      _builder.clearFieldErrors()
    }


    /**
     * <pre>
     * Debug info (dev/staging only)
     * </pre>
     *
     * <code>.google.protobuf.Struct debug_info = 5;</code>
     */
    public var debugInfo: com.google.protobuf.Struct
      @JvmName("getDebugInfo")
      get() = _builder.getDebugInfo()
      @JvmName("setDebugInfo")
      set(value) {
        _builder.setDebugInfo(value)
      }
    /**
     * <pre>
     * Debug info (dev/staging only)
     * </pre>
     *
     * <code>.google.protobuf.Struct debug_info = 5;</code>
     */
    public fun clearDebugInfo() {
      _builder.clearDebugInfo()
    }
    /**
     * <pre>
     * Debug info (dev/staging only)
     * </pre>
     *
     * <code>.google.protobuf.Struct debug_info = 5;</code>
     * @return Whether the debugInfo field is set.
     */
    public fun hasDebugInfo(): kotlin.Boolean {
      return _builder.hasDebugInfo()
    }

    /**
     * <pre>
     * Request ID for tracing
     * </pre>
     *
     * <code>string request_id = 6;</code>
     */
    public var requestId: kotlin.String
      @JvmName("getRequestId")
      get() = _builder.getRequestId()
      @JvmName("setRequestId")
      set(value) {
        _builder.setRequestId(value)
      }
    /**
     * <pre>
     * Request ID for tracing
     * </pre>
     *
     * <code>string request_id = 6;</code>
     */
    public fun clearRequestId() {
      _builder.clearRequestId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.common.Error.copy(block: unhinged.common.ErrorKt.Dsl.() -> kotlin.Unit): unhinged.common.Error =
  unhinged.common.ErrorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.common.ErrorOrBuilder.debugInfoOrNull: com.google.protobuf.Struct?
  get() = if (hasDebugInfo()) getDebugInfo() else null

