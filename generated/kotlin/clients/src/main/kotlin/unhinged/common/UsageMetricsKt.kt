//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: common.proto

package unhinged.common;

@kotlin.jvm.JvmName("-initializeusageMetrics")
public inline fun usageMetrics(block: unhinged.common.UsageMetricsKt.Dsl.() -> kotlin.Unit): unhinged.common.UsageMetrics =
  unhinged.common.UsageMetricsKt.Dsl._create(unhinged.common.UsageMetrics.newBuilder()).apply { block() }._build()
public object UsageMetricsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.common.UsageMetrics.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.common.UsageMetrics.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.common.UsageMetrics = _builder.build()

    /**
     * <pre>
     * LLM token consumption
     * </pre>
     *
     * <code>.unhinged.common.v1.TokenUsage tokens = 1;</code>
     */
    public var tokens: unhinged.common.TokenUsage
      @JvmName("getTokens")
      get() = _builder.getTokens()
      @JvmName("setTokens")
      set(value) {
        _builder.setTokens(value)
      }
    /**
     * <pre>
     * LLM token consumption
     * </pre>
     *
     * <code>.unhinged.common.v1.TokenUsage tokens = 1;</code>
     */
    public fun clearTokens() {
      _builder.clearTokens()
    }
    /**
     * <pre>
     * LLM token consumption
     * </pre>
     *
     * <code>.unhinged.common.v1.TokenUsage tokens = 1;</code>
     * @return Whether the tokens field is set.
     */
    public fun hasTokens(): kotlin.Boolean {
      return _builder.hasTokens()
    }

    /**
     * <pre>
     * Audio processing metrics
     * </pre>
     *
     * <code>.unhinged.common.v1.AudioUsage audio = 2;</code>
     */
    public var audio: unhinged.common.AudioUsage
      @JvmName("getAudio")
      get() = _builder.getAudio()
      @JvmName("setAudio")
      set(value) {
        _builder.setAudio(value)
      }
    /**
     * <pre>
     * Audio processing metrics
     * </pre>
     *
     * <code>.unhinged.common.v1.AudioUsage audio = 2;</code>
     */
    public fun clearAudio() {
      _builder.clearAudio()
    }
    /**
     * <pre>
     * Audio processing metrics
     * </pre>
     *
     * <code>.unhinged.common.v1.AudioUsage audio = 2;</code>
     * @return Whether the audio field is set.
     */
    public fun hasAudio(): kotlin.Boolean {
      return _builder.hasAudio()
    }

    /**
     * <pre>
     * Data transfer metrics
     * </pre>
     *
     * <code>.unhinged.common.v1.DataUsage data = 3;</code>
     */
    public var data: unhinged.common.DataUsage
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * <pre>
     * Data transfer metrics
     * </pre>
     *
     * <code>.unhinged.common.v1.DataUsage data = 3;</code>
     */
    public fun clearData() {
      _builder.clearData()
    }
    /**
     * <pre>
     * Data transfer metrics
     * </pre>
     *
     * <code>.unhinged.common.v1.DataUsage data = 3;</code>
     * @return Whether the data field is set.
     */
    public fun hasData(): kotlin.Boolean {
      return _builder.hasData()
    }

    /**
     * <pre>
     * Compute resource usage
     * </pre>
     *
     * <code>.unhinged.common.v1.ComputeUsage compute = 4;</code>
     */
    public var compute: unhinged.common.ComputeUsage
      @JvmName("getCompute")
      get() = _builder.getCompute()
      @JvmName("setCompute")
      set(value) {
        _builder.setCompute(value)
      }
    /**
     * <pre>
     * Compute resource usage
     * </pre>
     *
     * <code>.unhinged.common.v1.ComputeUsage compute = 4;</code>
     */
    public fun clearCompute() {
      _builder.clearCompute()
    }
    /**
     * <pre>
     * Compute resource usage
     * </pre>
     *
     * <code>.unhinged.common.v1.ComputeUsage compute = 4;</code>
     * @return Whether the compute field is set.
     */
    public fun hasCompute(): kotlin.Boolean {
      return _builder.hasCompute()
    }

    /**
     * <code>.google.protobuf.Duration processing_time = 5;</code>
     */
    public var processingTime: com.google.protobuf.Duration
      @JvmName("getProcessingTime")
      get() = _builder.getProcessingTime()
      @JvmName("setProcessingTime")
      set(value) {
        _builder.setProcessingTime(value)
      }
    /**
     * <code>.google.protobuf.Duration processing_time = 5;</code>
     */
    public fun clearProcessingTime() {
      _builder.clearProcessingTime()
    }
    /**
     * <code>.google.protobuf.Duration processing_time = 5;</code>
     * @return Whether the processingTime field is set.
     */
    public fun hasProcessingTime(): kotlin.Boolean {
      return _builder.hasProcessingTime()
    }

    /**
     * <code>.google.protobuf.Timestamp recorded_at = 6;</code>
     */
    public var recordedAt: com.google.protobuf.Timestamp
      @JvmName("getRecordedAt")
      get() = _builder.getRecordedAt()
      @JvmName("setRecordedAt")
      set(value) {
        _builder.setRecordedAt(value)
      }
    /**
     * <code>.google.protobuf.Timestamp recorded_at = 6;</code>
     */
    public fun clearRecordedAt() {
      _builder.clearRecordedAt()
    }
    /**
     * <code>.google.protobuf.Timestamp recorded_at = 6;</code>
     * @return Whether the recordedAt field is set.
     */
    public fun hasRecordedAt(): kotlin.Boolean {
      return _builder.hasRecordedAt()
    }

    /**
     * <pre>
     * Estimated cost in USD
     * </pre>
     *
     * <code>float cost_usd = 7;</code>
     */
    public var costUsd: kotlin.Float
      @JvmName("getCostUsd")
      get() = _builder.getCostUsd()
      @JvmName("setCostUsd")
      set(value) {
        _builder.setCostUsd(value)
      }
    /**
     * <pre>
     * Estimated cost in USD
     * </pre>
     *
     * <code>float cost_usd = 7;</code>
     */
    public fun clearCostUsd() {
      _builder.clearCostUsd()
    }
    public val metricCase: unhinged.common.UsageMetrics.MetricCase
      @JvmName("getMetricCase")
      get() = _builder.getMetricCase()

    public fun clearMetric() {
      _builder.clearMetric()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.common.UsageMetrics.copy(block: unhinged.common.UsageMetricsKt.Dsl.() -> kotlin.Unit): unhinged.common.UsageMetrics =
  unhinged.common.UsageMetricsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.common.UsageMetricsOrBuilder.tokensOrNull: unhinged.common.TokenUsage?
  get() = if (hasTokens()) getTokens() else null

public val unhinged.common.UsageMetricsOrBuilder.audioOrNull: unhinged.common.AudioUsage?
  get() = if (hasAudio()) getAudio() else null

public val unhinged.common.UsageMetricsOrBuilder.dataOrNull: unhinged.common.DataUsage?
  get() = if (hasData()) getData() else null

public val unhinged.common.UsageMetricsOrBuilder.computeOrNull: unhinged.common.ComputeUsage?
  get() = if (hasCompute()) getCompute() else null

public val unhinged.common.UsageMetricsOrBuilder.processingTimeOrNull: com.google.protobuf.Duration?
  get() = if (hasProcessingTime()) getProcessingTime() else null

public val unhinged.common.UsageMetricsOrBuilder.recordedAtOrNull: com.google.protobuf.Timestamp?
  get() = if (hasRecordedAt()) getRecordedAt() else null

