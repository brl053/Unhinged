//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: common.proto

package unhinged.common;

@kotlin.jvm.JvmName("-initializeresourceReference")
public inline fun resourceReference(block: unhinged.common.ResourceReferenceKt.Dsl.() -> kotlin.Unit): unhinged.common.ResourceReference =
  unhinged.common.ResourceReferenceKt.Dsl._create(unhinged.common.ResourceReference.newBuilder()).apply { block() }._build()
public object ResourceReferenceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.common.ResourceReference.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.common.ResourceReference.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.common.ResourceReference = _builder.build()

    /**
     * <pre>
     * "conversation", "document", "audio"
     * </pre>
     *
     * <code>string resource_type = 1;</code>
     */
    public var resourceType: kotlin.String
      @JvmName("getResourceType")
      get() = _builder.getResourceType()
      @JvmName("setResourceType")
      set(value) {
        _builder.setResourceType(value)
      }
    /**
     * <pre>
     * "conversation", "document", "audio"
     * </pre>
     *
     * <code>string resource_type = 1;</code>
     */
    public fun clearResourceType() {
      _builder.clearResourceType()
    }

    /**
     * <pre>
     * UUID of the referenced resource
     * </pre>
     *
     * <code>string resource_id = 2;</code>
     */
    public var resourceId: kotlin.String
      @JvmName("getResourceId")
      get() = _builder.getResourceId()
      @JvmName("setResourceId")
      set(value) {
        _builder.setResourceId(value)
      }
    /**
     * <pre>
     * UUID of the referenced resource
     * </pre>
     *
     * <code>string resource_id = 2;</code>
     */
    public fun clearResourceId() {
      _builder.clearResourceId()
    }

    /**
     * <pre>
     * Human-readable identifier
     * </pre>
     *
     * <code>string display_name = 3;</code>
     */
    public var displayName: kotlin.String
      @JvmName("getDisplayName")
      get() = _builder.getDisplayName()
      @JvmName("setDisplayName")
      set(value) {
        _builder.setDisplayName(value)
      }
    /**
     * <pre>
     * Human-readable identifier
     * </pre>
     *
     * <code>string display_name = 3;</code>
     */
    public fun clearDisplayName() {
      _builder.clearDisplayName()
    }

    /**
     * <pre>
     * Optional: direct access URL
     * </pre>
     *
     * <code>string url = 4;</code>
     */
    public var url: kotlin.String
      @JvmName("getUrl")
      get() = _builder.getUrl()
      @JvmName("setUrl")
      set(value) {
        _builder.setUrl(value)
      }
    /**
     * <pre>
     * Optional: direct access URL
     * </pre>
     *
     * <code>string url = 4;</code>
     */
    public fun clearUrl() {
      _builder.clearUrl()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.common.ResourceReference.copy(block: unhinged.common.ResourceReferenceKt.Dsl.() -> kotlin.Unit): unhinged.common.ResourceReference =
  unhinged.common.ResourceReferenceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

