//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: common.proto

package unhinged.common;

@kotlin.jvm.JvmName("-initializeattachment")
public inline fun attachment(block: unhinged.common.AttachmentKt.Dsl.() -> kotlin.Unit): unhinged.common.Attachment =
  unhinged.common.AttachmentKt.Dsl._create(unhinged.common.Attachment.newBuilder()).apply { block() }._build()
public object AttachmentKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.common.Attachment.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.common.Attachment.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.common.Attachment = _builder.build()

    /**
     * <pre>
     * UUID of the attachment
     * </pre>
     *
     * <code>string attachment_id = 1;</code>
     */
    public var attachmentId: kotlin.String
      @JvmName("getAttachmentId")
      get() = _builder.getAttachmentId()
      @JvmName("setAttachmentId")
      set(value) {
        _builder.setAttachmentId(value)
      }
    /**
     * <pre>
     * UUID of the attachment
     * </pre>
     *
     * <code>string attachment_id = 1;</code>
     */
    public fun clearAttachmentId() {
      _builder.clearAttachmentId()
    }

    /**
     * <pre>
     * Classification of attachment
     * </pre>
     *
     * <code>.unhinged.common.v1.AttachmentType type = 2;</code>
     */
    public var type: unhinged.common.AttachmentType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <pre>
     * Classification of attachment
     * </pre>
     *
     * <code>.unhinged.common.v1.AttachmentType type = 2;</code>
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * <pre>
     * Storage URL (internal or external)
     * </pre>
     *
     * <code>string url = 3;</code>
     */
    public var url: kotlin.String
      @JvmName("getUrl")
      get() = _builder.getUrl()
      @JvmName("setUrl")
      set(value) {
        _builder.setUrl(value)
      }
    /**
     * <pre>
     * Storage URL (internal or external)
     * </pre>
     *
     * <code>string url = 3;</code>
     */
    public fun clearUrl() {
      _builder.clearUrl()
    }

    /**
     * <pre>
     * Original filename
     * </pre>
     *
     * <code>string filename = 4;</code>
     */
    public var filename: kotlin.String
      @JvmName("getFilename")
      get() = _builder.getFilename()
      @JvmName("setFilename")
      set(value) {
        _builder.setFilename(value)
      }
    /**
     * <pre>
     * Original filename
     * </pre>
     *
     * <code>string filename = 4;</code>
     */
    public fun clearFilename() {
      _builder.clearFilename()
    }

    /**
     * <pre>
     * File size in bytes
     * </pre>
     *
     * <code>int64 size_bytes = 5;</code>
     */
    public var sizeBytes: kotlin.Long
      @JvmName("getSizeBytes")
      get() = _builder.getSizeBytes()
      @JvmName("setSizeBytes")
      set(value) {
        _builder.setSizeBytes(value)
      }
    /**
     * <pre>
     * File size in bytes
     * </pre>
     *
     * <code>int64 size_bytes = 5;</code>
     */
    public fun clearSizeBytes() {
      _builder.clearSizeBytes()
    }

    /**
     * <pre>
     * MIME type
     * </pre>
     *
     * <code>string mime_type = 6;</code>
     */
    public var mimeType: kotlin.String
      @JvmName("getMimeType")
      get() = _builder.getMimeType()
      @JvmName("setMimeType")
      set(value) {
        _builder.setMimeType(value)
      }
    /**
     * <pre>
     * MIME type
     * </pre>
     *
     * <code>string mime_type = 6;</code>
     */
    public fun clearMimeType() {
      _builder.clearMimeType()
    }

    /**
     * <pre>
     * Optional: thumbnail for images/videos
     * </pre>
     *
     * <code>string thumbnail_url = 7;</code>
     */
    public var thumbnailUrl: kotlin.String
      @JvmName("getThumbnailUrl")
      get() = _builder.getThumbnailUrl()
      @JvmName("setThumbnailUrl")
      set(value) {
        _builder.setThumbnailUrl(value)
      }
    /**
     * <pre>
     * Optional: thumbnail for images/videos
     * </pre>
     *
     * <code>string thumbnail_url = 7;</code>
     */
    public fun clearThumbnailUrl() {
      _builder.clearThumbnailUrl()
    }

    /**
     * <pre>
     * File-specific metadata
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 8;</code>
     */
    public var metadata: com.google.protobuf.Struct
      @JvmName("getMetadata")
      get() = _builder.getMetadata()
      @JvmName("setMetadata")
      set(value) {
        _builder.setMetadata(value)
      }
    /**
     * <pre>
     * File-specific metadata
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 8;</code>
     */
    public fun clearMetadata() {
      _builder.clearMetadata()
    }
    /**
     * <pre>
     * File-specific metadata
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 8;</code>
     * @return Whether the metadata field is set.
     */
    public fun hasMetadata(): kotlin.Boolean {
      return _builder.hasMetadata()
    }

    /**
     * <code>.google.protobuf.Timestamp uploaded_at = 9;</code>
     */
    public var uploadedAt: com.google.protobuf.Timestamp
      @JvmName("getUploadedAt")
      get() = _builder.getUploadedAt()
      @JvmName("setUploadedAt")
      set(value) {
        _builder.setUploadedAt(value)
      }
    /**
     * <code>.google.protobuf.Timestamp uploaded_at = 9;</code>
     */
    public fun clearUploadedAt() {
      _builder.clearUploadedAt()
    }
    /**
     * <code>.google.protobuf.Timestamp uploaded_at = 9;</code>
     * @return Whether the uploadedAt field is set.
     */
    public fun hasUploadedAt(): kotlin.Boolean {
      return _builder.hasUploadedAt()
    }

    /**
     * <pre>
     * User who uploaded the file
     * </pre>
     *
     * <code>string uploaded_by = 10;</code>
     */
    public var uploadedBy: kotlin.String
      @JvmName("getUploadedBy")
      get() = _builder.getUploadedBy()
      @JvmName("setUploadedBy")
      set(value) {
        _builder.setUploadedBy(value)
      }
    /**
     * <pre>
     * User who uploaded the file
     * </pre>
     *
     * <code>string uploaded_by = 10;</code>
     */
    public fun clearUploadedBy() {
      _builder.clearUploadedBy()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.common.Attachment.copy(block: unhinged.common.AttachmentKt.Dsl.() -> kotlin.Unit): unhinged.common.Attachment =
  unhinged.common.AttachmentKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.common.AttachmentOrBuilder.metadataOrNull: com.google.protobuf.Struct?
  get() = if (hasMetadata()) getMetadata() else null

public val unhinged.common.AttachmentOrBuilder.uploadedAtOrNull: com.google.protobuf.Timestamp?
  get() = if (hasUploadedAt()) getUploadedAt() else null

