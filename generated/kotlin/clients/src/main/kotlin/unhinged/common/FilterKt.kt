//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: common.proto

package unhinged.common;

@kotlin.jvm.JvmName("-initializefilter")
public inline fun filter(block: unhinged.common.FilterKt.Dsl.() -> kotlin.Unit): unhinged.common.Filter =
  unhinged.common.FilterKt.Dsl._create(unhinged.common.Filter.newBuilder()).apply { block() }._build()
public object FilterKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.common.Filter.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.common.Filter.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.common.Filter = _builder.build()

    /**
     * <pre>
     * Field to filter on (dot notation)
     * </pre>
     *
     * <code>string field = 1;</code>
     */
    public var field: kotlin.String
      @JvmName("getField")
      get() = _builder.getField()
      @JvmName("setField")
      set(value) {
        _builder.setField(value)
      }
    /**
     * <pre>
     * Field to filter on (dot notation)
     * </pre>
     *
     * <code>string field = 1;</code>
     */
    public fun clearField() {
      _builder.clearField()
    }

    /**
     * <pre>
     * Comparison operator
     * </pre>
     *
     * <code>.unhinged.common.v1.FilterOperator operator = 2;</code>
     */
    public var operator: unhinged.common.FilterOperator
      @JvmName("getOperator")
      get() = _builder.getOperator()
      @JvmName("setOperator")
      set(value) {
        _builder.setOperator(value)
      }
    /**
     * <pre>
     * Comparison operator
     * </pre>
     *
     * <code>.unhinged.common.v1.FilterOperator operator = 2;</code>
     */
    public fun clearOperator() {
      _builder.clearOperator()
    }

    /**
     * <pre>
     * Filter value
     * </pre>
     *
     * <code>string value = 3;</code>
     */
    public var value: kotlin.String
      @JvmName("getValue")
      get() = _builder.getValue()
      @JvmName("setValue")
      set(value) {
        _builder.setValue(value)
      }
    /**
     * <pre>
     * Filter value
     * </pre>
     *
     * <code>string value = 3;</code>
     */
    public fun clearValue() {
      _builder.clearValue()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Multiple values for IN operator
     * </pre>
     *
     * <code>repeated string values = 4;</code>
     * @return A list containing the values.
     */
    public val values: com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getValuesList()
      )
    /**
     * <pre>
     * Multiple values for IN operator
     * </pre>
     *
     * <code>repeated string values = 4;</code>
     * @param value The values to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addValues")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.add(value: kotlin.String) {
      _builder.addValues(value)
    }
    /**
     * <pre>
     * Multiple values for IN operator
     * </pre>
     *
     * <code>repeated string values = 4;</code>
     * @param value The values to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignValues")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * Multiple values for IN operator
     * </pre>
     *
     * <code>repeated string values = 4;</code>
     * @param values The values to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllValues")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllValues(values)
    }
    /**
     * <pre>
     * Multiple values for IN operator
     * </pre>
     *
     * <code>repeated string values = 4;</code>
     * @param values The values to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllValues")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * Multiple values for IN operator
     * </pre>
     *
     * <code>repeated string values = 4;</code>
     * @param index The index to set the value at.
     * @param value The values to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setValues")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setValues(index, value)
    }/**
     * <pre>
     * Multiple values for IN operator
     * </pre>
     *
     * <code>repeated string values = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearValues")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ValuesProxy>.clear() {
      _builder.clearValues()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.common.Filter.copy(block: unhinged.common.FilterKt.Dsl.() -> kotlin.Unit): unhinged.common.Filter =
  unhinged.common.FilterKt.Dsl._create(this.toBuilder()).apply { block() }._build()

