//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: common.proto

package unhinged.common;

@kotlin.jvm.JvmName("-initializeerrorField")
public inline fun errorField(block: unhinged.common.ErrorFieldKt.Dsl.() -> kotlin.Unit): unhinged.common.ErrorField =
  unhinged.common.ErrorFieldKt.Dsl._create(unhinged.common.ErrorField.newBuilder()).apply { block() }._build()
public object ErrorFieldKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.common.ErrorField.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.common.ErrorField.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.common.ErrorField = _builder.build()

    /**
     * <pre>
     * Field name (dot notation for nested)
     * </pre>
     *
     * <code>string field = 1;</code>
     */
    public var field: kotlin.String
      @JvmName("getField")
      get() = _builder.getField()
      @JvmName("setField")
      set(value) {
        _builder.setField(value)
      }
    /**
     * <pre>
     * Field name (dot notation for nested)
     * </pre>
     *
     * <code>string field = 1;</code>
     */
    public fun clearField() {
      _builder.clearField()
    }

    /**
     * <pre>
     * Field-specific error message
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <pre>
     * Field-specific error message
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * <pre>
     * Field error code (optional)
     * </pre>
     *
     * <code>string code = 3;</code>
     */
    public var code: kotlin.String
      @JvmName("getCode")
      get() = _builder.getCode()
      @JvmName("setCode")
      set(value) {
        _builder.setCode(value)
      }
    /**
     * <pre>
     * Field error code (optional)
     * </pre>
     *
     * <code>string code = 3;</code>
     */
    public fun clearCode() {
      _builder.clearCode()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.common.ErrorField.copy(block: unhinged.common.ErrorFieldKt.Dsl.() -> kotlin.Unit): unhinged.common.ErrorField =
  unhinged.common.ErrorFieldKt.Dsl._create(this.toBuilder()).apply { block() }._build()

