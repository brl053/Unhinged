//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messaging.proto

package unhinged.messaging;

@kotlin.jvm.JvmName("-initializeacknowledgeMessageResponse")
public inline fun acknowledgeMessageResponse(block: unhinged.messaging.AcknowledgeMessageResponseKt.Dsl.() -> kotlin.Unit): unhinged.messaging.Messaging.AcknowledgeMessageResponse =
  unhinged.messaging.AcknowledgeMessageResponseKt.Dsl._create(unhinged.messaging.Messaging.AcknowledgeMessageResponse.newBuilder()).apply { block() }._build()
public object AcknowledgeMessageResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.messaging.Messaging.AcknowledgeMessageResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.messaging.Messaging.AcknowledgeMessageResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.messaging.Messaging.AcknowledgeMessageResponse = _builder.build()

    /**
     * <code>bool success = 1;</code>
     */
    public var success: kotlin.Boolean
      @JvmName("getSuccess")
      get() = _builder.getSuccess()
      @JvmName("setSuccess")
      set(value) {
        _builder.setSuccess(value)
      }
    /**
     * <code>bool success = 1;</code>
     */
    public fun clearSuccess() {
      _builder.clearSuccess()
    }

    /**
     * <code>string message = 2;</code>
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <code>string message = 2;</code>
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.messaging.Messaging.AcknowledgeMessageResponse.copy(block: unhinged.messaging.AcknowledgeMessageResponseKt.Dsl.() -> kotlin.Unit): unhinged.messaging.Messaging.AcknowledgeMessageResponse =
  unhinged.messaging.AcknowledgeMessageResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

