//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messaging.proto

package unhinged.messaging;

@kotlin.jvm.JvmName("-initializeworkflowTrigger")
public inline fun workflowTrigger(block: unhinged.messaging.WorkflowTriggerKt.Dsl.() -> kotlin.Unit): unhinged.messaging.Messaging.WorkflowTrigger =
  unhinged.messaging.WorkflowTriggerKt.Dsl._create(unhinged.messaging.Messaging.WorkflowTrigger.newBuilder()).apply { block() }._build()
public object WorkflowTriggerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.messaging.Messaging.WorkflowTrigger.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.messaging.Messaging.WorkflowTrigger.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.messaging.Messaging.WorkflowTrigger = _builder.build()

    /**
     * <code>string trigger_type = 1;</code>
     */
    public var triggerType: kotlin.String
      @JvmName("getTriggerType")
      get() = _builder.getTriggerType()
      @JvmName("setTriggerType")
      set(value) {
        _builder.setTriggerType(value)
      }
    /**
     * <code>string trigger_type = 1;</code>
     */
    public fun clearTriggerType() {
      _builder.clearTriggerType()
    }

    /**
     * <code>string trigger_source = 2;</code>
     */
    public var triggerSource: kotlin.String
      @JvmName("getTriggerSource")
      get() = _builder.getTriggerSource()
      @JvmName("setTriggerSource")
      set(value) {
        _builder.setTriggerSource(value)
      }
    /**
     * <code>string trigger_source = 2;</code>
     */
    public fun clearTriggerSource() {
      _builder.clearTriggerSource()
    }

    /**
     * <code>.google.protobuf.Struct trigger_data = 3;</code>
     */
    public var triggerData: com.google.protobuf.Struct
      @JvmName("getTriggerData")
      get() = _builder.getTriggerData()
      @JvmName("setTriggerData")
      set(value) {
        _builder.setTriggerData(value)
      }
    /**
     * <code>.google.protobuf.Struct trigger_data = 3;</code>
     */
    public fun clearTriggerData() {
      _builder.clearTriggerData()
    }
    /**
     * <code>.google.protobuf.Struct trigger_data = 3;</code>
     * @return Whether the triggerData field is set.
     */
    public fun hasTriggerData(): kotlin.Boolean {
      return _builder.hasTriggerData()
    }

    /**
     * <code>.google.protobuf.Struct initial_context = 4;</code>
     */
    public var initialContext: com.google.protobuf.Struct
      @JvmName("getInitialContext")
      get() = _builder.getInitialContext()
      @JvmName("setInitialContext")
      set(value) {
        _builder.setInitialContext(value)
      }
    /**
     * <code>.google.protobuf.Struct initial_context = 4;</code>
     */
    public fun clearInitialContext() {
      _builder.clearInitialContext()
    }
    /**
     * <code>.google.protobuf.Struct initial_context = 4;</code>
     * @return Whether the initialContext field is set.
     */
    public fun hasInitialContext(): kotlin.Boolean {
      return _builder.hasInitialContext()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.messaging.Messaging.WorkflowTrigger.copy(block: unhinged.messaging.WorkflowTriggerKt.Dsl.() -> kotlin.Unit): unhinged.messaging.Messaging.WorkflowTrigger =
  unhinged.messaging.WorkflowTriggerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.messaging.Messaging.WorkflowTriggerOrBuilder.triggerDataOrNull: com.google.protobuf.Struct?
  get() = if (hasTriggerData()) getTriggerData() else null

public val unhinged.messaging.Messaging.WorkflowTriggerOrBuilder.initialContextOrNull: com.google.protobuf.Struct?
  get() = if (hasInitialContext()) getInitialContext() else null

