//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messaging.proto

package unhinged.messaging;

@kotlin.jvm.JvmName("-initializestreamError")
public inline fun streamError(block: unhinged.messaging.StreamErrorKt.Dsl.() -> kotlin.Unit): unhinged.messaging.Messaging.StreamError =
  unhinged.messaging.StreamErrorKt.Dsl._create(unhinged.messaging.Messaging.StreamError.newBuilder()).apply { block() }._build()
public object StreamErrorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.messaging.Messaging.StreamError.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.messaging.Messaging.StreamError.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.messaging.Messaging.StreamError = _builder.build()

    /**
     * <code>string error_code = 1;</code>
     */
    public var errorCode: kotlin.String
      @JvmName("getErrorCode")
      get() = _builder.getErrorCode()
      @JvmName("setErrorCode")
      set(value) {
        _builder.setErrorCode(value)
      }
    /**
     * <code>string error_code = 1;</code>
     */
    public fun clearErrorCode() {
      _builder.clearErrorCode()
    }

    /**
     * <code>string error_message = 2;</code>
     */
    public var errorMessage: kotlin.String
      @JvmName("getErrorMessage")
      get() = _builder.getErrorMessage()
      @JvmName("setErrorMessage")
      set(value) {
        _builder.setErrorMessage(value)
      }
    /**
     * <code>string error_message = 2;</code>
     */
    public fun clearErrorMessage() {
      _builder.clearErrorMessage()
    }

    /**
     * <code>bool is_recoverable = 3;</code>
     */
    public var isRecoverable: kotlin.Boolean
      @JvmName("getIsRecoverable")
      get() = _builder.getIsRecoverable()
      @JvmName("setIsRecoverable")
      set(value) {
        _builder.setIsRecoverable(value)
      }
    /**
     * <code>bool is_recoverable = 3;</code>
     */
    public fun clearIsRecoverable() {
      _builder.clearIsRecoverable()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.messaging.Messaging.StreamError.copy(block: unhinged.messaging.StreamErrorKt.Dsl.() -> kotlin.Unit): unhinged.messaging.Messaging.StreamError =
  unhinged.messaging.StreamErrorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

