//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_events.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializeworkflowFailed")
public inline fun workflowFailed(block: unhinged.cdc.WorkflowFailedKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.WorkflowFailed =
  unhinged.cdc.WorkflowFailedKt.Dsl._create(unhinged.cdc.CdcEvents.WorkflowFailed.newBuilder()).apply { block() }._build()
public object WorkflowFailedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcEvents.WorkflowFailed.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcEvents.WorkflowFailed.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcEvents.WorkflowFailed = _builder.build()

    /**
     * <code>string failure_step_id = 1;</code>
     */
    public var failureStepId: kotlin.String
      @JvmName("getFailureStepId")
      get() = _builder.getFailureStepId()
      @JvmName("setFailureStepId")
      set(value) {
        _builder.setFailureStepId(value)
      }
    /**
     * <code>string failure_step_id = 1;</code>
     */
    public fun clearFailureStepId() {
      _builder.clearFailureStepId()
    }

    /**
     * <code>string failure_reason = 2;</code>
     */
    public var failureReason: kotlin.String
      @JvmName("getFailureReason")
      get() = _builder.getFailureReason()
      @JvmName("setFailureReason")
      set(value) {
        _builder.setFailureReason(value)
      }
    /**
     * <code>string failure_reason = 2;</code>
     */
    public fun clearFailureReason() {
      _builder.clearFailureReason()
    }

    /**
     * <code>string error_message = 3;</code>
     */
    public var errorMessage: kotlin.String
      @JvmName("getErrorMessage")
      get() = _builder.getErrorMessage()
      @JvmName("setErrorMessage")
      set(value) {
        _builder.setErrorMessage(value)
      }
    /**
     * <code>string error_message = 3;</code>
     */
    public fun clearErrorMessage() {
      _builder.clearErrorMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcEvents.WorkflowFailed.copy(block: unhinged.cdc.WorkflowFailedKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.WorkflowFailed =
  unhinged.cdc.WorkflowFailedKt.Dsl._create(this.toBuilder()).apply { block() }._build()

