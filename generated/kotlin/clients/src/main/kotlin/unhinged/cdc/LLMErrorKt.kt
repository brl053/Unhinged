//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_events.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializelLMError")
public inline fun lLMError(block: unhinged.cdc.LLMErrorKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.LLMError =
  unhinged.cdc.LLMErrorKt.Dsl._create(unhinged.cdc.CdcEvents.LLMError.newBuilder()).apply { block() }._build()
public object LLMErrorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcEvents.LLMError.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcEvents.LLMError.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcEvents.LLMError = _builder.build()

    /**
     * <code>string error_code = 1;</code>
     */
    public var errorCode: kotlin.String
      @JvmName("getErrorCode")
      get() = _builder.getErrorCode()
      @JvmName("setErrorCode")
      set(value) {
        _builder.setErrorCode(value)
      }
    /**
     * <code>string error_code = 1;</code>
     */
    public fun clearErrorCode() {
      _builder.clearErrorCode()
    }

    /**
     * <code>string error_message = 2;</code>
     */
    public var errorMessage: kotlin.String
      @JvmName("getErrorMessage")
      get() = _builder.getErrorMessage()
      @JvmName("setErrorMessage")
      set(value) {
        _builder.setErrorMessage(value)
      }
    /**
     * <code>string error_message = 2;</code>
     */
    public fun clearErrorMessage() {
      _builder.clearErrorMessage()
    }

    /**
     * <pre>
     * "rate_limit", "context_length", "content_filter", etc.
     * </pre>
     *
     * <code>string error_type = 3;</code>
     */
    public var errorType: kotlin.String
      @JvmName("getErrorType")
      get() = _builder.getErrorType()
      @JvmName("setErrorType")
      set(value) {
        _builder.setErrorType(value)
      }
    /**
     * <pre>
     * "rate_limit", "context_length", "content_filter", etc.
     * </pre>
     *
     * <code>string error_type = 3;</code>
     */
    public fun clearErrorType() {
      _builder.clearErrorType()
    }

    /**
     * <code>bool is_retryable = 4;</code>
     */
    public var isRetryable: kotlin.Boolean
      @JvmName("getIsRetryable")
      get() = _builder.getIsRetryable()
      @JvmName("setIsRetryable")
      set(value) {
        _builder.setIsRetryable(value)
      }
    /**
     * <code>bool is_retryable = 4;</code>
     */
    public fun clearIsRetryable() {
      _builder.clearIsRetryable()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcEvents.LLMError.copy(block: unhinged.cdc.LLMErrorKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.LLMError =
  unhinged.cdc.LLMErrorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

