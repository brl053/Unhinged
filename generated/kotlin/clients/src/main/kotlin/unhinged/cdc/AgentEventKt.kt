//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_events.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializeagentEvent")
public inline fun agentEvent(block: unhinged.cdc.AgentEventKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.AgentEvent =
  unhinged.cdc.AgentEventKt.Dsl._create(unhinged.cdc.CdcEvents.AgentEvent.newBuilder()).apply { block() }._build()
public object AgentEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcEvents.AgentEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcEvents.AgentEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcEvents.AgentEvent = _builder.build()

    /**
     * <code>string agent_id = 1;</code>
     */
    public var agentId: kotlin.String
      @JvmName("getAgentId")
      get() = _builder.getAgentId()
      @JvmName("setAgentId")
      set(value) {
        _builder.setAgentId(value)
      }
    /**
     * <code>string agent_id = 1;</code>
     */
    public fun clearAgentId() {
      _builder.clearAgentId()
    }

    /**
     * <code>string agent_type = 2;</code>
     */
    public var agentType: kotlin.String
      @JvmName("getAgentType")
      get() = _builder.getAgentType()
      @JvmName("setAgentType")
      set(value) {
        _builder.setAgentType(value)
      }
    /**
     * <code>string agent_type = 2;</code>
     */
    public fun clearAgentType() {
      _builder.clearAgentType()
    }

    /**
     * <code>string agent_version = 3;</code>
     */
    public var agentVersion: kotlin.String
      @JvmName("getAgentVersion")
      get() = _builder.getAgentVersion()
      @JvmName("setAgentVersion")
      set(value) {
        _builder.setAgentVersion(value)
      }
    /**
     * <code>string agent_version = 3;</code>
     */
    public fun clearAgentVersion() {
      _builder.clearAgentVersion()
    }

    /**
     * <code>string execution_id = 4;</code>
     */
    public var executionId: kotlin.String
      @JvmName("getExecutionId")
      get() = _builder.getExecutionId()
      @JvmName("setExecutionId")
      set(value) {
        _builder.setExecutionId(value)
      }
    /**
     * <code>string execution_id = 4;</code>
     */
    public fun clearExecutionId() {
      _builder.clearExecutionId()
    }

    /**
     * <code>.unhinged.cdc.AgentEventType event_type = 5;</code>
     */
    public var eventType: unhinged.cdc.CdcEvents.AgentEventType
      @JvmName("getEventType")
      get() = _builder.getEventType()
      @JvmName("setEventType")
      set(value) {
        _builder.setEventType(value)
      }
    /**
     * <code>.unhinged.cdc.AgentEventType event_type = 5;</code>
     */
    public fun clearEventType() {
      _builder.clearEventType()
    }

    /**
     * <code>.unhinged.cdc.AgentStarted started = 10;</code>
     */
    public var started: unhinged.cdc.CdcEvents.AgentStarted
      @JvmName("getStarted")
      get() = _builder.getStarted()
      @JvmName("setStarted")
      set(value) {
        _builder.setStarted(value)
      }
    /**
     * <code>.unhinged.cdc.AgentStarted started = 10;</code>
     */
    public fun clearStarted() {
      _builder.clearStarted()
    }
    /**
     * <code>.unhinged.cdc.AgentStarted started = 10;</code>
     * @return Whether the started field is set.
     */
    public fun hasStarted(): kotlin.Boolean {
      return _builder.hasStarted()
    }

    /**
     * <code>.unhinged.cdc.AgentStepCompleted step_completed = 11;</code>
     */
    public var stepCompleted: unhinged.cdc.CdcEvents.AgentStepCompleted
      @JvmName("getStepCompleted")
      get() = _builder.getStepCompleted()
      @JvmName("setStepCompleted")
      set(value) {
        _builder.setStepCompleted(value)
      }
    /**
     * <code>.unhinged.cdc.AgentStepCompleted step_completed = 11;</code>
     */
    public fun clearStepCompleted() {
      _builder.clearStepCompleted()
    }
    /**
     * <code>.unhinged.cdc.AgentStepCompleted step_completed = 11;</code>
     * @return Whether the stepCompleted field is set.
     */
    public fun hasStepCompleted(): kotlin.Boolean {
      return _builder.hasStepCompleted()
    }

    /**
     * <code>.unhinged.cdc.AgentCompleted completed = 12;</code>
     */
    public var completed: unhinged.cdc.CdcEvents.AgentCompleted
      @JvmName("getCompleted")
      get() = _builder.getCompleted()
      @JvmName("setCompleted")
      set(value) {
        _builder.setCompleted(value)
      }
    /**
     * <code>.unhinged.cdc.AgentCompleted completed = 12;</code>
     */
    public fun clearCompleted() {
      _builder.clearCompleted()
    }
    /**
     * <code>.unhinged.cdc.AgentCompleted completed = 12;</code>
     * @return Whether the completed field is set.
     */
    public fun hasCompleted(): kotlin.Boolean {
      return _builder.hasCompleted()
    }

    /**
     * <code>.unhinged.cdc.AgentFailed failed = 13;</code>
     */
    public var failed: unhinged.cdc.CdcEvents.AgentFailed
      @JvmName("getFailed")
      get() = _builder.getFailed()
      @JvmName("setFailed")
      set(value) {
        _builder.setFailed(value)
      }
    /**
     * <code>.unhinged.cdc.AgentFailed failed = 13;</code>
     */
    public fun clearFailed() {
      _builder.clearFailed()
    }
    /**
     * <code>.unhinged.cdc.AgentFailed failed = 13;</code>
     * @return Whether the failed field is set.
     */
    public fun hasFailed(): kotlin.Boolean {
      return _builder.hasFailed()
    }

    /**
     * <code>.unhinged.cdc.AgentToolUsed tool_used = 14;</code>
     */
    public var toolUsed: unhinged.cdc.CdcEvents.AgentToolUsed
      @JvmName("getToolUsed")
      get() = _builder.getToolUsed()
      @JvmName("setToolUsed")
      set(value) {
        _builder.setToolUsed(value)
      }
    /**
     * <code>.unhinged.cdc.AgentToolUsed tool_used = 14;</code>
     */
    public fun clearToolUsed() {
      _builder.clearToolUsed()
    }
    /**
     * <code>.unhinged.cdc.AgentToolUsed tool_used = 14;</code>
     * @return Whether the toolUsed field is set.
     */
    public fun hasToolUsed(): kotlin.Boolean {
      return _builder.hasToolUsed()
    }
    public val eventDataCase: unhinged.cdc.CdcEvents.AgentEvent.EventDataCase
      @JvmName("getEventDataCase")
      get() = _builder.getEventDataCase()

    public fun clearEventData() {
      _builder.clearEventData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcEvents.AgentEvent.copy(block: unhinged.cdc.AgentEventKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.AgentEvent =
  unhinged.cdc.AgentEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.cdc.CdcEvents.AgentEventOrBuilder.startedOrNull: unhinged.cdc.CdcEvents.AgentStarted?
  get() = if (hasStarted()) getStarted() else null

public val unhinged.cdc.CdcEvents.AgentEventOrBuilder.stepCompletedOrNull: unhinged.cdc.CdcEvents.AgentStepCompleted?
  get() = if (hasStepCompleted()) getStepCompleted() else null

public val unhinged.cdc.CdcEvents.AgentEventOrBuilder.completedOrNull: unhinged.cdc.CdcEvents.AgentCompleted?
  get() = if (hasCompleted()) getCompleted() else null

public val unhinged.cdc.CdcEvents.AgentEventOrBuilder.failedOrNull: unhinged.cdc.CdcEvents.AgentFailed?
  get() = if (hasFailed()) getFailed() else null

public val unhinged.cdc.CdcEvents.AgentEventOrBuilder.toolUsedOrNull: unhinged.cdc.CdcEvents.AgentToolUsed?
  get() = if (hasToolUsed()) getToolUsed() else null

