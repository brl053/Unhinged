//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_service.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializesubscriptionStatus")
public inline fun subscriptionStatus(block: unhinged.cdc.SubscriptionStatusKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcService.SubscriptionStatus =
  unhinged.cdc.SubscriptionStatusKt.Dsl._create(unhinged.cdc.CdcService.SubscriptionStatus.newBuilder()).apply { block() }._build()
public object SubscriptionStatusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcService.SubscriptionStatus.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcService.SubscriptionStatus.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcService.SubscriptionStatus = _builder.build()

    /**
     * <pre>
     * "active", "paused", "stopped"
     * </pre>
     *
     * <code>string status = 1;</code>
     */
    public var status: kotlin.String
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * <pre>
     * "active", "paused", "stopped"
     * </pre>
     *
     * <code>string status = 1;</code>
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * <code>int64 last_processed_sequence = 2;</code>
     */
    public var lastProcessedSequence: kotlin.Long
      @JvmName("getLastProcessedSequence")
      get() = _builder.getLastProcessedSequence()
      @JvmName("setLastProcessedSequence")
      set(value) {
        _builder.setLastProcessedSequence(value)
      }
    /**
     * <code>int64 last_processed_sequence = 2;</code>
     */
    public fun clearLastProcessedSequence() {
      _builder.clearLastProcessedSequence()
    }

    /**
     * <code>int32 events_processed = 3;</code>
     */
    public var eventsProcessed: kotlin.Int
      @JvmName("getEventsProcessed")
      get() = _builder.getEventsProcessed()
      @JvmName("setEventsProcessed")
      set(value) {
        _builder.setEventsProcessed(value)
      }
    /**
     * <code>int32 events_processed = 3;</code>
     */
    public fun clearEventsProcessed() {
      _builder.clearEventsProcessed()
    }

    /**
     * <code>int32 events_failed = 4;</code>
     */
    public var eventsFailed: kotlin.Int
      @JvmName("getEventsFailed")
      get() = _builder.getEventsFailed()
      @JvmName("setEventsFailed")
      set(value) {
        _builder.setEventsFailed(value)
      }
    /**
     * <code>int32 events_failed = 4;</code>
     */
    public fun clearEventsFailed() {
      _builder.clearEventsFailed()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcService.SubscriptionStatus.copy(block: unhinged.cdc.SubscriptionStatusKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcService.SubscriptionStatus =
  unhinged.cdc.SubscriptionStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()

