//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_events.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializeworkflowTriggered")
public inline fun workflowTriggered(block: unhinged.cdc.WorkflowTriggeredKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.WorkflowTriggered =
  unhinged.cdc.WorkflowTriggeredKt.Dsl._create(unhinged.cdc.CdcEvents.WorkflowTriggered.newBuilder()).apply { block() }._build()
public object WorkflowTriggeredKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcEvents.WorkflowTriggered.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcEvents.WorkflowTriggered.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcEvents.WorkflowTriggered = _builder.build()

    /**
     * <code>string trigger_event_id = 1;</code>
     */
    public var triggerEventId: kotlin.String
      @JvmName("getTriggerEventId")
      get() = _builder.getTriggerEventId()
      @JvmName("setTriggerEventId")
      set(value) {
        _builder.setTriggerEventId(value)
      }
    /**
     * <code>string trigger_event_id = 1;</code>
     */
    public fun clearTriggerEventId() {
      _builder.clearTriggerEventId()
    }

    /**
     * <code>string trigger_type = 2;</code>
     */
    public var triggerType: kotlin.String
      @JvmName("getTriggerType")
      get() = _builder.getTriggerType()
      @JvmName("setTriggerType")
      set(value) {
        _builder.setTriggerType(value)
      }
    /**
     * <code>string trigger_type = 2;</code>
     */
    public fun clearTriggerType() {
      _builder.clearTriggerType()
    }

    /**
     * <code>.google.protobuf.Struct trigger_context = 3;</code>
     */
    public var triggerContext: com.google.protobuf.Struct
      @JvmName("getTriggerContext")
      get() = _builder.getTriggerContext()
      @JvmName("setTriggerContext")
      set(value) {
        _builder.setTriggerContext(value)
      }
    /**
     * <code>.google.protobuf.Struct trigger_context = 3;</code>
     */
    public fun clearTriggerContext() {
      _builder.clearTriggerContext()
    }
    /**
     * <code>.google.protobuf.Struct trigger_context = 3;</code>
     * @return Whether the triggerContext field is set.
     */
    public fun hasTriggerContext(): kotlin.Boolean {
      return _builder.hasTriggerContext()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcEvents.WorkflowTriggered.copy(block: unhinged.cdc.WorkflowTriggeredKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.WorkflowTriggered =
  unhinged.cdc.WorkflowTriggeredKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.cdc.CdcEvents.WorkflowTriggeredOrBuilder.triggerContextOrNull: com.google.protobuf.Struct?
  get() = if (hasTriggerContext()) getTriggerContext() else null

