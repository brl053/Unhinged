//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_events.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializelLMFeedback")
public inline fun lLMFeedback(block: unhinged.cdc.LLMFeedbackKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.LLMFeedback =
  unhinged.cdc.LLMFeedbackKt.Dsl._create(unhinged.cdc.CdcEvents.LLMFeedback.newBuilder()).apply { block() }._build()
public object LLMFeedbackKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcEvents.LLMFeedback.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcEvents.LLMFeedback.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcEvents.LLMFeedback = _builder.build()

    /**
     * <pre>
     * "thumbs_up", "thumbs_down", "correction", "rating"
     * </pre>
     *
     * <code>string feedback_type = 1;</code>
     */
    public var feedbackType: kotlin.String
      @JvmName("getFeedbackType")
      get() = _builder.getFeedbackType()
      @JvmName("setFeedbackType")
      set(value) {
        _builder.setFeedbackType(value)
      }
    /**
     * <pre>
     * "thumbs_up", "thumbs_down", "correction", "rating"
     * </pre>
     *
     * <code>string feedback_type = 1;</code>
     */
    public fun clearFeedbackType() {
      _builder.clearFeedbackType()
    }

    /**
     * <code>string feedback_value = 2;</code>
     */
    public var feedbackValue: kotlin.String
      @JvmName("getFeedbackValue")
      get() = _builder.getFeedbackValue()
      @JvmName("setFeedbackValue")
      set(value) {
        _builder.setFeedbackValue(value)
      }
    /**
     * <code>string feedback_value = 2;</code>
     */
    public fun clearFeedbackValue() {
      _builder.clearFeedbackValue()
    }

    /**
     * <code>string feedback_text = 3;</code>
     */
    public var feedbackText: kotlin.String
      @JvmName("getFeedbackText")
      get() = _builder.getFeedbackText()
      @JvmName("setFeedbackText")
      set(value) {
        _builder.setFeedbackText(value)
      }
    /**
     * <code>string feedback_text = 3;</code>
     */
    public fun clearFeedbackText() {
      _builder.clearFeedbackText()
    }

    /**
     * <code>string provided_by = 4;</code>
     */
    public var providedBy: kotlin.String
      @JvmName("getProvidedBy")
      get() = _builder.getProvidedBy()
      @JvmName("setProvidedBy")
      set(value) {
        _builder.setProvidedBy(value)
      }
    /**
     * <code>string provided_by = 4;</code>
     */
    public fun clearProvidedBy() {
      _builder.clearProvidedBy()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcEvents.LLMFeedback.copy(block: unhinged.cdc.LLMFeedbackKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.LLMFeedback =
  unhinged.cdc.LLMFeedbackKt.Dsl._create(this.toBuilder()).apply { block() }._build()

