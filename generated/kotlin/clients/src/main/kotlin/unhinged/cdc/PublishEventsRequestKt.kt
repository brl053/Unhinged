//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_service.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializepublishEventsRequest")
public inline fun publishEventsRequest(block: unhinged.cdc.PublishEventsRequestKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcService.PublishEventsRequest =
  unhinged.cdc.PublishEventsRequestKt.Dsl._create(unhinged.cdc.CdcService.PublishEventsRequest.newBuilder()).apply { block() }._build()
public object PublishEventsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcService.PublishEventsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcService.PublishEventsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcService.PublishEventsRequest = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class EventsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .unhinged.cdc.UniversalEvent events = 1;</code>
     */
     public val events: com.google.protobuf.kotlin.DslList<unhinged.cdc.CdcEvents.UniversalEvent, EventsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getEventsList()
      )
    /**
     * <code>repeated .unhinged.cdc.UniversalEvent events = 1;</code>
     * @param value The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addEvents")
    public fun com.google.protobuf.kotlin.DslList<unhinged.cdc.CdcEvents.UniversalEvent, EventsProxy>.add(value: unhinged.cdc.CdcEvents.UniversalEvent) {
      _builder.addEvents(value)
    }
    /**
     * <code>repeated .unhinged.cdc.UniversalEvent events = 1;</code>
     * @param value The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignEvents")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.cdc.CdcEvents.UniversalEvent, EventsProxy>.plusAssign(value: unhinged.cdc.CdcEvents.UniversalEvent) {
      add(value)
    }
    /**
     * <code>repeated .unhinged.cdc.UniversalEvent events = 1;</code>
     * @param values The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllEvents")
    public fun com.google.protobuf.kotlin.DslList<unhinged.cdc.CdcEvents.UniversalEvent, EventsProxy>.addAll(values: kotlin.collections.Iterable<unhinged.cdc.CdcEvents.UniversalEvent>) {
      _builder.addAllEvents(values)
    }
    /**
     * <code>repeated .unhinged.cdc.UniversalEvent events = 1;</code>
     * @param values The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllEvents")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.cdc.CdcEvents.UniversalEvent, EventsProxy>.plusAssign(values: kotlin.collections.Iterable<unhinged.cdc.CdcEvents.UniversalEvent>) {
      addAll(values)
    }
    /**
     * <code>repeated .unhinged.cdc.UniversalEvent events = 1;</code>
     * @param index The index to set the value at.
     * @param value The events to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setEvents")
    public operator fun com.google.protobuf.kotlin.DslList<unhinged.cdc.CdcEvents.UniversalEvent, EventsProxy>.set(index: kotlin.Int, value: unhinged.cdc.CdcEvents.UniversalEvent) {
      _builder.setEvents(index, value)
    }
    /**
     * <code>repeated .unhinged.cdc.UniversalEvent events = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearEvents")
    public fun com.google.protobuf.kotlin.DslList<unhinged.cdc.CdcEvents.UniversalEvent, EventsProxy>.clear() {
      _builder.clearEvents()
    }


    /**
     * <pre>
     * Batch options
     * </pre>
     *
     * <code>bool atomic = 2;</code>
     */
    public var atomic: kotlin.Boolean
      @JvmName("getAtomic")
      get() = _builder.getAtomic()
      @JvmName("setAtomic")
      set(value) {
        _builder.setAtomic(value)
      }
    /**
     * <pre>
     * Batch options
     * </pre>
     *
     * <code>bool atomic = 2;</code>
     */
    public fun clearAtomic() {
      _builder.clearAtomic()
    }

    /**
     * <code>bool ensure_delivery = 3;</code>
     */
    public var ensureDelivery: kotlin.Boolean
      @JvmName("getEnsureDelivery")
      get() = _builder.getEnsureDelivery()
      @JvmName("setEnsureDelivery")
      set(value) {
        _builder.setEnsureDelivery(value)
      }
    /**
     * <code>bool ensure_delivery = 3;</code>
     */
    public fun clearEnsureDelivery() {
      _builder.clearEnsureDelivery()
    }

    /**
     * <code>int32 retry_attempts = 4;</code>
     */
    public var retryAttempts: kotlin.Int
      @JvmName("getRetryAttempts")
      get() = _builder.getRetryAttempts()
      @JvmName("setRetryAttempts")
      set(value) {
        _builder.setRetryAttempts(value)
      }
    /**
     * <code>int32 retry_attempts = 4;</code>
     */
    public fun clearRetryAttempts() {
      _builder.clearRetryAttempts()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcService.PublishEventsRequest.copy(block: unhinged.cdc.PublishEventsRequestKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcService.PublishEventsRequest =
  unhinged.cdc.PublishEventsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

