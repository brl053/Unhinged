//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_service.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializeeventStats")
public inline fun eventStats(block: unhinged.cdc.EventStatsKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcService.EventStats =
  unhinged.cdc.EventStatsKt.Dsl._create(unhinged.cdc.CdcService.EventStats.newBuilder()).apply { block() }._build()
public object EventStatsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcService.EventStats.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcService.EventStats.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcService.EventStats = _builder.build()

    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     */
    public var timestamp: com.google.protobuf.Timestamp
      @JvmName("getTimestamp")
      get() = _builder.getTimestamp()
      @JvmName("setTimestamp")
      set(value) {
        _builder.setTimestamp(value)
      }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return Whether the timestamp field is set.
     */
    public fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }

    /**
     * <code>string event_type = 2;</code>
     */
    public var eventType: kotlin.String
      @JvmName("getEventType")
      get() = _builder.getEventType()
      @JvmName("setEventType")
      set(value) {
        _builder.setEventType(value)
      }
    /**
     * <code>string event_type = 2;</code>
     */
    public fun clearEventType() {
      _builder.clearEventType()
    }

    /**
     * <code>string source_service = 3;</code>
     */
    public var sourceService: kotlin.String
      @JvmName("getSourceService")
      get() = _builder.getSourceService()
      @JvmName("setSourceService")
      set(value) {
        _builder.setSourceService(value)
      }
    /**
     * <code>string source_service = 3;</code>
     */
    public fun clearSourceService() {
      _builder.clearSourceService()
    }

    /**
     * <code>int64 event_count = 4;</code>
     */
    public var eventCount: kotlin.Long
      @JvmName("getEventCount")
      get() = _builder.getEventCount()
      @JvmName("setEventCount")
      set(value) {
        _builder.setEventCount(value)
      }
    /**
     * <code>int64 event_count = 4;</code>
     */
    public fun clearEventCount() {
      _builder.clearEventCount()
    }

    /**
     * <code>double events_per_second = 5;</code>
     */
    public var eventsPerSecond: kotlin.Double
      @JvmName("getEventsPerSecond")
      get() = _builder.getEventsPerSecond()
      @JvmName("setEventsPerSecond")
      set(value) {
        _builder.setEventsPerSecond(value)
      }
    /**
     * <code>double events_per_second = 5;</code>
     */
    public fun clearEventsPerSecond() {
      _builder.clearEventsPerSecond()
    }

    /**
     * <code>double avg_processing_time_ms = 6;</code>
     */
    public var avgProcessingTimeMs: kotlin.Double
      @JvmName("getAvgProcessingTimeMs")
      get() = _builder.getAvgProcessingTimeMs()
      @JvmName("setAvgProcessingTimeMs")
      set(value) {
        _builder.setAvgProcessingTimeMs(value)
      }
    /**
     * <code>double avg_processing_time_ms = 6;</code>
     */
    public fun clearAvgProcessingTimeMs() {
      _builder.clearAvgProcessingTimeMs()
    }

    /**
     * <code>int64 failed_count = 7;</code>
     */
    public var failedCount: kotlin.Long
      @JvmName("getFailedCount")
      get() = _builder.getFailedCount()
      @JvmName("setFailedCount")
      set(value) {
        _builder.setFailedCount(value)
      }
    /**
     * <code>int64 failed_count = 7;</code>
     */
    public fun clearFailedCount() {
      _builder.clearFailedCount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcService.EventStats.copy(block: unhinged.cdc.EventStatsKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcService.EventStats =
  unhinged.cdc.EventStatsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.cdc.CdcService.EventStatsOrBuilder.timestampOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTimestamp()) getTimestamp() else null

