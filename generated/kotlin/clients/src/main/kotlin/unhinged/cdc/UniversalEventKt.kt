//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_events.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializeuniversalEvent")
public inline fun universalEvent(block: unhinged.cdc.UniversalEventKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.UniversalEvent =
  unhinged.cdc.UniversalEventKt.Dsl._create(unhinged.cdc.CdcEvents.UniversalEvent.newBuilder()).apply { block() }._build()
public object UniversalEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcEvents.UniversalEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcEvents.UniversalEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcEvents.UniversalEvent = _builder.build()

    /**
     * <pre>
     * Event identification
     * </pre>
     *
     * <code>string event_id = 1;</code>
     */
    public var eventId: kotlin.String
      @JvmName("getEventId")
      get() = _builder.getEventId()
      @JvmName("setEventId")
      set(value) {
        _builder.setEventId(value)
      }
    /**
     * <pre>
     * Event identification
     * </pre>
     *
     * <code>string event_id = 1;</code>
     */
    public fun clearEventId() {
      _builder.clearEventId()
    }

    /**
     * <code>string event_type = 2;</code>
     */
    public var eventType: kotlin.String
      @JvmName("getEventType")
      get() = _builder.getEventType()
      @JvmName("setEventType")
      set(value) {
        _builder.setEventType(value)
      }
    /**
     * <code>string event_type = 2;</code>
     */
    public fun clearEventType() {
      _builder.clearEventType()
    }

    /**
     * <code>string event_version = 3;</code>
     */
    public var eventVersion: kotlin.String
      @JvmName("getEventVersion")
      get() = _builder.getEventVersion()
      @JvmName("setEventVersion")
      set(value) {
        _builder.setEventVersion(value)
      }
    /**
     * <code>string event_version = 3;</code>
     */
    public fun clearEventVersion() {
      _builder.clearEventVersion()
    }

    /**
     * <pre>
     * Timing and sequencing
     * </pre>
     *
     * <code>.google.protobuf.Timestamp event_time = 4;</code>
     */
    public var eventTime: com.google.protobuf.Timestamp
      @JvmName("getEventTime")
      get() = _builder.getEventTime()
      @JvmName("setEventTime")
      set(value) {
        _builder.setEventTime(value)
      }
    /**
     * <pre>
     * Timing and sequencing
     * </pre>
     *
     * <code>.google.protobuf.Timestamp event_time = 4;</code>
     */
    public fun clearEventTime() {
      _builder.clearEventTime()
    }
    /**
     * <pre>
     * Timing and sequencing
     * </pre>
     *
     * <code>.google.protobuf.Timestamp event_time = 4;</code>
     * @return Whether the eventTime field is set.
     */
    public fun hasEventTime(): kotlin.Boolean {
      return _builder.hasEventTime()
    }

    /**
     * <code>int64 sequence_number = 5;</code>
     */
    public var sequenceNumber: kotlin.Long
      @JvmName("getSequenceNumber")
      get() = _builder.getSequenceNumber()
      @JvmName("setSequenceNumber")
      set(value) {
        _builder.setSequenceNumber(value)
      }
    /**
     * <code>int64 sequence_number = 5;</code>
     */
    public fun clearSequenceNumber() {
      _builder.clearSequenceNumber()
    }

    /**
     * <pre>
     * Source and context
     * </pre>
     *
     * <code>string source_service = 6;</code>
     */
    public var sourceService: kotlin.String
      @JvmName("getSourceService")
      get() = _builder.getSourceService()
      @JvmName("setSourceService")
      set(value) {
        _builder.setSourceService(value)
      }
    /**
     * <pre>
     * Source and context
     * </pre>
     *
     * <code>string source_service = 6;</code>
     */
    public fun clearSourceService() {
      _builder.clearSourceService()
    }

    /**
     * <code>string source_version = 7;</code>
     */
    public var sourceVersion: kotlin.String
      @JvmName("getSourceVersion")
      get() = _builder.getSourceVersion()
      @JvmName("setSourceVersion")
      set(value) {
        _builder.setSourceVersion(value)
      }
    /**
     * <code>string source_version = 7;</code>
     */
    public fun clearSourceVersion() {
      _builder.clearSourceVersion()
    }

    /**
     * <code>string trace_id = 8;</code>
     */
    public var traceId: kotlin.String
      @JvmName("getTraceId")
      get() = _builder.getTraceId()
      @JvmName("setTraceId")
      set(value) {
        _builder.setTraceId(value)
      }
    /**
     * <code>string trace_id = 8;</code>
     */
    public fun clearTraceId() {
      _builder.clearTraceId()
    }

    /**
     * <code>string correlation_id = 9;</code>
     */
    public var correlationId: kotlin.String
      @JvmName("getCorrelationId")
      get() = _builder.getCorrelationId()
      @JvmName("setCorrelationId")
      set(value) {
        _builder.setCorrelationId(value)
      }
    /**
     * <code>string correlation_id = 9;</code>
     */
    public fun clearCorrelationId() {
      _builder.clearCorrelationId()
    }

    /**
     * <pre>
     * User and session context
     * </pre>
     *
     * <code>string user_id = 10;</code>
     */
    public var userId: kotlin.String
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <pre>
     * User and session context
     * </pre>
     *
     * <code>string user_id = 10;</code>
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }

    /**
     * <code>string session_id = 11;</code>
     */
    public var sessionId: kotlin.String
      @JvmName("getSessionId")
      get() = _builder.getSessionId()
      @JvmName("setSessionId")
      set(value) {
        _builder.setSessionId(value)
      }
    /**
     * <code>string session_id = 11;</code>
     */
    public fun clearSessionId() {
      _builder.clearSessionId()
    }

    /**
     * <code>string tenant_id = 12;</code>
     */
    public var tenantId: kotlin.String
      @JvmName("getTenantId")
      get() = _builder.getTenantId()
      @JvmName("setTenantId")
      set(value) {
        _builder.setTenantId(value)
      }
    /**
     * <code>string tenant_id = 12;</code>
     */
    public fun clearTenantId() {
      _builder.clearTenantId()
    }

    /**
     * <code>.unhinged.cdc.DocumentEvent document_event = 20;</code>
     */
    public var documentEvent: unhinged.cdc.CdcEvents.DocumentEvent
      @JvmName("getDocumentEvent")
      get() = _builder.getDocumentEvent()
      @JvmName("setDocumentEvent")
      set(value) {
        _builder.setDocumentEvent(value)
      }
    /**
     * <code>.unhinged.cdc.DocumentEvent document_event = 20;</code>
     */
    public fun clearDocumentEvent() {
      _builder.clearDocumentEvent()
    }
    /**
     * <code>.unhinged.cdc.DocumentEvent document_event = 20;</code>
     * @return Whether the documentEvent field is set.
     */
    public fun hasDocumentEvent(): kotlin.Boolean {
      return _builder.hasDocumentEvent()
    }

    /**
     * <code>.unhinged.cdc.LLMEvent llm_event = 21;</code>
     */
    public var llmEvent: unhinged.cdc.CdcEvents.LLMEvent
      @JvmName("getLlmEvent")
      get() = _builder.getLlmEvent()
      @JvmName("setLlmEvent")
      set(value) {
        _builder.setLlmEvent(value)
      }
    /**
     * <code>.unhinged.cdc.LLMEvent llm_event = 21;</code>
     */
    public fun clearLlmEvent() {
      _builder.clearLlmEvent()
    }
    /**
     * <code>.unhinged.cdc.LLMEvent llm_event = 21;</code>
     * @return Whether the llmEvent field is set.
     */
    public fun hasLlmEvent(): kotlin.Boolean {
      return _builder.hasLlmEvent()
    }

    /**
     * <code>.unhinged.cdc.AgentEvent agent_event = 22;</code>
     */
    public var agentEvent: unhinged.cdc.CdcEvents.AgentEvent
      @JvmName("getAgentEvent")
      get() = _builder.getAgentEvent()
      @JvmName("setAgentEvent")
      set(value) {
        _builder.setAgentEvent(value)
      }
    /**
     * <code>.unhinged.cdc.AgentEvent agent_event = 22;</code>
     */
    public fun clearAgentEvent() {
      _builder.clearAgentEvent()
    }
    /**
     * <code>.unhinged.cdc.AgentEvent agent_event = 22;</code>
     * @return Whether the agentEvent field is set.
     */
    public fun hasAgentEvent(): kotlin.Boolean {
      return _builder.hasAgentEvent()
    }

    /**
     * <code>.unhinged.cdc.SessionEvent session_event = 23;</code>
     */
    public var sessionEvent: unhinged.cdc.CdcEvents.SessionEvent
      @JvmName("getSessionEvent")
      get() = _builder.getSessionEvent()
      @JvmName("setSessionEvent")
      set(value) {
        _builder.setSessionEvent(value)
      }
    /**
     * <code>.unhinged.cdc.SessionEvent session_event = 23;</code>
     */
    public fun clearSessionEvent() {
      _builder.clearSessionEvent()
    }
    /**
     * <code>.unhinged.cdc.SessionEvent session_event = 23;</code>
     * @return Whether the sessionEvent field is set.
     */
    public fun hasSessionEvent(): kotlin.Boolean {
      return _builder.hasSessionEvent()
    }

    /**
     * <code>.unhinged.cdc.SystemEvent system_event = 24;</code>
     */
    public var systemEvent: unhinged.cdc.CdcEvents.SystemEvent
      @JvmName("getSystemEvent")
      get() = _builder.getSystemEvent()
      @JvmName("setSystemEvent")
      set(value) {
        _builder.setSystemEvent(value)
      }
    /**
     * <code>.unhinged.cdc.SystemEvent system_event = 24;</code>
     */
    public fun clearSystemEvent() {
      _builder.clearSystemEvent()
    }
    /**
     * <code>.unhinged.cdc.SystemEvent system_event = 24;</code>
     * @return Whether the systemEvent field is set.
     */
    public fun hasSystemEvent(): kotlin.Boolean {
      return _builder.hasSystemEvent()
    }

    /**
     * <code>.unhinged.cdc.WorkflowEvent workflow_event = 25;</code>
     */
    public var workflowEvent: unhinged.cdc.CdcEvents.WorkflowEvent
      @JvmName("getWorkflowEvent")
      get() = _builder.getWorkflowEvent()
      @JvmName("setWorkflowEvent")
      set(value) {
        _builder.setWorkflowEvent(value)
      }
    /**
     * <code>.unhinged.cdc.WorkflowEvent workflow_event = 25;</code>
     */
    public fun clearWorkflowEvent() {
      _builder.clearWorkflowEvent()
    }
    /**
     * <code>.unhinged.cdc.WorkflowEvent workflow_event = 25;</code>
     * @return Whether the workflowEvent field is set.
     */
    public fun hasWorkflowEvent(): kotlin.Boolean {
      return _builder.hasWorkflowEvent()
    }

    /**
     * <pre>
     * Chat and conversation events
     * </pre>
     *
     * <code>.unhinged.cdc.ChatEvent chat_event = 26;</code>
     */
    public var chatEvent: unhinged.cdc.CdcEvents.ChatEvent
      @JvmName("getChatEvent")
      get() = _builder.getChatEvent()
      @JvmName("setChatEvent")
      set(value) {
        _builder.setChatEvent(value)
      }
    /**
     * <pre>
     * Chat and conversation events
     * </pre>
     *
     * <code>.unhinged.cdc.ChatEvent chat_event = 26;</code>
     */
    public fun clearChatEvent() {
      _builder.clearChatEvent()
    }
    /**
     * <pre>
     * Chat and conversation events
     * </pre>
     *
     * <code>.unhinged.cdc.ChatEvent chat_event = 26;</code>
     * @return Whether the chatEvent field is set.
     */
    public fun hasChatEvent(): kotlin.Boolean {
      return _builder.hasChatEvent()
    }

    /**
     * <pre>
     * Audio processing events
     * </pre>
     *
     * <code>.unhinged.cdc.AudioEvent audio_event = 27;</code>
     */
    public var audioEvent: unhinged.cdc.CdcEvents.AudioEvent
      @JvmName("getAudioEvent")
      get() = _builder.getAudioEvent()
      @JvmName("setAudioEvent")
      set(value) {
        _builder.setAudioEvent(value)
      }
    /**
     * <pre>
     * Audio processing events
     * </pre>
     *
     * <code>.unhinged.cdc.AudioEvent audio_event = 27;</code>
     */
    public fun clearAudioEvent() {
      _builder.clearAudioEvent()
    }
    /**
     * <pre>
     * Audio processing events
     * </pre>
     *
     * <code>.unhinged.cdc.AudioEvent audio_event = 27;</code>
     * @return Whether the audioEvent field is set.
     */
    public fun hasAudioEvent(): kotlin.Boolean {
      return _builder.hasAudioEvent()
    }

    /**
     * <pre>
     * User management events
     * </pre>
     *
     * <code>.unhinged.cdc.UserEvent user_event = 28;</code>
     */
    public var userEvent: unhinged.cdc.CdcEvents.UserEvent
      @JvmName("getUserEvent")
      get() = _builder.getUserEvent()
      @JvmName("setUserEvent")
      set(value) {
        _builder.setUserEvent(value)
      }
    /**
     * <pre>
     * User management events
     * </pre>
     *
     * <code>.unhinged.cdc.UserEvent user_event = 28;</code>
     */
    public fun clearUserEvent() {
      _builder.clearUserEvent()
    }
    /**
     * <pre>
     * User management events
     * </pre>
     *
     * <code>.unhinged.cdc.UserEvent user_event = 28;</code>
     * @return Whether the userEvent field is set.
     */
    public fun hasUserEvent(): kotlin.Boolean {
      return _builder.hasUserEvent()
    }

    /**
     * <pre>
     * Metadata and tags
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 30;</code>
     */
    public var metadata: com.google.protobuf.Struct
      @JvmName("getMetadata")
      get() = _builder.getMetadata()
      @JvmName("setMetadata")
      set(value) {
        _builder.setMetadata(value)
      }
    /**
     * <pre>
     * Metadata and tags
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 30;</code>
     */
    public fun clearMetadata() {
      _builder.clearMetadata()
    }
    /**
     * <pre>
     * Metadata and tags
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 30;</code>
     * @return Whether the metadata field is set.
     */
    public fun hasMetadata(): kotlin.Boolean {
      return _builder.hasMetadata()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TagsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string tags = 31;</code>
     * @return A list containing the tags.
     */
    public val tags: com.google.protobuf.kotlin.DslList<kotlin.String, TagsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTagsList()
      )
    /**
     * <code>repeated string tags = 31;</code>
     * @param value The tags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTags")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TagsProxy>.add(value: kotlin.String) {
      _builder.addTags(value)
    }
    /**
     * <code>repeated string tags = 31;</code>
     * @param value The tags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTags")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TagsProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string tags = 31;</code>
     * @param values The tags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTags")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TagsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllTags(values)
    }
    /**
     * <code>repeated string tags = 31;</code>
     * @param values The tags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTags")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TagsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string tags = 31;</code>
     * @param index The index to set the value at.
     * @param value The tags to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTags")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TagsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setTags(index, value)
    }/**
     * <code>repeated string tags = 31;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTags")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TagsProxy>.clear() {
      _builder.clearTags()
    }
    /**
     * <pre>
     * Event routing and processing
     * </pre>
     *
     * <code>string routing_key = 32;</code>
     */
    public var routingKey: kotlin.String
      @JvmName("getRoutingKey")
      get() = _builder.getRoutingKey()
      @JvmName("setRoutingKey")
      set(value) {
        _builder.setRoutingKey(value)
      }
    /**
     * <pre>
     * Event routing and processing
     * </pre>
     *
     * <code>string routing_key = 32;</code>
     */
    public fun clearRoutingKey() {
      _builder.clearRoutingKey()
    }

    /**
     * <code>int32 retry_count = 33;</code>
     */
    public var retryCount: kotlin.Int
      @JvmName("getRetryCount")
      get() = _builder.getRetryCount()
      @JvmName("setRetryCount")
      set(value) {
        _builder.setRetryCount(value)
      }
    /**
     * <code>int32 retry_count = 33;</code>
     */
    public fun clearRetryCount() {
      _builder.clearRetryCount()
    }

    /**
     * <code>.google.protobuf.Timestamp expires_at = 34;</code>
     */
    public var expiresAt: com.google.protobuf.Timestamp
      @JvmName("getExpiresAt")
      get() = _builder.getExpiresAt()
      @JvmName("setExpiresAt")
      set(value) {
        _builder.setExpiresAt(value)
      }
    /**
     * <code>.google.protobuf.Timestamp expires_at = 34;</code>
     */
    public fun clearExpiresAt() {
      _builder.clearExpiresAt()
    }
    /**
     * <code>.google.protobuf.Timestamp expires_at = 34;</code>
     * @return Whether the expiresAt field is set.
     */
    public fun hasExpiresAt(): kotlin.Boolean {
      return _builder.hasExpiresAt()
    }
    public val payloadCase: unhinged.cdc.CdcEvents.UniversalEvent.PayloadCase
      @JvmName("getPayloadCase")
      get() = _builder.getPayloadCase()

    public fun clearPayload() {
      _builder.clearPayload()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcEvents.UniversalEvent.copy(block: unhinged.cdc.UniversalEventKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.UniversalEvent =
  unhinged.cdc.UniversalEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.eventTimeOrNull: com.google.protobuf.Timestamp?
  get() = if (hasEventTime()) getEventTime() else null

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.documentEventOrNull: unhinged.cdc.CdcEvents.DocumentEvent?
  get() = if (hasDocumentEvent()) getDocumentEvent() else null

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.llmEventOrNull: unhinged.cdc.CdcEvents.LLMEvent?
  get() = if (hasLlmEvent()) getLlmEvent() else null

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.agentEventOrNull: unhinged.cdc.CdcEvents.AgentEvent?
  get() = if (hasAgentEvent()) getAgentEvent() else null

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.sessionEventOrNull: unhinged.cdc.CdcEvents.SessionEvent?
  get() = if (hasSessionEvent()) getSessionEvent() else null

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.systemEventOrNull: unhinged.cdc.CdcEvents.SystemEvent?
  get() = if (hasSystemEvent()) getSystemEvent() else null

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.workflowEventOrNull: unhinged.cdc.CdcEvents.WorkflowEvent?
  get() = if (hasWorkflowEvent()) getWorkflowEvent() else null

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.chatEventOrNull: unhinged.cdc.CdcEvents.ChatEvent?
  get() = if (hasChatEvent()) getChatEvent() else null

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.audioEventOrNull: unhinged.cdc.CdcEvents.AudioEvent?
  get() = if (hasAudioEvent()) getAudioEvent() else null

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.userEventOrNull: unhinged.cdc.CdcEvents.UserEvent?
  get() = if (hasUserEvent()) getUserEvent() else null

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.metadataOrNull: com.google.protobuf.Struct?
  get() = if (hasMetadata()) getMetadata() else null

public val unhinged.cdc.CdcEvents.UniversalEventOrBuilder.expiresAtOrNull: com.google.protobuf.Timestamp?
  get() = if (hasExpiresAt()) getExpiresAt() else null

