//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_service.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializeheartbeat")
public inline fun heartbeat(block: unhinged.cdc.HeartbeatKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcService.Heartbeat =
  unhinged.cdc.HeartbeatKt.Dsl._create(unhinged.cdc.CdcService.Heartbeat.newBuilder()).apply { block() }._build()
public object HeartbeatKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcService.Heartbeat.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcService.Heartbeat.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcService.Heartbeat = _builder.build()

    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     */
    public var timestamp: com.google.protobuf.Timestamp
      @JvmName("getTimestamp")
      get() = _builder.getTimestamp()
      @JvmName("setTimestamp")
      set(value) {
        _builder.setTimestamp(value)
      }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 1;</code>
     * @return Whether the timestamp field is set.
     */
    public fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }

    /**
     * <code>int64 current_sequence = 2;</code>
     */
    public var currentSequence: kotlin.Long
      @JvmName("getCurrentSequence")
      get() = _builder.getCurrentSequence()
      @JvmName("setCurrentSequence")
      set(value) {
        _builder.setCurrentSequence(value)
      }
    /**
     * <code>int64 current_sequence = 2;</code>
     */
    public fun clearCurrentSequence() {
      _builder.clearCurrentSequence()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcService.Heartbeat.copy(block: unhinged.cdc.HeartbeatKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcService.Heartbeat =
  unhinged.cdc.HeartbeatKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.cdc.CdcService.HeartbeatOrBuilder.timestampOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTimestamp()) getTimestamp() else null

