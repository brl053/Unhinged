//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_events.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializeparticipantJoined")
public inline fun participantJoined(block: unhinged.cdc.ParticipantJoinedKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.ParticipantJoined =
  unhinged.cdc.ParticipantJoinedKt.Dsl._create(unhinged.cdc.CdcEvents.ParticipantJoined.newBuilder()).apply { block() }._build()
public object ParticipantJoinedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcEvents.ParticipantJoined.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcEvents.ParticipantJoined.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcEvents.ParticipantJoined = _builder.build()

    /**
     * <code>string user_id = 1;</code>
     */
    public var userId: kotlin.String
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <code>string user_id = 1;</code>
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }

    /**
     * <code>string invited_by = 2;</code>
     */
    public var invitedBy: kotlin.String
      @JvmName("getInvitedBy")
      get() = _builder.getInvitedBy()
      @JvmName("setInvitedBy")
      set(value) {
        _builder.setInvitedBy(value)
      }
    /**
     * <code>string invited_by = 2;</code>
     */
    public fun clearInvitedBy() {
      _builder.clearInvitedBy()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcEvents.ParticipantJoined.copy(block: unhinged.cdc.ParticipantJoinedKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.ParticipantJoined =
  unhinged.cdc.ParticipantJoinedKt.Dsl._create(this.toBuilder()).apply { block() }._build()

