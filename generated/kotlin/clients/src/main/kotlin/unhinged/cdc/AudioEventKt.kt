//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cdc_events.proto

package unhinged.cdc;

@kotlin.jvm.JvmName("-initializeaudioEvent")
public inline fun audioEvent(block: unhinged.cdc.AudioEventKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.AudioEvent =
  unhinged.cdc.AudioEventKt.Dsl._create(unhinged.cdc.CdcEvents.AudioEvent.newBuilder()).apply { block() }._build()
public object AudioEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.cdc.CdcEvents.AudioEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.cdc.CdcEvents.AudioEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.cdc.CdcEvents.AudioEvent = _builder.build()

    /**
     * <code>string audio_id = 1;</code>
     */
    public var audioId: kotlin.String
      @JvmName("getAudioId")
      get() = _builder.getAudioId()
      @JvmName("setAudioId")
      set(value) {
        _builder.setAudioId(value)
      }
    /**
     * <code>string audio_id = 1;</code>
     */
    public fun clearAudioId() {
      _builder.clearAudioId()
    }

    /**
     * <code>.unhinged.cdc.AudioEventType event_type = 2;</code>
     */
    public var eventType: unhinged.cdc.CdcEvents.AudioEventType
      @JvmName("getEventType")
      get() = _builder.getEventType()
      @JvmName("setEventType")
      set(value) {
        _builder.setEventType(value)
      }
    /**
     * <code>.unhinged.cdc.AudioEventType event_type = 2;</code>
     */
    public fun clearEventType() {
      _builder.clearEventType()
    }

    /**
     * <code>.unhinged.cdc.TTSStarted tts_started = 10;</code>
     */
    public var ttsStarted: unhinged.cdc.CdcEvents.TTSStarted
      @JvmName("getTtsStarted")
      get() = _builder.getTtsStarted()
      @JvmName("setTtsStarted")
      set(value) {
        _builder.setTtsStarted(value)
      }
    /**
     * <code>.unhinged.cdc.TTSStarted tts_started = 10;</code>
     */
    public fun clearTtsStarted() {
      _builder.clearTtsStarted()
    }
    /**
     * <code>.unhinged.cdc.TTSStarted tts_started = 10;</code>
     * @return Whether the ttsStarted field is set.
     */
    public fun hasTtsStarted(): kotlin.Boolean {
      return _builder.hasTtsStarted()
    }

    /**
     * <code>.unhinged.cdc.TTSCompleted tts_completed = 11;</code>
     */
    public var ttsCompleted: unhinged.cdc.CdcEvents.TTSCompleted
      @JvmName("getTtsCompleted")
      get() = _builder.getTtsCompleted()
      @JvmName("setTtsCompleted")
      set(value) {
        _builder.setTtsCompleted(value)
      }
    /**
     * <code>.unhinged.cdc.TTSCompleted tts_completed = 11;</code>
     */
    public fun clearTtsCompleted() {
      _builder.clearTtsCompleted()
    }
    /**
     * <code>.unhinged.cdc.TTSCompleted tts_completed = 11;</code>
     * @return Whether the ttsCompleted field is set.
     */
    public fun hasTtsCompleted(): kotlin.Boolean {
      return _builder.hasTtsCompleted()
    }

    /**
     * <code>.unhinged.cdc.STTCompleted stt_completed = 12;</code>
     */
    public var sttCompleted: unhinged.cdc.CdcEvents.STTCompleted
      @JvmName("getSttCompleted")
      get() = _builder.getSttCompleted()
      @JvmName("setSttCompleted")
      set(value) {
        _builder.setSttCompleted(value)
      }
    /**
     * <code>.unhinged.cdc.STTCompleted stt_completed = 12;</code>
     */
    public fun clearSttCompleted() {
      _builder.clearSttCompleted()
    }
    /**
     * <code>.unhinged.cdc.STTCompleted stt_completed = 12;</code>
     * @return Whether the sttCompleted field is set.
     */
    public fun hasSttCompleted(): kotlin.Boolean {
      return _builder.hasSttCompleted()
    }
    public val eventDataCase: unhinged.cdc.CdcEvents.AudioEvent.EventDataCase
      @JvmName("getEventDataCase")
      get() = _builder.getEventDataCase()

    public fun clearEventData() {
      _builder.clearEventData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.cdc.CdcEvents.AudioEvent.copy(block: unhinged.cdc.AudioEventKt.Dsl.() -> kotlin.Unit): unhinged.cdc.CdcEvents.AudioEvent =
  unhinged.cdc.AudioEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.cdc.CdcEvents.AudioEventOrBuilder.ttsStartedOrNull: unhinged.cdc.CdcEvents.TTSStarted?
  get() = if (hasTtsStarted()) getTtsStarted() else null

public val unhinged.cdc.CdcEvents.AudioEventOrBuilder.ttsCompletedOrNull: unhinged.cdc.CdcEvents.TTSCompleted?
  get() = if (hasTtsCompleted()) getTtsCompleted() else null

public val unhinged.cdc.CdcEvents.AudioEventOrBuilder.sttCompletedOrNull: unhinged.cdc.CdcEvents.STTCompleted?
  get() = if (hasSttCompleted()) getSttCompleted() else null

