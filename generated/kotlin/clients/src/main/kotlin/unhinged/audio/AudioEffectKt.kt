//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: audio.proto

package unhinged.audio;

@kotlin.jvm.JvmName("-initializeaudioEffect")
public inline fun audioEffect(block: unhinged.audio.AudioEffectKt.Dsl.() -> kotlin.Unit): unhinged.audio.AudioEffect =
  unhinged.audio.AudioEffectKt.Dsl._create(unhinged.audio.AudioEffect.newBuilder()).apply { block() }._build()
public object AudioEffectKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.audio.AudioEffect.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.audio.AudioEffect.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.audio.AudioEffect = _builder.build()

    /**
     * <code>.unhinged.audio.v1.AudioEffectType type = 1;</code>
     */
    public var type: unhinged.audio.AudioEffectType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>.unhinged.audio.v1.AudioEffectType type = 1;</code>
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * <pre>
     * 0.0 to 1.0
     * </pre>
     *
     * <code>float intensity = 2;</code>
     */
    public var intensity: kotlin.Float
      @JvmName("getIntensity")
      get() = _builder.getIntensity()
      @JvmName("setIntensity")
      set(value) {
        _builder.setIntensity(value)
      }
    /**
     * <pre>
     * 0.0 to 1.0
     * </pre>
     *
     * <code>float intensity = 2;</code>
     */
    public fun clearIntensity() {
      _builder.clearIntensity()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ParametersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>map&lt;string, string&gt; parameters = 3;</code>
     */
     public val parameters: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ParametersProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getParametersMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getParametersMap()
      )
    /**
     * <code>map&lt;string, string&gt; parameters = 3;</code>
     */
    @JvmName("putParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ParametersProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putParameters(key, value)
       }
    /**
     * <code>map&lt;string, string&gt; parameters = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setParameters")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ParametersProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <code>map&lt;string, string&gt; parameters = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ParametersProxy>
      .remove(key: kotlin.String) {
         _builder.removeParameters(key)
       }
    /**
     * <code>map&lt;string, string&gt; parameters = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ParametersProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllParameters(map)
       }
    /**
     * <code>map&lt;string, string&gt; parameters = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ParametersProxy>
      .clear() {
         _builder.clearParameters()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.audio.AudioEffect.copy(block: unhinged.audio.AudioEffectKt.Dsl.() -> kotlin.Unit): unhinged.audio.AudioEffect =
  unhinged.audio.AudioEffectKt.Dsl._create(this.toBuilder()).apply { block() }._build()

