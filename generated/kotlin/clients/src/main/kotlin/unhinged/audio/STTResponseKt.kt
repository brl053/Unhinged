//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: audio.proto

package unhinged.audio;

@kotlin.jvm.JvmName("-initializesTTResponse")
public inline fun sTTResponse(block: unhinged.audio.STTResponseKt.Dsl.() -> kotlin.Unit): unhinged.audio.STTResponse =
  unhinged.audio.STTResponseKt.Dsl._create(unhinged.audio.STTResponse.newBuilder()).apply { block() }._build()
public object STTResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.audio.STTResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.audio.STTResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.audio.STTResponse = _builder.build()

    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     */
    public var response: unhinged.common.StandardResponse
      @JvmName("getResponse")
      get() = _builder.getResponse()
      @JvmName("setResponse")
      set(value) {
        _builder.setResponse(value)
      }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     */
    public fun clearResponse() {
      _builder.clearResponse()
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     * @return Whether the response field is set.
     */
    public fun hasResponse(): kotlin.Boolean {
      return _builder.hasResponse()
    }

    /**
     * <code>string transcript = 2;</code>
     */
    public var transcript: kotlin.String
      @JvmName("getTranscript")
      get() = _builder.getTranscript()
      @JvmName("setTranscript")
      set(value) {
        _builder.setTranscript(value)
      }
    /**
     * <code>string transcript = 2;</code>
     */
    public fun clearTranscript() {
      _builder.clearTranscript()
    }

    /**
     * <code>float confidence = 3;</code>
     */
    public var confidence: kotlin.Float
      @JvmName("getConfidence")
      get() = _builder.getConfidence()
      @JvmName("setConfidence")
      set(value) {
        _builder.setConfidence(value)
      }
    /**
     * <code>float confidence = 3;</code>
     */
    public fun clearConfidence() {
      _builder.clearConfidence()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SegmentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
     */
     public val segments: com.google.protobuf.kotlin.DslList<unhinged.audio.TranscriptSegment, SegmentsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSegmentsList()
      )
    /**
     * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
     * @param value The segments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSegments")
    public fun com.google.protobuf.kotlin.DslList<unhinged.audio.TranscriptSegment, SegmentsProxy>.add(value: unhinged.audio.TranscriptSegment) {
      _builder.addSegments(value)
    }
    /**
     * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
     * @param value The segments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSegments")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.audio.TranscriptSegment, SegmentsProxy>.plusAssign(value: unhinged.audio.TranscriptSegment) {
      add(value)
    }
    /**
     * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
     * @param values The segments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSegments")
    public fun com.google.protobuf.kotlin.DslList<unhinged.audio.TranscriptSegment, SegmentsProxy>.addAll(values: kotlin.collections.Iterable<unhinged.audio.TranscriptSegment>) {
      _builder.addAllSegments(values)
    }
    /**
     * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
     * @param values The segments to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSegments")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.audio.TranscriptSegment, SegmentsProxy>.plusAssign(values: kotlin.collections.Iterable<unhinged.audio.TranscriptSegment>) {
      addAll(values)
    }
    /**
     * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
     * @param index The index to set the value at.
     * @param value The segments to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSegments")
    public operator fun com.google.protobuf.kotlin.DslList<unhinged.audio.TranscriptSegment, SegmentsProxy>.set(index: kotlin.Int, value: unhinged.audio.TranscriptSegment) {
      _builder.setSegments(index, value)
    }
    /**
     * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSegments")
    public fun com.google.protobuf.kotlin.DslList<unhinged.audio.TranscriptSegment, SegmentsProxy>.clear() {
      _builder.clearSegments()
    }


    /**
     * <pre>
     * ← DRY! (duration, bytes, etc.)
     * </pre>
     *
     * <code>.unhinged.common.v1.AudioUsage usage = 5;</code>
     */
    public var usage: unhinged.common.AudioUsage
      @JvmName("getUsage")
      get() = _builder.getUsage()
      @JvmName("setUsage")
      set(value) {
        _builder.setUsage(value)
      }
    /**
     * <pre>
     * ← DRY! (duration, bytes, etc.)
     * </pre>
     *
     * <code>.unhinged.common.v1.AudioUsage usage = 5;</code>
     */
    public fun clearUsage() {
      _builder.clearUsage()
    }
    /**
     * <pre>
     * ← DRY! (duration, bytes, etc.)
     * </pre>
     *
     * <code>.unhinged.common.v1.AudioUsage usage = 5;</code>
     * @return Whether the usage field is set.
     */
    public fun hasUsage(): kotlin.Boolean {
      return _builder.hasUsage()
    }

    /**
     * <code>.unhinged.audio.v1.STTMetadata metadata = 6;</code>
     */
    public var metadata: unhinged.audio.STTMetadata
      @JvmName("getMetadata")
      get() = _builder.getMetadata()
      @JvmName("setMetadata")
      set(value) {
        _builder.setMetadata(value)
      }
    /**
     * <code>.unhinged.audio.v1.STTMetadata metadata = 6;</code>
     */
    public fun clearMetadata() {
      _builder.clearMetadata()
    }
    /**
     * <code>.unhinged.audio.v1.STTMetadata metadata = 6;</code>
     * @return Whether the metadata field is set.
     */
    public fun hasMetadata(): kotlin.Boolean {
      return _builder.hasMetadata()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.audio.STTResponse.copy(block: unhinged.audio.STTResponseKt.Dsl.() -> kotlin.Unit): unhinged.audio.STTResponse =
  unhinged.audio.STTResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.audio.STTResponseOrBuilder.responseOrNull: unhinged.common.StandardResponse?
  get() = if (hasResponse()) getResponse() else null

public val unhinged.audio.STTResponseOrBuilder.usageOrNull: unhinged.common.AudioUsage?
  get() = if (hasUsage()) getUsage() else null

public val unhinged.audio.STTResponseOrBuilder.metadataOrNull: unhinged.audio.STTMetadata?
  get() = if (hasMetadata()) getMetadata() else null

