//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: audio.proto

package unhinged.audio;

@kotlin.jvm.JvmName("-initializeanalyzeAudioResponse")
public inline fun analyzeAudioResponse(block: unhinged.audio.AnalyzeAudioResponseKt.Dsl.() -> kotlin.Unit): unhinged.audio.AnalyzeAudioResponse =
  unhinged.audio.AnalyzeAudioResponseKt.Dsl._create(unhinged.audio.AnalyzeAudioResponse.newBuilder()).apply { block() }._build()
public object AnalyzeAudioResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.audio.AnalyzeAudioResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.audio.AnalyzeAudioResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.audio.AnalyzeAudioResponse = _builder.build()

    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     */
    public var response: unhinged.common.StandardResponse
      @JvmName("getResponse")
      get() = _builder.getResponse()
      @JvmName("setResponse")
      set(value) {
        _builder.setResponse(value)
      }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     */
    public fun clearResponse() {
      _builder.clearResponse()
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     * @return Whether the response field is set.
     */
    public fun hasResponse(): kotlin.Boolean {
      return _builder.hasResponse()
    }

    /**
     * <code>.unhinged.audio.v1.AudioAnalysis analysis = 2;</code>
     */
    public var analysis: unhinged.audio.AudioAnalysis
      @JvmName("getAnalysis")
      get() = _builder.getAnalysis()
      @JvmName("setAnalysis")
      set(value) {
        _builder.setAnalysis(value)
      }
    /**
     * <code>.unhinged.audio.v1.AudioAnalysis analysis = 2;</code>
     */
    public fun clearAnalysis() {
      _builder.clearAnalysis()
    }
    /**
     * <code>.unhinged.audio.v1.AudioAnalysis analysis = 2;</code>
     * @return Whether the analysis field is set.
     */
    public fun hasAnalysis(): kotlin.Boolean {
      return _builder.hasAnalysis()
    }

    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.AudioUsage usage = 3;</code>
     */
    public var usage: unhinged.common.AudioUsage
      @JvmName("getUsage")
      get() = _builder.getUsage()
      @JvmName("setUsage")
      set(value) {
        _builder.setUsage(value)
      }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.AudioUsage usage = 3;</code>
     */
    public fun clearUsage() {
      _builder.clearUsage()
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.AudioUsage usage = 3;</code>
     * @return Whether the usage field is set.
     */
    public fun hasUsage(): kotlin.Boolean {
      return _builder.hasUsage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.audio.AnalyzeAudioResponse.copy(block: unhinged.audio.AnalyzeAudioResponseKt.Dsl.() -> kotlin.Unit): unhinged.audio.AnalyzeAudioResponse =
  unhinged.audio.AnalyzeAudioResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.audio.AnalyzeAudioResponseOrBuilder.responseOrNull: unhinged.common.StandardResponse?
  get() = if (hasResponse()) getResponse() else null

public val unhinged.audio.AnalyzeAudioResponseOrBuilder.analysisOrNull: unhinged.audio.AudioAnalysis?
  get() = if (hasAnalysis()) getAnalysis() else null

public val unhinged.audio.AnalyzeAudioResponseOrBuilder.usageOrNull: unhinged.common.AudioUsage?
  get() = if (hasUsage()) getUsage() else null

