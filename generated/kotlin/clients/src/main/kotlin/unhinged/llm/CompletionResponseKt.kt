//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: llm.proto

package unhinged.llm;

@kotlin.jvm.JvmName("-initializecompletionResponse")
public inline fun completionResponse(block: unhinged.llm.CompletionResponseKt.Dsl.() -> kotlin.Unit): unhinged.llm.CompletionResponse =
  unhinged.llm.CompletionResponseKt.Dsl._create(unhinged.llm.CompletionResponse.newBuilder()).apply { block() }._build()
public object CompletionResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.llm.CompletionResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.llm.CompletionResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.llm.CompletionResponse = _builder.build()

    /**
     * <pre>
     * ← DRY! (success, error handling)
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     */
    public var response: unhinged.common.StandardResponse
      @JvmName("getResponse")
      get() = _builder.getResponse()
      @JvmName("setResponse")
      set(value) {
        _builder.setResponse(value)
      }
    /**
     * <pre>
     * ← DRY! (success, error handling)
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     */
    public fun clearResponse() {
      _builder.clearResponse()
    }
    /**
     * <pre>
     * ← DRY! (success, error handling)
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     * @return Whether the response field is set.
     */
    public fun hasResponse(): kotlin.Boolean {
      return _builder.hasResponse()
    }

    /**
     * <code>string completion_id = 2;</code>
     */
    public var completionId: kotlin.String
      @JvmName("getCompletionId")
      get() = _builder.getCompletionId()
      @JvmName("setCompletionId")
      set(value) {
        _builder.setCompletionId(value)
      }
    /**
     * <code>string completion_id = 2;</code>
     */
    public fun clearCompletionId() {
      _builder.clearCompletionId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ChoicesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
     */
     public val choices: com.google.protobuf.kotlin.DslList<unhinged.llm.CompletionChoice, ChoicesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getChoicesList()
      )
    /**
     * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
     * @param value The choices to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addChoices")
    public fun com.google.protobuf.kotlin.DslList<unhinged.llm.CompletionChoice, ChoicesProxy>.add(value: unhinged.llm.CompletionChoice) {
      _builder.addChoices(value)
    }
    /**
     * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
     * @param value The choices to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignChoices")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.llm.CompletionChoice, ChoicesProxy>.plusAssign(value: unhinged.llm.CompletionChoice) {
      add(value)
    }
    /**
     * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
     * @param values The choices to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllChoices")
    public fun com.google.protobuf.kotlin.DslList<unhinged.llm.CompletionChoice, ChoicesProxy>.addAll(values: kotlin.collections.Iterable<unhinged.llm.CompletionChoice>) {
      _builder.addAllChoices(values)
    }
    /**
     * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
     * @param values The choices to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllChoices")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.llm.CompletionChoice, ChoicesProxy>.plusAssign(values: kotlin.collections.Iterable<unhinged.llm.CompletionChoice>) {
      addAll(values)
    }
    /**
     * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
     * @param index The index to set the value at.
     * @param value The choices to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setChoices")
    public operator fun com.google.protobuf.kotlin.DslList<unhinged.llm.CompletionChoice, ChoicesProxy>.set(index: kotlin.Int, value: unhinged.llm.CompletionChoice) {
      _builder.setChoices(index, value)
    }
    /**
     * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearChoices")
    public fun com.google.protobuf.kotlin.DslList<unhinged.llm.CompletionChoice, ChoicesProxy>.clear() {
      _builder.clearChoices()
    }


    /**
     * <pre>
     * ← DRY! (token usage)
     * </pre>
     *
     * <code>.unhinged.common.v1.UsageMetrics usage = 4;</code>
     */
    public var usage: unhinged.common.UsageMetrics
      @JvmName("getUsage")
      get() = _builder.getUsage()
      @JvmName("setUsage")
      set(value) {
        _builder.setUsage(value)
      }
    /**
     * <pre>
     * ← DRY! (token usage)
     * </pre>
     *
     * <code>.unhinged.common.v1.UsageMetrics usage = 4;</code>
     */
    public fun clearUsage() {
      _builder.clearUsage()
    }
    /**
     * <pre>
     * ← DRY! (token usage)
     * </pre>
     *
     * <code>.unhinged.common.v1.UsageMetrics usage = 4;</code>
     * @return Whether the usage field is set.
     */
    public fun hasUsage(): kotlin.Boolean {
      return _builder.hasUsage()
    }

    /**
     * <code>.unhinged.llm.v1.CompletionMetadata metadata = 5;</code>
     */
    public var metadata: unhinged.llm.CompletionMetadata
      @JvmName("getMetadata")
      get() = _builder.getMetadata()
      @JvmName("setMetadata")
      set(value) {
        _builder.setMetadata(value)
      }
    /**
     * <code>.unhinged.llm.v1.CompletionMetadata metadata = 5;</code>
     */
    public fun clearMetadata() {
      _builder.clearMetadata()
    }
    /**
     * <code>.unhinged.llm.v1.CompletionMetadata metadata = 5;</code>
     * @return Whether the metadata field is set.
     */
    public fun hasMetadata(): kotlin.Boolean {
      return _builder.hasMetadata()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.llm.CompletionResponse.copy(block: unhinged.llm.CompletionResponseKt.Dsl.() -> kotlin.Unit): unhinged.llm.CompletionResponse =
  unhinged.llm.CompletionResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.llm.CompletionResponseOrBuilder.responseOrNull: unhinged.common.StandardResponse?
  get() = if (hasResponse()) getResponse() else null

public val unhinged.llm.CompletionResponseOrBuilder.usageOrNull: unhinged.common.UsageMetrics?
  get() = if (hasUsage()) getUsage() else null

public val unhinged.llm.CompletionResponseOrBuilder.metadataOrNull: unhinged.llm.CompletionMetadata?
  get() = if (hasMetadata()) getMetadata() else null

