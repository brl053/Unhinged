//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: llm.proto

package unhinged.llm;

@kotlin.jvm.JvmName("-initializecompletionMetadata")
public inline fun completionMetadata(block: unhinged.llm.CompletionMetadataKt.Dsl.() -> kotlin.Unit): unhinged.llm.CompletionMetadata =
  unhinged.llm.CompletionMetadataKt.Dsl._create(unhinged.llm.CompletionMetadata.newBuilder()).apply { block() }._build()
public object CompletionMetadataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.llm.CompletionMetadata.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.llm.CompletionMetadata.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.llm.CompletionMetadata = _builder.build()

    /**
     * <code>string model = 1;</code>
     */
    public var model: kotlin.String
      @JvmName("getModel")
      get() = _builder.getModel()
      @JvmName("setModel")
      set(value) {
        _builder.setModel(value)
      }
    /**
     * <code>string model = 1;</code>
     */
    public fun clearModel() {
      _builder.clearModel()
    }

    /**
     * <pre>
     * "openai", "anthropic", "local", etc.
     * </pre>
     *
     * <code>string provider = 2;</code>
     */
    public var provider: kotlin.String
      @JvmName("getProvider")
      get() = _builder.getProvider()
      @JvmName("setProvider")
      set(value) {
        _builder.setProvider(value)
      }
    /**
     * <pre>
     * "openai", "anthropic", "local", etc.
     * </pre>
     *
     * <code>string provider = 2;</code>
     */
    public fun clearProvider() {
      _builder.clearProvider()
    }

    /**
     * <code>float processing_time_ms = 3;</code>
     */
    public var processingTimeMs: kotlin.Float
      @JvmName("getProcessingTimeMs")
      get() = _builder.getProcessingTimeMs()
      @JvmName("setProcessingTimeMs")
      set(value) {
        _builder.setProcessingTimeMs(value)
      }
    /**
     * <code>float processing_time_ms = 3;</code>
     */
    public fun clearProcessingTimeMs() {
      _builder.clearProcessingTimeMs()
    }

    /**
     * <pre>
     * Number of DocumentStore docs included
     * </pre>
     *
     * <code>int32 context_documents_used = 4;</code>
     */
    public var contextDocumentsUsed: kotlin.Int
      @JvmName("getContextDocumentsUsed")
      get() = _builder.getContextDocumentsUsed()
      @JvmName("setContextDocumentsUsed")
      set(value) {
        _builder.setContextDocumentsUsed(value)
      }
    /**
     * <pre>
     * Number of DocumentStore docs included
     * </pre>
     *
     * <code>int32 context_documents_used = 4;</code>
     */
    public fun clearContextDocumentsUsed() {
      _builder.clearContextDocumentsUsed()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ContextDocumentIdsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string context_document_ids = 5;</code>
     * @return A list containing the contextDocumentIds.
     */
    public val contextDocumentIds: com.google.protobuf.kotlin.DslList<kotlin.String, ContextDocumentIdsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getContextDocumentIdsList()
      )
    /**
     * <code>repeated string context_document_ids = 5;</code>
     * @param value The contextDocumentIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addContextDocumentIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextDocumentIdsProxy>.add(value: kotlin.String) {
      _builder.addContextDocumentIds(value)
    }
    /**
     * <code>repeated string context_document_ids = 5;</code>
     * @param value The contextDocumentIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignContextDocumentIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextDocumentIdsProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string context_document_ids = 5;</code>
     * @param values The contextDocumentIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllContextDocumentIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextDocumentIdsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllContextDocumentIds(values)
    }
    /**
     * <code>repeated string context_document_ids = 5;</code>
     * @param values The contextDocumentIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllContextDocumentIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextDocumentIdsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string context_document_ids = 5;</code>
     * @param index The index to set the value at.
     * @param value The contextDocumentIds to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setContextDocumentIds")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextDocumentIdsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setContextDocumentIds(index, value)
    }/**
     * <code>repeated string context_document_ids = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearContextDocumentIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ContextDocumentIdsProxy>.clear() {
      _builder.clearContextDocumentIds()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.llm.CompletionMetadata.copy(block: unhinged.llm.CompletionMetadataKt.Dsl.() -> kotlin.Unit): unhinged.llm.CompletionMetadata =
  unhinged.llm.CompletionMetadataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

