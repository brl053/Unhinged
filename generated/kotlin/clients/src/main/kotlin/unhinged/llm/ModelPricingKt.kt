//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: llm.proto

package unhinged.llm;

@kotlin.jvm.JvmName("-initializemodelPricing")
public inline fun modelPricing(block: unhinged.llm.ModelPricingKt.Dsl.() -> kotlin.Unit): unhinged.llm.ModelPricing =
  unhinged.llm.ModelPricingKt.Dsl._create(unhinged.llm.ModelPricing.newBuilder()).apply { block() }._build()
public object ModelPricingKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.llm.ModelPricing.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.llm.ModelPricing.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.llm.ModelPricing = _builder.build()

    /**
     * <code>float input_cost_per_1k_tokens = 1;</code>
     */
    public var inputCostPer1KTokens: kotlin.Float
      @JvmName("getInputCostPer1KTokens")
      get() = _builder.getInputCostPer1KTokens()
      @JvmName("setInputCostPer1KTokens")
      set(value) {
        _builder.setInputCostPer1KTokens(value)
      }
    /**
     * <code>float input_cost_per_1k_tokens = 1;</code>
     */
    public fun clearInputCostPer1KTokens() {
      _builder.clearInputCostPer1KTokens()
    }

    /**
     * <code>float output_cost_per_1k_tokens = 2;</code>
     */
    public var outputCostPer1KTokens: kotlin.Float
      @JvmName("getOutputCostPer1KTokens")
      get() = _builder.getOutputCostPer1KTokens()
      @JvmName("setOutputCostPer1KTokens")
      set(value) {
        _builder.setOutputCostPer1KTokens(value)
      }
    /**
     * <code>float output_cost_per_1k_tokens = 2;</code>
     */
    public fun clearOutputCostPer1KTokens() {
      _builder.clearOutputCostPer1KTokens()
    }

    /**
     * <pre>
     * "USD"
     * </pre>
     *
     * <code>string currency = 3;</code>
     */
    public var currency: kotlin.String
      @JvmName("getCurrency")
      get() = _builder.getCurrency()
      @JvmName("setCurrency")
      set(value) {
        _builder.setCurrency(value)
      }
    /**
     * <pre>
     * "USD"
     * </pre>
     *
     * <code>string currency = 3;</code>
     */
    public fun clearCurrency() {
      _builder.clearCurrency()
    }

    /**
     * <code>bool has_free_tier = 4;</code>
     */
    public var hasFreeTier: kotlin.Boolean
      @JvmName("getHasFreeTier")
      get() = _builder.getHasFreeTier()
      @JvmName("setHasFreeTier")
      set(value) {
        _builder.setHasFreeTier(value)
      }
    /**
     * <code>bool has_free_tier = 4;</code>
     */
    public fun clearHasFreeTier() {
      _builder.clearHasFreeTier()
    }

    /**
     * <pre>
     * Tokens per month
     * </pre>
     *
     * <code>int32 free_tier_limit = 5;</code>
     */
    public var freeTierLimit: kotlin.Int
      @JvmName("getFreeTierLimit")
      get() = _builder.getFreeTierLimit()
      @JvmName("setFreeTierLimit")
      set(value) {
        _builder.setFreeTierLimit(value)
      }
    /**
     * <pre>
     * Tokens per month
     * </pre>
     *
     * <code>int32 free_tier_limit = 5;</code>
     */
    public fun clearFreeTierLimit() {
      _builder.clearFreeTierLimit()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.llm.ModelPricing.copy(block: unhinged.llm.ModelPricingKt.Dsl.() -> kotlin.Unit): unhinged.llm.ModelPricing =
  unhinged.llm.ModelPricingKt.Dsl._create(this.toBuilder()).apply { block() }._build()

