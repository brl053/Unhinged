//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: llm.proto

package unhinged.llm;

@kotlin.jvm.JvmName("-initializedocumentTokens")
public inline fun documentTokens(block: unhinged.llm.DocumentTokensKt.Dsl.() -> kotlin.Unit): unhinged.llm.DocumentTokens =
  unhinged.llm.DocumentTokensKt.Dsl._create(unhinged.llm.DocumentTokens.newBuilder()).apply { block() }._build()
public object DocumentTokensKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.llm.DocumentTokens.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.llm.DocumentTokens.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.llm.DocumentTokens = _builder.build()

    /**
     * <code>string document_id = 1;</code>
     */
    public var documentId: kotlin.String
      @JvmName("getDocumentId")
      get() = _builder.getDocumentId()
      @JvmName("setDocumentId")
      set(value) {
        _builder.setDocumentId(value)
      }
    /**
     * <code>string document_id = 1;</code>
     */
    public fun clearDocumentId() {
      _builder.clearDocumentId()
    }

    /**
     * <code>string document_type = 2;</code>
     */
    public var documentType: kotlin.String
      @JvmName("getDocumentType")
      get() = _builder.getDocumentType()
      @JvmName("setDocumentType")
      set(value) {
        _builder.setDocumentType(value)
      }
    /**
     * <code>string document_type = 2;</code>
     */
    public fun clearDocumentType() {
      _builder.clearDocumentType()
    }

    /**
     * <code>int32 token_count = 3;</code>
     */
    public var tokenCount: kotlin.Int
      @JvmName("getTokenCount")
      get() = _builder.getTokenCount()
      @JvmName("setTokenCount")
      set(value) {
        _builder.setTokenCount(value)
      }
    /**
     * <code>int32 token_count = 3;</code>
     */
    public fun clearTokenCount() {
      _builder.clearTokenCount()
    }

    /**
     * <code>float relevance_score = 4;</code>
     */
    public var relevanceScore: kotlin.Float
      @JvmName("getRelevanceScore")
      get() = _builder.getRelevanceScore()
      @JvmName("setRelevanceScore")
      set(value) {
        _builder.setRelevanceScore(value)
      }
    /**
     * <code>float relevance_score = 4;</code>
     */
    public fun clearRelevanceScore() {
      _builder.clearRelevanceScore()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.llm.DocumentTokens.copy(block: unhinged.llm.DocumentTokensKt.Dsl.() -> kotlin.Unit): unhinged.llm.DocumentTokens =
  unhinged.llm.DocumentTokensKt.Dsl._create(this.toBuilder()).apply { block() }._build()

