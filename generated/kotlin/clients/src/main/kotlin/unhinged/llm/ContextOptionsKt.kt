//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: llm.proto

package unhinged.llm;

@kotlin.jvm.JvmName("-initializecontextOptions")
public inline fun contextOptions(block: unhinged.llm.ContextOptionsKt.Dsl.() -> kotlin.Unit): unhinged.llm.ContextOptions =
  unhinged.llm.ContextOptionsKt.Dsl._create(unhinged.llm.ContextOptions.newBuilder()).apply { block() }._build()
public object ContextOptionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.llm.ContextOptions.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.llm.ContextOptions.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.llm.ContextOptions = _builder.build()

    /**
     * <pre>
     * Maximum tokens to use for context
     * </pre>
     *
     * <code>int32 max_context_tokens = 1;</code>
     */
    public var maxContextTokens: kotlin.Int
      @JvmName("getMaxContextTokens")
      get() = _builder.getMaxContextTokens()
      @JvmName("setMaxContextTokens")
      set(value) {
        _builder.setMaxContextTokens(value)
      }
    /**
     * <pre>
     * Maximum tokens to use for context
     * </pre>
     *
     * <code>int32 max_context_tokens = 1;</code>
     */
    public fun clearMaxContextTokens() {
      _builder.clearMaxContextTokens()
    }

    /**
     * <pre>
     * Minimum relevance score for documents
     * </pre>
     *
     * <code>float relevance_threshold = 2;</code>
     */
    public var relevanceThreshold: kotlin.Float
      @JvmName("getRelevanceThreshold")
      get() = _builder.getRelevanceThreshold()
      @JvmName("setRelevanceThreshold")
      set(value) {
        _builder.setRelevanceThreshold(value)
      }
    /**
     * <pre>
     * Minimum relevance score for documents
     * </pre>
     *
     * <code>float relevance_threshold = 2;</code>
     */
    public fun clearRelevanceThreshold() {
      _builder.clearRelevanceThreshold()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DocumentTypesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Filter by document types
     * </pre>
     *
     * <code>repeated string document_types = 3;</code>
     * @return A list containing the documentTypes.
     */
    public val documentTypes: com.google.protobuf.kotlin.DslList<kotlin.String, DocumentTypesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDocumentTypesList()
      )
    /**
     * <pre>
     * Filter by document types
     * </pre>
     *
     * <code>repeated string document_types = 3;</code>
     * @param value The documentTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addDocumentTypes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, DocumentTypesProxy>.add(value: kotlin.String) {
      _builder.addDocumentTypes(value)
    }
    /**
     * <pre>
     * Filter by document types
     * </pre>
     *
     * <code>repeated string document_types = 3;</code>
     * @param value The documentTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignDocumentTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, DocumentTypesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * Filter by document types
     * </pre>
     *
     * <code>repeated string document_types = 3;</code>
     * @param values The documentTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllDocumentTypes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, DocumentTypesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllDocumentTypes(values)
    }
    /**
     * <pre>
     * Filter by document types
     * </pre>
     *
     * <code>repeated string document_types = 3;</code>
     * @param values The documentTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllDocumentTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, DocumentTypesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * Filter by document types
     * </pre>
     *
     * <code>repeated string document_types = 3;</code>
     * @param index The index to set the value at.
     * @param value The documentTypes to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setDocumentTypes")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, DocumentTypesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setDocumentTypes(index, value)
    }/**
     * <pre>
     * Filter by document types
     * </pre>
     *
     * <code>repeated string document_types = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearDocumentTypes")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, DocumentTypesProxy>.clear() {
      _builder.clearDocumentTypes()
    }
    /**
     * <pre>
     * Include document metadata in context
     * </pre>
     *
     * <code>bool include_metadata = 4;</code>
     */
    public var includeMetadata: kotlin.Boolean
      @JvmName("getIncludeMetadata")
      get() = _builder.getIncludeMetadata()
      @JvmName("setIncludeMetadata")
      set(value) {
        _builder.setIncludeMetadata(value)
      }
    /**
     * <pre>
     * Include document metadata in context
     * </pre>
     *
     * <code>bool include_metadata = 4;</code>
     */
    public fun clearIncludeMetadata() {
      _builder.clearIncludeMetadata()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.llm.ContextOptions.copy(block: unhinged.llm.ContextOptionsKt.Dsl.() -> kotlin.Unit): unhinged.llm.ContextOptions =
  unhinged.llm.ContextOptionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

