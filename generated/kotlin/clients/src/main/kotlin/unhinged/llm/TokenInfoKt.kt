//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: llm.proto

package unhinged.llm;

@kotlin.jvm.JvmName("-initializetokenInfo")
public inline fun tokenInfo(block: unhinged.llm.TokenInfoKt.Dsl.() -> kotlin.Unit): unhinged.llm.TokenInfo =
  unhinged.llm.TokenInfoKt.Dsl._create(unhinged.llm.TokenInfo.newBuilder()).apply { block() }._build()
public object TokenInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.llm.TokenInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.llm.TokenInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.llm.TokenInfo = _builder.build()

    /**
     * <code>string token = 1;</code>
     */
    public var token: kotlin.String
      @JvmName("getToken")
      get() = _builder.getToken()
      @JvmName("setToken")
      set(value) {
        _builder.setToken(value)
      }
    /**
     * <code>string token = 1;</code>
     */
    public fun clearToken() {
      _builder.clearToken()
    }

    /**
     * <code>int32 token_id = 2;</code>
     */
    public var tokenId: kotlin.Int
      @JvmName("getTokenId")
      get() = _builder.getTokenId()
      @JvmName("setTokenId")
      set(value) {
        _builder.setTokenId(value)
      }
    /**
     * <code>int32 token_id = 2;</code>
     */
    public fun clearTokenId() {
      _builder.clearTokenId()
    }

    /**
     * <code>float probability = 3;</code>
     */
    public var probability: kotlin.Float
      @JvmName("getProbability")
      get() = _builder.getProbability()
      @JvmName("setProbability")
      set(value) {
        _builder.setProbability(value)
      }
    /**
     * <code>float probability = 3;</code>
     */
    public fun clearProbability() {
      _builder.clearProbability()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.llm.TokenInfo.copy(block: unhinged.llm.TokenInfoKt.Dsl.() -> kotlin.Unit): unhinged.llm.TokenInfo =
  unhinged.llm.TokenInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

