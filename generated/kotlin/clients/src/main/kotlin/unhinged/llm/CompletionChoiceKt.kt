//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: llm.proto

package unhinged.llm;

@kotlin.jvm.JvmName("-initializecompletionChoice")
public inline fun completionChoice(block: unhinged.llm.CompletionChoiceKt.Dsl.() -> kotlin.Unit): unhinged.llm.CompletionChoice =
  unhinged.llm.CompletionChoiceKt.Dsl._create(unhinged.llm.CompletionChoice.newBuilder()).apply { block() }._build()
public object CompletionChoiceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.llm.CompletionChoice.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.llm.CompletionChoice.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.llm.CompletionChoice = _builder.build()

    /**
     * <code>int32 index = 1;</code>
     */
    public var index: kotlin.Int
      @JvmName("getIndex")
      get() = _builder.getIndex()
      @JvmName("setIndex")
      set(value) {
        _builder.setIndex(value)
      }
    /**
     * <code>int32 index = 1;</code>
     */
    public fun clearIndex() {
      _builder.clearIndex()
    }

    /**
     * <pre>
     * ← DRY! (reuse chat message)
     * </pre>
     *
     * <code>.unhinged.chat.v1.ChatMessage message = 2;</code>
     */
    public var message: unhinged.chat.ChatMessage
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <pre>
     * ← DRY! (reuse chat message)
     * </pre>
     *
     * <code>.unhinged.chat.v1.ChatMessage message = 2;</code>
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
    /**
     * <pre>
     * ← DRY! (reuse chat message)
     * </pre>
     *
     * <code>.unhinged.chat.v1.ChatMessage message = 2;</code>
     * @return Whether the message field is set.
     */
    public fun hasMessage(): kotlin.Boolean {
      return _builder.hasMessage()
    }

    /**
     * <pre>
     * "stop", "length", "tool_calls", etc.
     * </pre>
     *
     * <code>string finish_reason = 3;</code>
     */
    public var finishReason: kotlin.String
      @JvmName("getFinishReason")
      get() = _builder.getFinishReason()
      @JvmName("setFinishReason")
      set(value) {
        _builder.setFinishReason(value)
      }
    /**
     * <pre>
     * "stop", "length", "tool_calls", etc.
     * </pre>
     *
     * <code>string finish_reason = 3;</code>
     */
    public fun clearFinishReason() {
      _builder.clearFinishReason()
    }

    /**
     * <pre>
     * Log probability (if requested)
     * </pre>
     *
     * <code>float logprobs = 4;</code>
     */
    public var logprobs: kotlin.Float
      @JvmName("getLogprobs")
      get() = _builder.getLogprobs()
      @JvmName("setLogprobs")
      set(value) {
        _builder.setLogprobs(value)
      }
    /**
     * <pre>
     * Log probability (if requested)
     * </pre>
     *
     * <code>float logprobs = 4;</code>
     */
    public fun clearLogprobs() {
      _builder.clearLogprobs()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.llm.CompletionChoice.copy(block: unhinged.llm.CompletionChoiceKt.Dsl.() -> kotlin.Unit): unhinged.llm.CompletionChoice =
  unhinged.llm.CompletionChoiceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.llm.CompletionChoiceOrBuilder.messageOrNull: unhinged.chat.ChatMessage?
  get() = if (hasMessage()) getMessage() else null

