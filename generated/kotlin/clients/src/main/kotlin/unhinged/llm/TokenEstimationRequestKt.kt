//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: llm.proto

package unhinged.llm;

@kotlin.jvm.JvmName("-initializetokenEstimationRequest")
public inline fun tokenEstimationRequest(block: unhinged.llm.TokenEstimationRequestKt.Dsl.() -> kotlin.Unit): unhinged.llm.TokenEstimationRequest =
  unhinged.llm.TokenEstimationRequestKt.Dsl._create(unhinged.llm.TokenEstimationRequest.newBuilder()).apply { block() }._build()
public object TokenEstimationRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.llm.TokenEstimationRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.llm.TokenEstimationRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.llm.TokenEstimationRequest = _builder.build()

    /**
     * <code>string model = 1;</code>
     */
    public var model: kotlin.String
      @JvmName("getModel")
      get() = _builder.getModel()
      @JvmName("setModel")
      set(value) {
        _builder.setModel(value)
      }
    /**
     * <code>string model = 1;</code>
     */
    public fun clearModel() {
      _builder.clearModel()
    }

    /**
     * <code>string text = 2;</code>
     */
    public var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * <code>string text = 2;</code>
     */
    public fun clearText() {
      _builder.clearText()
    }
    /**
     * <code>string text = 2;</code>
     * @return Whether the text field is set.
     */
    public fun hasText(): kotlin.Boolean {
      return _builder.hasText()
    }

    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.llm.v1.ChatMessageList messages = 3;</code>
     */
    public var messages: unhinged.llm.ChatMessageList
      @JvmName("getMessages")
      get() = _builder.getMessages()
      @JvmName("setMessages")
      set(value) {
        _builder.setMessages(value)
      }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.llm.v1.ChatMessageList messages = 3;</code>
     */
    public fun clearMessages() {
      _builder.clearMessages()
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.llm.v1.ChatMessageList messages = 3;</code>
     * @return Whether the messages field is set.
     */
    public fun hasMessages(): kotlin.Boolean {
      return _builder.hasMessages()
    }

    /**
     * <pre>
     * Estimate with DocumentStore context
     * </pre>
     *
     * <code>bool include_context = 4;</code>
     */
    public var includeContext: kotlin.Boolean
      @JvmName("getIncludeContext")
      get() = _builder.getIncludeContext()
      @JvmName("setIncludeContext")
      set(value) {
        _builder.setIncludeContext(value)
      }
    /**
     * <pre>
     * Estimate with DocumentStore context
     * </pre>
     *
     * <code>bool include_context = 4;</code>
     */
    public fun clearIncludeContext() {
      _builder.clearIncludeContext()
    }

    /**
     * <pre>
     * For context estimation
     * </pre>
     *
     * <code>string session_id = 5;</code>
     */
    public var sessionId: kotlin.String
      @JvmName("getSessionId")
      get() = _builder.getSessionId()
      @JvmName("setSessionId")
      set(value) {
        _builder.setSessionId(value)
      }
    /**
     * <pre>
     * For context estimation
     * </pre>
     *
     * <code>string session_id = 5;</code>
     */
    public fun clearSessionId() {
      _builder.clearSessionId()
    }
    public val inputCase: unhinged.llm.TokenEstimationRequest.InputCase
      @JvmName("getInputCase")
      get() = _builder.getInputCase()

    public fun clearInput() {
      _builder.clearInput()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.llm.TokenEstimationRequest.copy(block: unhinged.llm.TokenEstimationRequestKt.Dsl.() -> kotlin.Unit): unhinged.llm.TokenEstimationRequest =
  unhinged.llm.TokenEstimationRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.llm.TokenEstimationRequestOrBuilder.messagesOrNull: unhinged.llm.ChatMessageList?
  get() = if (hasMessages()) getMessages() else null

