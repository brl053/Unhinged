//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chat.proto

package unhinged.chat;

@kotlin.jvm.JvmName("-initializecreateConversationRequest")
public inline fun createConversationRequest(block: unhinged.chat.CreateConversationRequestKt.Dsl.() -> kotlin.Unit): unhinged.chat.CreateConversationRequest =
  unhinged.chat.CreateConversationRequestKt.Dsl._create(unhinged.chat.CreateConversationRequest.newBuilder()).apply { block() }._build()
public object CreateConversationRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.chat.CreateConversationRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.chat.CreateConversationRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.chat.CreateConversationRequest = _builder.build()

    /**
     * <code>string team_id = 1;</code>
     */
    public var teamId: kotlin.String
      @JvmName("getTeamId")
      get() = _builder.getTeamId()
      @JvmName("setTeamId")
      set(value) {
        _builder.setTeamId(value)
      }
    /**
     * <code>string team_id = 1;</code>
     */
    public fun clearTeamId() {
      _builder.clearTeamId()
    }

    /**
     * <code>string namespace_id = 2;</code>
     */
    public var namespaceId: kotlin.String
      @JvmName("getNamespaceId")
      get() = _builder.getNamespaceId()
      @JvmName("setNamespaceId")
      set(value) {
        _builder.setNamespaceId(value)
      }
    /**
     * <code>string namespace_id = 2;</code>
     */
    public fun clearNamespaceId() {
      _builder.clearNamespaceId()
    }

    /**
     * <code>string title = 3;</code>
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * <code>string title = 3;</code>
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * <code>string description = 4;</code>
     */
    public var description: kotlin.String
      @JvmName("getDescription")
      get() = _builder.getDescription()
      @JvmName("setDescription")
      set(value) {
        _builder.setDescription(value)
      }
    /**
     * <code>string description = 4;</code>
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }

    /**
     * <code>.unhinged.chat.v1.ConversationSettings settings = 5;</code>
     */
    public var settings: unhinged.chat.ConversationSettings
      @JvmName("getSettings")
      get() = _builder.getSettings()
      @JvmName("setSettings")
      set(value) {
        _builder.setSettings(value)
      }
    /**
     * <code>.unhinged.chat.v1.ConversationSettings settings = 5;</code>
     */
    public fun clearSettings() {
      _builder.clearSettings()
    }
    /**
     * <code>.unhinged.chat.v1.ConversationSettings settings = 5;</code>
     * @return Whether the settings field is set.
     */
    public fun hasSettings(): kotlin.Boolean {
      return _builder.hasSettings()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.chat.CreateConversationRequest.copy(block: unhinged.chat.CreateConversationRequestKt.Dsl.() -> kotlin.Unit): unhinged.chat.CreateConversationRequest =
  unhinged.chat.CreateConversationRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.chat.CreateConversationRequestOrBuilder.settingsOrNull: unhinged.chat.ConversationSettings?
  get() = if (hasSettings()) getSettings() else null

