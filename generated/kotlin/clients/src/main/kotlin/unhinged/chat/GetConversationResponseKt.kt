//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chat.proto

package unhinged.chat;

@kotlin.jvm.JvmName("-initializegetConversationResponse")
public inline fun getConversationResponse(block: unhinged.chat.GetConversationResponseKt.Dsl.() -> kotlin.Unit): unhinged.chat.GetConversationResponse =
  unhinged.chat.GetConversationResponseKt.Dsl._create(unhinged.chat.GetConversationResponse.newBuilder()).apply { block() }._build()
public object GetConversationResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.chat.GetConversationResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.chat.GetConversationResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.chat.GetConversationResponse = _builder.build()

    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     */
    public var response: unhinged.common.StandardResponse
      @JvmName("getResponse")
      get() = _builder.getResponse()
      @JvmName("setResponse")
      set(value) {
        _builder.setResponse(value)
      }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     */
    public fun clearResponse() {
      _builder.clearResponse()
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
     * @return Whether the response field is set.
     */
    public fun hasResponse(): kotlin.Boolean {
      return _builder.hasResponse()
    }

    /**
     * <code>.unhinged.chat.v1.Conversation conversation = 2;</code>
     */
    public var conversation: unhinged.chat.Conversation
      @JvmName("getConversation")
      get() = _builder.getConversation()
      @JvmName("setConversation")
      set(value) {
        _builder.setConversation(value)
      }
    /**
     * <code>.unhinged.chat.v1.Conversation conversation = 2;</code>
     */
    public fun clearConversation() {
      _builder.clearConversation()
    }
    /**
     * <code>.unhinged.chat.v1.Conversation conversation = 2;</code>
     * @return Whether the conversation field is set.
     */
    public fun hasConversation(): kotlin.Boolean {
      return _builder.hasConversation()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MessagesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .unhinged.chat.v1.ChatMessage messages = 3;</code>
     */
     public val messages: com.google.protobuf.kotlin.DslList<unhinged.chat.ChatMessage, MessagesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getMessagesList()
      )
    /**
     * <code>repeated .unhinged.chat.v1.ChatMessage messages = 3;</code>
     * @param value The messages to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addMessages")
    public fun com.google.protobuf.kotlin.DslList<unhinged.chat.ChatMessage, MessagesProxy>.add(value: unhinged.chat.ChatMessage) {
      _builder.addMessages(value)
    }
    /**
     * <code>repeated .unhinged.chat.v1.ChatMessage messages = 3;</code>
     * @param value The messages to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignMessages")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.chat.ChatMessage, MessagesProxy>.plusAssign(value: unhinged.chat.ChatMessage) {
      add(value)
    }
    /**
     * <code>repeated .unhinged.chat.v1.ChatMessage messages = 3;</code>
     * @param values The messages to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllMessages")
    public fun com.google.protobuf.kotlin.DslList<unhinged.chat.ChatMessage, MessagesProxy>.addAll(values: kotlin.collections.Iterable<unhinged.chat.ChatMessage>) {
      _builder.addAllMessages(values)
    }
    /**
     * <code>repeated .unhinged.chat.v1.ChatMessage messages = 3;</code>
     * @param values The messages to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllMessages")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.chat.ChatMessage, MessagesProxy>.plusAssign(values: kotlin.collections.Iterable<unhinged.chat.ChatMessage>) {
      addAll(values)
    }
    /**
     * <code>repeated .unhinged.chat.v1.ChatMessage messages = 3;</code>
     * @param index The index to set the value at.
     * @param value The messages to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setMessages")
    public operator fun com.google.protobuf.kotlin.DslList<unhinged.chat.ChatMessage, MessagesProxy>.set(index: kotlin.Int, value: unhinged.chat.ChatMessage) {
      _builder.setMessages(index, value)
    }
    /**
     * <code>repeated .unhinged.chat.v1.ChatMessage messages = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearMessages")
    public fun com.google.protobuf.kotlin.DslList<unhinged.chat.ChatMessage, MessagesProxy>.clear() {
      _builder.clearMessages()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.chat.GetConversationResponse.copy(block: unhinged.chat.GetConversationResponseKt.Dsl.() -> kotlin.Unit): unhinged.chat.GetConversationResponse =
  unhinged.chat.GetConversationResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.chat.GetConversationResponseOrBuilder.responseOrNull: unhinged.common.StandardResponse?
  get() = if (hasResponse()) getResponse() else null

public val unhinged.chat.GetConversationResponseOrBuilder.conversationOrNull: unhinged.chat.Conversation?
  get() = if (hasConversation()) getConversation() else null

