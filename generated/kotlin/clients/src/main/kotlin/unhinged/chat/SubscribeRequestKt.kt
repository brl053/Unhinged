//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chat.proto

package unhinged.chat;

@kotlin.jvm.JvmName("-initializesubscribeRequest")
public inline fun subscribeRequest(block: unhinged.chat.SubscribeRequestKt.Dsl.() -> kotlin.Unit): unhinged.chat.SubscribeRequest =
  unhinged.chat.SubscribeRequestKt.Dsl._create(unhinged.chat.SubscribeRequest.newBuilder()).apply { block() }._build()
public object SubscribeRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.chat.SubscribeRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.chat.SubscribeRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.chat.SubscribeRequest = _builder.build()

    /**
     * <code>string conversation_id = 1;</code>
     */
    public var conversationId: kotlin.String
      @JvmName("getConversationId")
      get() = _builder.getConversationId()
      @JvmName("setConversationId")
      set(value) {
        _builder.setConversationId(value)
      }
    /**
     * <code>string conversation_id = 1;</code>
     */
    public fun clearConversationId() {
      _builder.clearConversationId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class EventTypesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .unhinged.chat.v1.UpdateType event_types = 2;</code>
     */
    public val eventTypes: com.google.protobuf.kotlin.DslList<unhinged.chat.UpdateType, EventTypesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getEventTypesList()
      )
    /**
     * <code>repeated .unhinged.chat.v1.UpdateType event_types = 2;</code>
     * @param value The eventTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addEventTypes")
    public fun com.google.protobuf.kotlin.DslList<unhinged.chat.UpdateType, EventTypesProxy>.add(value: unhinged.chat.UpdateType) {
      _builder.addEventTypes(value)
    }/**
     * <code>repeated .unhinged.chat.v1.UpdateType event_types = 2;</code>
     * @param value The eventTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignEventTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.chat.UpdateType, EventTypesProxy>.plusAssign(value: unhinged.chat.UpdateType) {
      add(value)
    }/**
     * <code>repeated .unhinged.chat.v1.UpdateType event_types = 2;</code>
     * @param values The eventTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllEventTypes")
    public fun com.google.protobuf.kotlin.DslList<unhinged.chat.UpdateType, EventTypesProxy>.addAll(values: kotlin.collections.Iterable<unhinged.chat.UpdateType>) {
      _builder.addAllEventTypes(values)
    }/**
     * <code>repeated .unhinged.chat.v1.UpdateType event_types = 2;</code>
     * @param values The eventTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllEventTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.chat.UpdateType, EventTypesProxy>.plusAssign(values: kotlin.collections.Iterable<unhinged.chat.UpdateType>) {
      addAll(values)
    }/**
     * <code>repeated .unhinged.chat.v1.UpdateType event_types = 2;</code>
     * @param index The index to set the value at.
     * @param value The eventTypes to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setEventTypes")
    public operator fun com.google.protobuf.kotlin.DslList<unhinged.chat.UpdateType, EventTypesProxy>.set(index: kotlin.Int, value: unhinged.chat.UpdateType) {
      _builder.setEventTypes(index, value)
    }/**
     * <code>repeated .unhinged.chat.v1.UpdateType event_types = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearEventTypes")
    public fun com.google.protobuf.kotlin.DslList<unhinged.chat.UpdateType, EventTypesProxy>.clear() {
      _builder.clearEventTypes()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.chat.SubscribeRequest.copy(block: unhinged.chat.SubscribeRequestKt.Dsl.() -> kotlin.Unit): unhinged.chat.SubscribeRequest =
  unhinged.chat.SubscribeRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

