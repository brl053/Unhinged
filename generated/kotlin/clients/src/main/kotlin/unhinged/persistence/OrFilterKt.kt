//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: persistence_platform.proto

package unhinged.persistence;

@kotlin.jvm.JvmName("-initializeorFilter")
public inline fun orFilter(block: unhinged.persistence.OrFilterKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.OrFilter =
  unhinged.persistence.OrFilterKt.Dsl._create(unhinged.persistence.PersistencePlatform.OrFilter.newBuilder()).apply { block() }._build()
public object OrFilterKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.persistence.PersistencePlatform.OrFilter.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.persistence.PersistencePlatform.OrFilter.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.persistence.PersistencePlatform.OrFilter = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FiltersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .unhinged.persistence.QueryCriteria filters = 1;</code>
     */
     public val filters: com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.QueryCriteria, FiltersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFiltersList()
      )
    /**
     * <code>repeated .unhinged.persistence.QueryCriteria filters = 1;</code>
     * @param value The filters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFilters")
    public fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.QueryCriteria, FiltersProxy>.add(value: unhinged.persistence.PersistencePlatform.QueryCriteria) {
      _builder.addFilters(value)
    }
    /**
     * <code>repeated .unhinged.persistence.QueryCriteria filters = 1;</code>
     * @param value The filters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFilters")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.QueryCriteria, FiltersProxy>.plusAssign(value: unhinged.persistence.PersistencePlatform.QueryCriteria) {
      add(value)
    }
    /**
     * <code>repeated .unhinged.persistence.QueryCriteria filters = 1;</code>
     * @param values The filters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFilters")
    public fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.QueryCriteria, FiltersProxy>.addAll(values: kotlin.collections.Iterable<unhinged.persistence.PersistencePlatform.QueryCriteria>) {
      _builder.addAllFilters(values)
    }
    /**
     * <code>repeated .unhinged.persistence.QueryCriteria filters = 1;</code>
     * @param values The filters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFilters")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.QueryCriteria, FiltersProxy>.plusAssign(values: kotlin.collections.Iterable<unhinged.persistence.PersistencePlatform.QueryCriteria>) {
      addAll(values)
    }
    /**
     * <code>repeated .unhinged.persistence.QueryCriteria filters = 1;</code>
     * @param index The index to set the value at.
     * @param value The filters to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFilters")
    public operator fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.QueryCriteria, FiltersProxy>.set(index: kotlin.Int, value: unhinged.persistence.PersistencePlatform.QueryCriteria) {
      _builder.setFilters(index, value)
    }
    /**
     * <code>repeated .unhinged.persistence.QueryCriteria filters = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFilters")
    public fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.QueryCriteria, FiltersProxy>.clear() {
      _builder.clearFilters()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.persistence.PersistencePlatform.OrFilter.copy(block: unhinged.persistence.OrFilterKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.OrFilter =
  unhinged.persistence.OrFilterKt.Dsl._create(this.toBuilder()).apply { block() }._build()

