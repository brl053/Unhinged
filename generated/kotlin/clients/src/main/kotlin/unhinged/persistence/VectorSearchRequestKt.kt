//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: persistence_platform.proto

package unhinged.persistence;

@kotlin.jvm.JvmName("-initializevectorSearchRequest")
public inline fun vectorSearchRequest(block: unhinged.persistence.VectorSearchRequestKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.VectorSearchRequest =
  unhinged.persistence.VectorSearchRequestKt.Dsl._create(unhinged.persistence.PersistencePlatform.VectorSearchRequest.newBuilder()).apply { block() }._build()
public object VectorSearchRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.persistence.PersistencePlatform.VectorSearchRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.persistence.PersistencePlatform.VectorSearchRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.persistence.PersistencePlatform.VectorSearchRequest = _builder.build()

    /**
     * <code>string table_name = 1;</code>
     */
    public var tableName: kotlin.String
      @JvmName("getTableName")
      get() = _builder.getTableName()
      @JvmName("setTableName")
      set(value) {
        _builder.setTableName(value)
      }
    /**
     * <code>string table_name = 1;</code>
     */
    public fun clearTableName() {
      _builder.clearTableName()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class QueryVectorProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated float query_vector = 2;</code>
     */
     public val queryVector: com.google.protobuf.kotlin.DslList<kotlin.Float, QueryVectorProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getQueryVectorList()
      )
    /**
     * <code>repeated float query_vector = 2;</code>
     * @param value The queryVector to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addQueryVector")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, QueryVectorProxy>.add(value: kotlin.Float) {
      _builder.addQueryVector(value)
    }/**
     * <code>repeated float query_vector = 2;</code>
     * @param value The queryVector to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignQueryVector")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, QueryVectorProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * <code>repeated float query_vector = 2;</code>
     * @param values The queryVector to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllQueryVector")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, QueryVectorProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllQueryVector(values)
    }/**
     * <code>repeated float query_vector = 2;</code>
     * @param values The queryVector to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllQueryVector")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, QueryVectorProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * <code>repeated float query_vector = 2;</code>
     * @param index The index to set the value at.
     * @param value The queryVector to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setQueryVector")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, QueryVectorProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setQueryVector(index, value)
    }/**
     * <code>repeated float query_vector = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearQueryVector")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, QueryVectorProxy>.clear() {
      _builder.clearQueryVector()
    }
    /**
     * <code>int32 limit = 3;</code>
     */
    public var limit: kotlin.Int
      @JvmName("getLimit")
      get() = _builder.getLimit()
      @JvmName("setLimit")
      set(value) {
        _builder.setLimit(value)
      }
    /**
     * <code>int32 limit = 3;</code>
     */
    public fun clearLimit() {
      _builder.clearLimit()
    }

    /**
     * <code>double threshold = 4;</code>
     */
    public var threshold: kotlin.Double
      @JvmName("getThreshold")
      get() = _builder.getThreshold()
      @JvmName("setThreshold")
      set(value) {
        _builder.setThreshold(value)
      }
    /**
     * <code>double threshold = 4;</code>
     */
    public fun clearThreshold() {
      _builder.clearThreshold()
    }

    /**
     * <code>string distance_metric = 5;</code>
     */
    public var distanceMetric: kotlin.String
      @JvmName("getDistanceMetric")
      get() = _builder.getDistanceMetric()
      @JvmName("setDistanceMetric")
      set(value) {
        _builder.setDistanceMetric(value)
      }
    /**
     * <code>string distance_metric = 5;</code>
     */
    public fun clearDistanceMetric() {
      _builder.clearDistanceMetric()
    }

    /**
     * <code>.unhinged.persistence.ExecutionContext context = 6;</code>
     */
    public var context: unhinged.persistence.PersistencePlatform.ExecutionContext
      @JvmName("getContext")
      get() = _builder.getContext()
      @JvmName("setContext")
      set(value) {
        _builder.setContext(value)
      }
    /**
     * <code>.unhinged.persistence.ExecutionContext context = 6;</code>
     */
    public fun clearContext() {
      _builder.clearContext()
    }
    /**
     * <code>.unhinged.persistence.ExecutionContext context = 6;</code>
     * @return Whether the context field is set.
     */
    public fun hasContext(): kotlin.Boolean {
      return _builder.hasContext()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.persistence.PersistencePlatform.VectorSearchRequest.copy(block: unhinged.persistence.VectorSearchRequestKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.VectorSearchRequest =
  unhinged.persistence.VectorSearchRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.persistence.PersistencePlatform.VectorSearchRequestOrBuilder.contextOrNull: unhinged.persistence.PersistencePlatform.ExecutionContext?
  get() = if (hasContext()) getContext() else null

