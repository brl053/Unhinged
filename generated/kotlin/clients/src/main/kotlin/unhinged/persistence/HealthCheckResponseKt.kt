//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: persistence_platform.proto

package unhinged.persistence;

@kotlin.jvm.JvmName("-initializehealthCheckResponse")
public inline fun healthCheckResponse(block: unhinged.persistence.HealthCheckResponseKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.HealthCheckResponse =
  unhinged.persistence.HealthCheckResponseKt.Dsl._create(unhinged.persistence.PersistencePlatform.HealthCheckResponse.newBuilder()).apply { block() }._build()
public object HealthCheckResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.persistence.PersistencePlatform.HealthCheckResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.persistence.PersistencePlatform.HealthCheckResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.persistence.PersistencePlatform.HealthCheckResponse = _builder.build()

    /**
     * <code>bool healthy = 1;</code>
     */
    public var healthy: kotlin.Boolean
      @JvmName("getHealthy")
      get() = _builder.getHealthy()
      @JvmName("setHealthy")
      set(value) {
        _builder.setHealthy(value)
      }
    /**
     * <code>bool healthy = 1;</code>
     */
    public fun clearHealthy() {
      _builder.clearHealthy()
    }

    /**
     * <code>string version = 2;</code>
     */
    public var version: kotlin.String
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * <code>string version = 2;</code>
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * <code>int64 uptime_seconds = 3;</code>
     */
    public var uptimeSeconds: kotlin.Long
      @JvmName("getUptimeSeconds")
      get() = _builder.getUptimeSeconds()
      @JvmName("setUptimeSeconds")
      set(value) {
        _builder.setUptimeSeconds(value)
      }
    /**
     * <code>int64 uptime_seconds = 3;</code>
     */
    public fun clearUptimeSeconds() {
      _builder.clearUptimeSeconds()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TechnologyHealthProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .unhinged.persistence.TechnologyHealth technology_health = 4;</code>
     */
     public val technologyHealth: com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.TechnologyHealth, TechnologyHealthProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTechnologyHealthList()
      )
    /**
     * <code>repeated .unhinged.persistence.TechnologyHealth technology_health = 4;</code>
     * @param value The technologyHealth to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTechnologyHealth")
    public fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.TechnologyHealth, TechnologyHealthProxy>.add(value: unhinged.persistence.PersistencePlatform.TechnologyHealth) {
      _builder.addTechnologyHealth(value)
    }
    /**
     * <code>repeated .unhinged.persistence.TechnologyHealth technology_health = 4;</code>
     * @param value The technologyHealth to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTechnologyHealth")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.TechnologyHealth, TechnologyHealthProxy>.plusAssign(value: unhinged.persistence.PersistencePlatform.TechnologyHealth) {
      add(value)
    }
    /**
     * <code>repeated .unhinged.persistence.TechnologyHealth technology_health = 4;</code>
     * @param values The technologyHealth to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTechnologyHealth")
    public fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.TechnologyHealth, TechnologyHealthProxy>.addAll(values: kotlin.collections.Iterable<unhinged.persistence.PersistencePlatform.TechnologyHealth>) {
      _builder.addAllTechnologyHealth(values)
    }
    /**
     * <code>repeated .unhinged.persistence.TechnologyHealth technology_health = 4;</code>
     * @param values The technologyHealth to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTechnologyHealth")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.TechnologyHealth, TechnologyHealthProxy>.plusAssign(values: kotlin.collections.Iterable<unhinged.persistence.PersistencePlatform.TechnologyHealth>) {
      addAll(values)
    }
    /**
     * <code>repeated .unhinged.persistence.TechnologyHealth technology_health = 4;</code>
     * @param index The index to set the value at.
     * @param value The technologyHealth to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTechnologyHealth")
    public operator fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.TechnologyHealth, TechnologyHealthProxy>.set(index: kotlin.Int, value: unhinged.persistence.PersistencePlatform.TechnologyHealth) {
      _builder.setTechnologyHealth(index, value)
    }
    /**
     * <code>repeated .unhinged.persistence.TechnologyHealth technology_health = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTechnologyHealth")
    public fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.TechnologyHealth, TechnologyHealthProxy>.clear() {
      _builder.clearTechnologyHealth()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.persistence.PersistencePlatform.HealthCheckResponse.copy(block: unhinged.persistence.HealthCheckResponseKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.HealthCheckResponse =
  unhinged.persistence.HealthCheckResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

