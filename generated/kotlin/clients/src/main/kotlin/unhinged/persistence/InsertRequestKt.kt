//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: persistence_platform.proto

package unhinged.persistence;

@kotlin.jvm.JvmName("-initializeinsertRequest")
public inline fun insertRequest(block: unhinged.persistence.InsertRequestKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.InsertRequest =
  unhinged.persistence.InsertRequestKt.Dsl._create(unhinged.persistence.PersistencePlatform.InsertRequest.newBuilder()).apply { block() }._build()
public object InsertRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.persistence.PersistencePlatform.InsertRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.persistence.PersistencePlatform.InsertRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.persistence.PersistencePlatform.InsertRequest = _builder.build()

    /**
     * <code>string table_name = 1;</code>
     */
    public var tableName: kotlin.String
      @JvmName("getTableName")
      get() = _builder.getTableName()
      @JvmName("setTableName")
      set(value) {
        _builder.setTableName(value)
      }
    /**
     * <code>string table_name = 1;</code>
     */
    public fun clearTableName() {
      _builder.clearTableName()
    }

    /**
     * <code>.unhinged.persistence.Record record = 2;</code>
     */
    public var record: unhinged.persistence.PersistencePlatform.Record
      @JvmName("getRecord")
      get() = _builder.getRecord()
      @JvmName("setRecord")
      set(value) {
        _builder.setRecord(value)
      }
    /**
     * <code>.unhinged.persistence.Record record = 2;</code>
     */
    public fun clearRecord() {
      _builder.clearRecord()
    }
    /**
     * <code>.unhinged.persistence.Record record = 2;</code>
     * @return Whether the record field is set.
     */
    public fun hasRecord(): kotlin.Boolean {
      return _builder.hasRecord()
    }

    /**
     * <code>.unhinged.persistence.ExecutionContext context = 3;</code>
     */
    public var context: unhinged.persistence.PersistencePlatform.ExecutionContext
      @JvmName("getContext")
      get() = _builder.getContext()
      @JvmName("setContext")
      set(value) {
        _builder.setContext(value)
      }
    /**
     * <code>.unhinged.persistence.ExecutionContext context = 3;</code>
     */
    public fun clearContext() {
      _builder.clearContext()
    }
    /**
     * <code>.unhinged.persistence.ExecutionContext context = 3;</code>
     * @return Whether the context field is set.
     */
    public fun hasContext(): kotlin.Boolean {
      return _builder.hasContext()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.persistence.PersistencePlatform.InsertRequest.copy(block: unhinged.persistence.InsertRequestKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.InsertRequest =
  unhinged.persistence.InsertRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.persistence.PersistencePlatform.InsertRequestOrBuilder.recordOrNull: unhinged.persistence.PersistencePlatform.Record?
  get() = if (hasRecord()) getRecord() else null

public val unhinged.persistence.PersistencePlatform.InsertRequestOrBuilder.contextOrNull: unhinged.persistence.PersistencePlatform.ExecutionContext?
  get() = if (hasContext()) getContext() else null

