//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: persistence_platform.proto

package unhinged.persistence;

@kotlin.jvm.JvmName("-initializeinsertBatchRequest")
public inline fun insertBatchRequest(block: unhinged.persistence.InsertBatchRequestKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.InsertBatchRequest =
  unhinged.persistence.InsertBatchRequestKt.Dsl._create(unhinged.persistence.PersistencePlatform.InsertBatchRequest.newBuilder()).apply { block() }._build()
public object InsertBatchRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.persistence.PersistencePlatform.InsertBatchRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.persistence.PersistencePlatform.InsertBatchRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.persistence.PersistencePlatform.InsertBatchRequest = _builder.build()

    /**
     * <code>string table_name = 1;</code>
     */
    public var tableName: kotlin.String
      @JvmName("getTableName")
      get() = _builder.getTableName()
      @JvmName("setTableName")
      set(value) {
        _builder.setTableName(value)
      }
    /**
     * <code>string table_name = 1;</code>
     */
    public fun clearTableName() {
      _builder.clearTableName()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RecordsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .unhinged.persistence.Record records = 2;</code>
     */
     public val records: com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.Record, RecordsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRecordsList()
      )
    /**
     * <code>repeated .unhinged.persistence.Record records = 2;</code>
     * @param value The records to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRecords")
    public fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.Record, RecordsProxy>.add(value: unhinged.persistence.PersistencePlatform.Record) {
      _builder.addRecords(value)
    }
    /**
     * <code>repeated .unhinged.persistence.Record records = 2;</code>
     * @param value The records to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRecords")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.Record, RecordsProxy>.plusAssign(value: unhinged.persistence.PersistencePlatform.Record) {
      add(value)
    }
    /**
     * <code>repeated .unhinged.persistence.Record records = 2;</code>
     * @param values The records to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRecords")
    public fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.Record, RecordsProxy>.addAll(values: kotlin.collections.Iterable<unhinged.persistence.PersistencePlatform.Record>) {
      _builder.addAllRecords(values)
    }
    /**
     * <code>repeated .unhinged.persistence.Record records = 2;</code>
     * @param values The records to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRecords")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.Record, RecordsProxy>.plusAssign(values: kotlin.collections.Iterable<unhinged.persistence.PersistencePlatform.Record>) {
      addAll(values)
    }
    /**
     * <code>repeated .unhinged.persistence.Record records = 2;</code>
     * @param index The index to set the value at.
     * @param value The records to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRecords")
    public operator fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.Record, RecordsProxy>.set(index: kotlin.Int, value: unhinged.persistence.PersistencePlatform.Record) {
      _builder.setRecords(index, value)
    }
    /**
     * <code>repeated .unhinged.persistence.Record records = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRecords")
    public fun com.google.protobuf.kotlin.DslList<unhinged.persistence.PersistencePlatform.Record, RecordsProxy>.clear() {
      _builder.clearRecords()
    }


    /**
     * <code>.unhinged.persistence.ExecutionContext context = 3;</code>
     */
    public var context: unhinged.persistence.PersistencePlatform.ExecutionContext
      @JvmName("getContext")
      get() = _builder.getContext()
      @JvmName("setContext")
      set(value) {
        _builder.setContext(value)
      }
    /**
     * <code>.unhinged.persistence.ExecutionContext context = 3;</code>
     */
    public fun clearContext() {
      _builder.clearContext()
    }
    /**
     * <code>.unhinged.persistence.ExecutionContext context = 3;</code>
     * @return Whether the context field is set.
     */
    public fun hasContext(): kotlin.Boolean {
      return _builder.hasContext()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.persistence.PersistencePlatform.InsertBatchRequest.copy(block: unhinged.persistence.InsertBatchRequestKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.InsertBatchRequest =
  unhinged.persistence.InsertBatchRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.persistence.PersistencePlatform.InsertBatchRequestOrBuilder.contextOrNull: unhinged.persistence.PersistencePlatform.ExecutionContext?
  get() = if (hasContext()) getContext() else null

