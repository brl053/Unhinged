//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: persistence_platform.proto

package unhinged.persistence;

@kotlin.jvm.JvmName("-initializequeryCriteria")
public inline fun queryCriteria(block: unhinged.persistence.QueryCriteriaKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.QueryCriteria =
  unhinged.persistence.QueryCriteriaKt.Dsl._create(unhinged.persistence.PersistencePlatform.QueryCriteria.newBuilder()).apply { block() }._build()
public object QueryCriteriaKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.persistence.PersistencePlatform.QueryCriteria.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.persistence.PersistencePlatform.QueryCriteria.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.persistence.PersistencePlatform.QueryCriteria = _builder.build()

    /**
     * <code>.unhinged.persistence.EqualsFilter equals = 1;</code>
     */
    public var equals: unhinged.persistence.PersistencePlatform.EqualsFilter
      @JvmName("getEquals")
      get() = _builder.getEquals()
      @JvmName("setEquals")
      set(value) {
        _builder.setEquals(value)
      }
    /**
     * <code>.unhinged.persistence.EqualsFilter equals = 1;</code>
     */
    public fun clearEquals() {
      _builder.clearEquals()
    }
    /**
     * <code>.unhinged.persistence.EqualsFilter equals = 1;</code>
     * @return Whether the equals field is set.
     */
    public fun hasEquals(): kotlin.Boolean {
      return _builder.hasEquals()
    }

    /**
     * <code>.unhinged.persistence.GreaterThanFilter greater_than = 2;</code>
     */
    public var greaterThan: unhinged.persistence.PersistencePlatform.GreaterThanFilter
      @JvmName("getGreaterThan")
      get() = _builder.getGreaterThan()
      @JvmName("setGreaterThan")
      set(value) {
        _builder.setGreaterThan(value)
      }
    /**
     * <code>.unhinged.persistence.GreaterThanFilter greater_than = 2;</code>
     */
    public fun clearGreaterThan() {
      _builder.clearGreaterThan()
    }
    /**
     * <code>.unhinged.persistence.GreaterThanFilter greater_than = 2;</code>
     * @return Whether the greaterThan field is set.
     */
    public fun hasGreaterThan(): kotlin.Boolean {
      return _builder.hasGreaterThan()
    }

    /**
     * <code>.unhinged.persistence.LessThanFilter less_than = 3;</code>
     */
    public var lessThan: unhinged.persistence.PersistencePlatform.LessThanFilter
      @JvmName("getLessThan")
      get() = _builder.getLessThan()
      @JvmName("setLessThan")
      set(value) {
        _builder.setLessThan(value)
      }
    /**
     * <code>.unhinged.persistence.LessThanFilter less_than = 3;</code>
     */
    public fun clearLessThan() {
      _builder.clearLessThan()
    }
    /**
     * <code>.unhinged.persistence.LessThanFilter less_than = 3;</code>
     * @return Whether the lessThan field is set.
     */
    public fun hasLessThan(): kotlin.Boolean {
      return _builder.hasLessThan()
    }

    /**
     * <code>.unhinged.persistence.InFilter in_filter = 4;</code>
     */
    public var inFilter: unhinged.persistence.PersistencePlatform.InFilter
      @JvmName("getInFilter")
      get() = _builder.getInFilter()
      @JvmName("setInFilter")
      set(value) {
        _builder.setInFilter(value)
      }
    /**
     * <code>.unhinged.persistence.InFilter in_filter = 4;</code>
     */
    public fun clearInFilter() {
      _builder.clearInFilter()
    }
    /**
     * <code>.unhinged.persistence.InFilter in_filter = 4;</code>
     * @return Whether the inFilter field is set.
     */
    public fun hasInFilter(): kotlin.Boolean {
      return _builder.hasInFilter()
    }

    /**
     * <code>.unhinged.persistence.RangeFilter range = 5;</code>
     */
    public var range: unhinged.persistence.PersistencePlatform.RangeFilter
      @JvmName("getRange")
      get() = _builder.getRange()
      @JvmName("setRange")
      set(value) {
        _builder.setRange(value)
      }
    /**
     * <code>.unhinged.persistence.RangeFilter range = 5;</code>
     */
    public fun clearRange() {
      _builder.clearRange()
    }
    /**
     * <code>.unhinged.persistence.RangeFilter range = 5;</code>
     * @return Whether the range field is set.
     */
    public fun hasRange(): kotlin.Boolean {
      return _builder.hasRange()
    }

    /**
     * <code>.unhinged.persistence.TextSearchFilter text_search = 6;</code>
     */
    public var textSearch: unhinged.persistence.PersistencePlatform.TextSearchFilter
      @JvmName("getTextSearch")
      get() = _builder.getTextSearch()
      @JvmName("setTextSearch")
      set(value) {
        _builder.setTextSearch(value)
      }
    /**
     * <code>.unhinged.persistence.TextSearchFilter text_search = 6;</code>
     */
    public fun clearTextSearch() {
      _builder.clearTextSearch()
    }
    /**
     * <code>.unhinged.persistence.TextSearchFilter text_search = 6;</code>
     * @return Whether the textSearch field is set.
     */
    public fun hasTextSearch(): kotlin.Boolean {
      return _builder.hasTextSearch()
    }

    /**
     * <code>.unhinged.persistence.VectorSearchFilter vector_search = 7;</code>
     */
    public var vectorSearch: unhinged.persistence.PersistencePlatform.VectorSearchFilter
      @JvmName("getVectorSearch")
      get() = _builder.getVectorSearch()
      @JvmName("setVectorSearch")
      set(value) {
        _builder.setVectorSearch(value)
      }
    /**
     * <code>.unhinged.persistence.VectorSearchFilter vector_search = 7;</code>
     */
    public fun clearVectorSearch() {
      _builder.clearVectorSearch()
    }
    /**
     * <code>.unhinged.persistence.VectorSearchFilter vector_search = 7;</code>
     * @return Whether the vectorSearch field is set.
     */
    public fun hasVectorSearch(): kotlin.Boolean {
      return _builder.hasVectorSearch()
    }

    /**
     * <code>.unhinged.persistence.AndFilter and_filter = 8;</code>
     */
    public var andFilter: unhinged.persistence.PersistencePlatform.AndFilter
      @JvmName("getAndFilter")
      get() = _builder.getAndFilter()
      @JvmName("setAndFilter")
      set(value) {
        _builder.setAndFilter(value)
      }
    /**
     * <code>.unhinged.persistence.AndFilter and_filter = 8;</code>
     */
    public fun clearAndFilter() {
      _builder.clearAndFilter()
    }
    /**
     * <code>.unhinged.persistence.AndFilter and_filter = 8;</code>
     * @return Whether the andFilter field is set.
     */
    public fun hasAndFilter(): kotlin.Boolean {
      return _builder.hasAndFilter()
    }

    /**
     * <code>.unhinged.persistence.OrFilter or_filter = 9;</code>
     */
    public var orFilter: unhinged.persistence.PersistencePlatform.OrFilter
      @JvmName("getOrFilter")
      get() = _builder.getOrFilter()
      @JvmName("setOrFilter")
      set(value) {
        _builder.setOrFilter(value)
      }
    /**
     * <code>.unhinged.persistence.OrFilter or_filter = 9;</code>
     */
    public fun clearOrFilter() {
      _builder.clearOrFilter()
    }
    /**
     * <code>.unhinged.persistence.OrFilter or_filter = 9;</code>
     * @return Whether the orFilter field is set.
     */
    public fun hasOrFilter(): kotlin.Boolean {
      return _builder.hasOrFilter()
    }
    public val criteriaCase: unhinged.persistence.PersistencePlatform.QueryCriteria.CriteriaCase
      @JvmName("getCriteriaCase")
      get() = _builder.getCriteriaCase()

    public fun clearCriteria() {
      _builder.clearCriteria()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.persistence.PersistencePlatform.QueryCriteria.copy(block: unhinged.persistence.QueryCriteriaKt.Dsl.() -> kotlin.Unit): unhinged.persistence.PersistencePlatform.QueryCriteria =
  unhinged.persistence.QueryCriteriaKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val unhinged.persistence.PersistencePlatform.QueryCriteriaOrBuilder.equalsOrNull: unhinged.persistence.PersistencePlatform.EqualsFilter?
  get() = if (hasEquals()) getEquals() else null

public val unhinged.persistence.PersistencePlatform.QueryCriteriaOrBuilder.greaterThanOrNull: unhinged.persistence.PersistencePlatform.GreaterThanFilter?
  get() = if (hasGreaterThan()) getGreaterThan() else null

public val unhinged.persistence.PersistencePlatform.QueryCriteriaOrBuilder.lessThanOrNull: unhinged.persistence.PersistencePlatform.LessThanFilter?
  get() = if (hasLessThan()) getLessThan() else null

public val unhinged.persistence.PersistencePlatform.QueryCriteriaOrBuilder.inFilterOrNull: unhinged.persistence.PersistencePlatform.InFilter?
  get() = if (hasInFilter()) getInFilter() else null

public val unhinged.persistence.PersistencePlatform.QueryCriteriaOrBuilder.rangeOrNull: unhinged.persistence.PersistencePlatform.RangeFilter?
  get() = if (hasRange()) getRange() else null

public val unhinged.persistence.PersistencePlatform.QueryCriteriaOrBuilder.textSearchOrNull: unhinged.persistence.PersistencePlatform.TextSearchFilter?
  get() = if (hasTextSearch()) getTextSearch() else null

public val unhinged.persistence.PersistencePlatform.QueryCriteriaOrBuilder.vectorSearchOrNull: unhinged.persistence.PersistencePlatform.VectorSearchFilter?
  get() = if (hasVectorSearch()) getVectorSearch() else null

public val unhinged.persistence.PersistencePlatform.QueryCriteriaOrBuilder.andFilterOrNull: unhinged.persistence.PersistencePlatform.AndFilter?
  get() = if (hasAndFilter()) getAndFilter() else null

public val unhinged.persistence.PersistencePlatform.QueryCriteriaOrBuilder.orFilterOrNull: unhinged.persistence.PersistencePlatform.OrFilter?
  get() = if (hasOrFilter()) getOrFilter() else null

