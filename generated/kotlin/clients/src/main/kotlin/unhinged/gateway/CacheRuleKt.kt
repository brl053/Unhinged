//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: gateway_annotations.proto

package unhinged.gateway;

@kotlin.jvm.JvmName("-initializecacheRule")
public inline fun cacheRule(block: unhinged.gateway.CacheRuleKt.Dsl.() -> kotlin.Unit): unhinged.gateway.CacheRule =
  unhinged.gateway.CacheRuleKt.Dsl._create(unhinged.gateway.CacheRule.newBuilder()).apply { block() }._build()
public object CacheRuleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: unhinged.gateway.CacheRule.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: unhinged.gateway.CacheRule.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): unhinged.gateway.CacheRule = _builder.build()

    /**
     * <code>int32 ttl_seconds = 1;</code>
     */
    public var ttlSeconds: kotlin.Int
      @JvmName("getTtlSeconds")
      get() = _builder.getTtlSeconds()
      @JvmName("setTtlSeconds")
      set(value) {
        _builder.setTtlSeconds(value)
      }
    /**
     * <code>int32 ttl_seconds = 1;</code>
     */
    public fun clearTtlSeconds() {
      _builder.clearTtlSeconds()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class CacheKeysProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Fields to use as cache keys
     * </pre>
     *
     * <code>repeated string cache_keys = 2;</code>
     * @return A list containing the cacheKeys.
     */
    public val cacheKeys: com.google.protobuf.kotlin.DslList<kotlin.String, CacheKeysProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getCacheKeysList()
      )
    /**
     * <pre>
     * Fields to use as cache keys
     * </pre>
     *
     * <code>repeated string cache_keys = 2;</code>
     * @param value The cacheKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addCacheKeys")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, CacheKeysProxy>.add(value: kotlin.String) {
      _builder.addCacheKeys(value)
    }
    /**
     * <pre>
     * Fields to use as cache keys
     * </pre>
     *
     * <code>repeated string cache_keys = 2;</code>
     * @param value The cacheKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignCacheKeys")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, CacheKeysProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * Fields to use as cache keys
     * </pre>
     *
     * <code>repeated string cache_keys = 2;</code>
     * @param values The cacheKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllCacheKeys")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, CacheKeysProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllCacheKeys(values)
    }
    /**
     * <pre>
     * Fields to use as cache keys
     * </pre>
     *
     * <code>repeated string cache_keys = 2;</code>
     * @param values The cacheKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllCacheKeys")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, CacheKeysProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * Fields to use as cache keys
     * </pre>
     *
     * <code>repeated string cache_keys = 2;</code>
     * @param index The index to set the value at.
     * @param value The cacheKeys to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setCacheKeys")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, CacheKeysProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setCacheKeys(index, value)
    }/**
     * <pre>
     * Fields to use as cache keys
     * </pre>
     *
     * <code>repeated string cache_keys = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearCacheKeys")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, CacheKeysProxy>.clear() {
      _builder.clearCacheKeys()
    }
    /**
     * <pre>
     * User-specific caching
     * </pre>
     *
     * <code>bool private_cache = 3;</code>
     */
    public var privateCache: kotlin.Boolean
      @JvmName("getPrivateCache")
      get() = _builder.getPrivateCache()
      @JvmName("setPrivateCache")
      set(value) {
        _builder.setPrivateCache(value)
      }
    /**
     * <pre>
     * User-specific caching
     * </pre>
     *
     * <code>bool private_cache = 3;</code>
     */
    public fun clearPrivateCache() {
      _builder.clearPrivateCache()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class VaryHeadersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Headers that affect cache
     * </pre>
     *
     * <code>repeated string vary_headers = 4;</code>
     * @return A list containing the varyHeaders.
     */
    public val varyHeaders: com.google.protobuf.kotlin.DslList<kotlin.String, VaryHeadersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getVaryHeadersList()
      )
    /**
     * <pre>
     * Headers that affect cache
     * </pre>
     *
     * <code>repeated string vary_headers = 4;</code>
     * @param value The varyHeaders to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addVaryHeaders")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, VaryHeadersProxy>.add(value: kotlin.String) {
      _builder.addVaryHeaders(value)
    }
    /**
     * <pre>
     * Headers that affect cache
     * </pre>
     *
     * <code>repeated string vary_headers = 4;</code>
     * @param value The varyHeaders to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignVaryHeaders")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, VaryHeadersProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * Headers that affect cache
     * </pre>
     *
     * <code>repeated string vary_headers = 4;</code>
     * @param values The varyHeaders to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllVaryHeaders")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, VaryHeadersProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllVaryHeaders(values)
    }
    /**
     * <pre>
     * Headers that affect cache
     * </pre>
     *
     * <code>repeated string vary_headers = 4;</code>
     * @param values The varyHeaders to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllVaryHeaders")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, VaryHeadersProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * Headers that affect cache
     * </pre>
     *
     * <code>repeated string vary_headers = 4;</code>
     * @param index The index to set the value at.
     * @param value The varyHeaders to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setVaryHeaders")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, VaryHeadersProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setVaryHeaders(index, value)
    }/**
     * <pre>
     * Headers that affect cache
     * </pre>
     *
     * <code>repeated string vary_headers = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearVaryHeaders")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, VaryHeadersProxy>.clear() {
      _builder.clearVaryHeaders()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun unhinged.gateway.CacheRule.copy(block: unhinged.gateway.CacheRuleKt.Dsl.() -> kotlin.Unit): unhinged.gateway.CacheRule =
  unhinged.gateway.CacheRuleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

