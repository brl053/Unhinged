// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: context_service.proto

package com.unhinged.multimodal.grpc;

public interface ContextSearchRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:multimodal.ContextSearchRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Search query
   * </pre>
   *
   * <code>string query = 1;</code>
   * @return The query.
   */
  java.lang.String getQuery();
  /**
   * <pre>
   * Search query
   * </pre>
   *
   * <code>string query = 1;</code>
   * @return The bytes for query.
   */
  com.google.protobuf.ByteString
      getQueryBytes();

  /**
   * <pre>
   * Types of context to search (documentation, ui_components, api_endpoints, architecture)
   * </pre>
   *
   * <code>repeated string context_types = 2;</code>
   * @return A list containing the contextTypes.
   */
  java.util.List<java.lang.String>
      getContextTypesList();
  /**
   * <pre>
   * Types of context to search (documentation, ui_components, api_endpoints, architecture)
   * </pre>
   *
   * <code>repeated string context_types = 2;</code>
   * @return The count of contextTypes.
   */
  int getContextTypesCount();
  /**
   * <pre>
   * Types of context to search (documentation, ui_components, api_endpoints, architecture)
   * </pre>
   *
   * <code>repeated string context_types = 2;</code>
   * @param index The index of the element to return.
   * @return The contextTypes at the given index.
   */
  java.lang.String getContextTypes(int index);
  /**
   * <pre>
   * Types of context to search (documentation, ui_components, api_endpoints, architecture)
   * </pre>
   *
   * <code>repeated string context_types = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the contextTypes at the given index.
   */
  com.google.protobuf.ByteString
      getContextTypesBytes(int index);

  /**
   * <pre>
   * Maximum number of results
   * </pre>
   *
   * <code>int32 max_results = 3;</code>
   * @return The maxResults.
   */
  int getMaxResults();

  /**
   * <pre>
   * Minimum relevance score (0.0 to 1.0)
   * </pre>
   *
   * <code>float min_relevance = 4;</code>
   * @return The minRelevance.
   */
  float getMinRelevance();

  /**
   * <pre>
   * Additional search filters
   * </pre>
   *
   * <code>map&lt;string, string&gt; filters = 5;</code>
   */
  int getFiltersCount();
  /**
   * <pre>
   * Additional search filters
   * </pre>
   *
   * <code>map&lt;string, string&gt; filters = 5;</code>
   */
  boolean containsFilters(
      java.lang.String key);
  /**
   * Use {@link #getFiltersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getFilters();
  /**
   * <pre>
   * Additional search filters
   * </pre>
   *
   * <code>map&lt;string, string&gt; filters = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getFiltersMap();
  /**
   * <pre>
   * Additional search filters
   * </pre>
   *
   * <code>map&lt;string, string&gt; filters = 5;</code>
   */
  /* nullable */
java.lang.String getFiltersOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Additional search filters
   * </pre>
   *
   * <code>map&lt;string, string&gt; filters = 5;</code>
   */
  java.lang.String getFiltersOrThrow(
      java.lang.String key);
}
