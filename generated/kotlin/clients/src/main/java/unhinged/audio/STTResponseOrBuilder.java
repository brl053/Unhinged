// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: audio.proto

package unhinged.audio;

public interface STTResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:unhinged.audio.v1.STTResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ← DRY!
   * </pre>
   *
   * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
   * @return Whether the response field is set.
   */
  boolean hasResponse();
  /**
   * <pre>
   * ← DRY!
   * </pre>
   *
   * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
   * @return The response.
   */
  unhinged.common.StandardResponse getResponse();
  /**
   * <pre>
   * ← DRY!
   * </pre>
   *
   * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
   */
  unhinged.common.StandardResponseOrBuilder getResponseOrBuilder();

  /**
   * <code>string transcript = 2;</code>
   * @return The transcript.
   */
  java.lang.String getTranscript();
  /**
   * <code>string transcript = 2;</code>
   * @return The bytes for transcript.
   */
  com.google.protobuf.ByteString
      getTranscriptBytes();

  /**
   * <code>float confidence = 3;</code>
   * @return The confidence.
   */
  float getConfidence();

  /**
   * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
   */
  java.util.List<unhinged.audio.TranscriptSegment> 
      getSegmentsList();
  /**
   * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
   */
  unhinged.audio.TranscriptSegment getSegments(int index);
  /**
   * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
   */
  int getSegmentsCount();
  /**
   * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
   */
  java.util.List<? extends unhinged.audio.TranscriptSegmentOrBuilder> 
      getSegmentsOrBuilderList();
  /**
   * <code>repeated .unhinged.audio.v1.TranscriptSegment segments = 4;</code>
   */
  unhinged.audio.TranscriptSegmentOrBuilder getSegmentsOrBuilder(
      int index);

  /**
   * <pre>
   * ← DRY! (duration, bytes, etc.)
   * </pre>
   *
   * <code>.unhinged.common.v1.AudioUsage usage = 5;</code>
   * @return Whether the usage field is set.
   */
  boolean hasUsage();
  /**
   * <pre>
   * ← DRY! (duration, bytes, etc.)
   * </pre>
   *
   * <code>.unhinged.common.v1.AudioUsage usage = 5;</code>
   * @return The usage.
   */
  unhinged.common.AudioUsage getUsage();
  /**
   * <pre>
   * ← DRY! (duration, bytes, etc.)
   * </pre>
   *
   * <code>.unhinged.common.v1.AudioUsage usage = 5;</code>
   */
  unhinged.common.AudioUsageOrBuilder getUsageOrBuilder();

  /**
   * <code>.unhinged.audio.v1.STTMetadata metadata = 6;</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <code>.unhinged.audio.v1.STTMetadata metadata = 6;</code>
   * @return The metadata.
   */
  unhinged.audio.STTMetadata getMetadata();
  /**
   * <code>.unhinged.audio.v1.STTMetadata metadata = 6;</code>
   */
  unhinged.audio.STTMetadataOrBuilder getMetadataOrBuilder();
}
