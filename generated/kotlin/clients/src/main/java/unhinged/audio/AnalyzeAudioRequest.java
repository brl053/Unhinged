// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: audio.proto

package unhinged.audio;

/**
 * Protobuf type {@code unhinged.audio.v1.AnalyzeAudioRequest}
 */
public final class AnalyzeAudioRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:unhinged.audio.v1.AnalyzeAudioRequest)
    AnalyzeAudioRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AnalyzeAudioRequest.newBuilder() to construct.
  private AnalyzeAudioRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AnalyzeAudioRequest() {
    analysisTypes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AnalyzeAudioRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return unhinged.audio.AudioProto.internal_static_unhinged_audio_v1_AnalyzeAudioRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return unhinged.audio.AudioProto.internal_static_unhinged_audio_v1_AnalyzeAudioRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            unhinged.audio.AnalyzeAudioRequest.class, unhinged.audio.AnalyzeAudioRequest.Builder.class);
  }

  public static final int AUDIO_FILE_FIELD_NUMBER = 1;
  private unhinged.common.Attachment audioFile_;
  /**
   * <pre>
   * ← DRY!
   * </pre>
   *
   * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
   * @return Whether the audioFile field is set.
   */
  @java.lang.Override
  public boolean hasAudioFile() {
    return audioFile_ != null;
  }
  /**
   * <pre>
   * ← DRY!
   * </pre>
   *
   * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
   * @return The audioFile.
   */
  @java.lang.Override
  public unhinged.common.Attachment getAudioFile() {
    return audioFile_ == null ? unhinged.common.Attachment.getDefaultInstance() : audioFile_;
  }
  /**
   * <pre>
   * ← DRY!
   * </pre>
   *
   * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
   */
  @java.lang.Override
  public unhinged.common.AttachmentOrBuilder getAudioFileOrBuilder() {
    return audioFile_ == null ? unhinged.common.Attachment.getDefaultInstance() : audioFile_;
  }

  public static final int ANALYSIS_TYPES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> analysisTypes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, unhinged.audio.AnalysisType> analysisTypes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, unhinged.audio.AnalysisType>() {
            public unhinged.audio.AnalysisType convert(java.lang.Integer from) {
              unhinged.audio.AnalysisType result = unhinged.audio.AnalysisType.forNumber(from);
              return result == null ? unhinged.audio.AnalysisType.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
   * @return A list containing the analysisTypes.
   */
  @java.lang.Override
  public java.util.List<unhinged.audio.AnalysisType> getAnalysisTypesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, unhinged.audio.AnalysisType>(analysisTypes_, analysisTypes_converter_);
  }
  /**
   * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
   * @return The count of analysisTypes.
   */
  @java.lang.Override
  public int getAnalysisTypesCount() {
    return analysisTypes_.size();
  }
  /**
   * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
   * @param index The index of the element to return.
   * @return The analysisTypes at the given index.
   */
  @java.lang.Override
  public unhinged.audio.AnalysisType getAnalysisTypes(int index) {
    return analysisTypes_converter_.convert(analysisTypes_.get(index));
  }
  /**
   * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
   * @return A list containing the enum numeric values on the wire for analysisTypes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getAnalysisTypesValueList() {
    return analysisTypes_;
  }
  /**
   * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of analysisTypes at the given index.
   */
  @java.lang.Override
  public int getAnalysisTypesValue(int index) {
    return analysisTypes_.get(index);
  }
  private int analysisTypesMemoizedSerializedSize;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (audioFile_ != null) {
      output.writeMessage(1, getAudioFile());
    }
    if (getAnalysisTypesList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(analysisTypesMemoizedSerializedSize);
    }
    for (int i = 0; i < analysisTypes_.size(); i++) {
      output.writeEnumNoTag(analysisTypes_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (audioFile_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getAudioFile());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < analysisTypes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(analysisTypes_.get(i));
      }
      size += dataSize;
      if (!getAnalysisTypesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }analysisTypesMemoizedSerializedSize = dataSize;
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof unhinged.audio.AnalyzeAudioRequest)) {
      return super.equals(obj);
    }
    unhinged.audio.AnalyzeAudioRequest other = (unhinged.audio.AnalyzeAudioRequest) obj;

    if (hasAudioFile() != other.hasAudioFile()) return false;
    if (hasAudioFile()) {
      if (!getAudioFile()
          .equals(other.getAudioFile())) return false;
    }
    if (!analysisTypes_.equals(other.analysisTypes_)) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAudioFile()) {
      hash = (37 * hash) + AUDIO_FILE_FIELD_NUMBER;
      hash = (53 * hash) + getAudioFile().hashCode();
    }
    if (getAnalysisTypesCount() > 0) {
      hash = (37 * hash) + ANALYSIS_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + analysisTypes_.hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static unhinged.audio.AnalyzeAudioRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static unhinged.audio.AnalyzeAudioRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static unhinged.audio.AnalyzeAudioRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static unhinged.audio.AnalyzeAudioRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static unhinged.audio.AnalyzeAudioRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static unhinged.audio.AnalyzeAudioRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static unhinged.audio.AnalyzeAudioRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static unhinged.audio.AnalyzeAudioRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static unhinged.audio.AnalyzeAudioRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static unhinged.audio.AnalyzeAudioRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static unhinged.audio.AnalyzeAudioRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static unhinged.audio.AnalyzeAudioRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(unhinged.audio.AnalyzeAudioRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code unhinged.audio.v1.AnalyzeAudioRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:unhinged.audio.v1.AnalyzeAudioRequest)
      unhinged.audio.AnalyzeAudioRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return unhinged.audio.AudioProto.internal_static_unhinged_audio_v1_AnalyzeAudioRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return unhinged.audio.AudioProto.internal_static_unhinged_audio_v1_AnalyzeAudioRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              unhinged.audio.AnalyzeAudioRequest.class, unhinged.audio.AnalyzeAudioRequest.Builder.class);
    }

    // Construct using unhinged.audio.AnalyzeAudioRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      audioFile_ = null;
      if (audioFileBuilder_ != null) {
        audioFileBuilder_.dispose();
        audioFileBuilder_ = null;
      }
      analysisTypes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return unhinged.audio.AudioProto.internal_static_unhinged_audio_v1_AnalyzeAudioRequest_descriptor;
    }

    @java.lang.Override
    public unhinged.audio.AnalyzeAudioRequest getDefaultInstanceForType() {
      return unhinged.audio.AnalyzeAudioRequest.getDefaultInstance();
    }

    @java.lang.Override
    public unhinged.audio.AnalyzeAudioRequest build() {
      unhinged.audio.AnalyzeAudioRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public unhinged.audio.AnalyzeAudioRequest buildPartial() {
      unhinged.audio.AnalyzeAudioRequest result = new unhinged.audio.AnalyzeAudioRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(unhinged.audio.AnalyzeAudioRequest result) {
      if (((bitField0_ & 0x00000002) != 0)) {
        analysisTypes_ = java.util.Collections.unmodifiableList(analysisTypes_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.analysisTypes_ = analysisTypes_;
    }

    private void buildPartial0(unhinged.audio.AnalyzeAudioRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.audioFile_ = audioFileBuilder_ == null
            ? audioFile_
            : audioFileBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof unhinged.audio.AnalyzeAudioRequest) {
        return mergeFrom((unhinged.audio.AnalyzeAudioRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(unhinged.audio.AnalyzeAudioRequest other) {
      if (other == unhinged.audio.AnalyzeAudioRequest.getDefaultInstance()) return this;
      if (other.hasAudioFile()) {
        mergeAudioFile(other.getAudioFile());
      }
      if (!other.analysisTypes_.isEmpty()) {
        if (analysisTypes_.isEmpty()) {
          analysisTypes_ = other.analysisTypes_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureAnalysisTypesIsMutable();
          analysisTypes_.addAll(other.analysisTypes_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getAudioFileFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              int tmpRaw = input.readEnum();
              ensureAnalysisTypesIsMutable();
              analysisTypes_.add(tmpRaw);
              break;
            } // case 16
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureAnalysisTypesIsMutable();
                analysisTypes_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private unhinged.common.Attachment audioFile_;
    private com.google.protobuf.SingleFieldBuilderV3<
        unhinged.common.Attachment, unhinged.common.Attachment.Builder, unhinged.common.AttachmentOrBuilder> audioFileBuilder_;
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
     * @return Whether the audioFile field is set.
     */
    public boolean hasAudioFile() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
     * @return The audioFile.
     */
    public unhinged.common.Attachment getAudioFile() {
      if (audioFileBuilder_ == null) {
        return audioFile_ == null ? unhinged.common.Attachment.getDefaultInstance() : audioFile_;
      } else {
        return audioFileBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
     */
    public Builder setAudioFile(unhinged.common.Attachment value) {
      if (audioFileBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        audioFile_ = value;
      } else {
        audioFileBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
     */
    public Builder setAudioFile(
        unhinged.common.Attachment.Builder builderForValue) {
      if (audioFileBuilder_ == null) {
        audioFile_ = builderForValue.build();
      } else {
        audioFileBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
     */
    public Builder mergeAudioFile(unhinged.common.Attachment value) {
      if (audioFileBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          audioFile_ != null &&
          audioFile_ != unhinged.common.Attachment.getDefaultInstance()) {
          getAudioFileBuilder().mergeFrom(value);
        } else {
          audioFile_ = value;
        }
      } else {
        audioFileBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
     */
    public Builder clearAudioFile() {
      bitField0_ = (bitField0_ & ~0x00000001);
      audioFile_ = null;
      if (audioFileBuilder_ != null) {
        audioFileBuilder_.dispose();
        audioFileBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
     */
    public unhinged.common.Attachment.Builder getAudioFileBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getAudioFileFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
     */
    public unhinged.common.AttachmentOrBuilder getAudioFileOrBuilder() {
      if (audioFileBuilder_ != null) {
        return audioFileBuilder_.getMessageOrBuilder();
      } else {
        return audioFile_ == null ?
            unhinged.common.Attachment.getDefaultInstance() : audioFile_;
      }
    }
    /**
     * <pre>
     * ← DRY!
     * </pre>
     *
     * <code>.unhinged.common.v1.Attachment audio_file = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        unhinged.common.Attachment, unhinged.common.Attachment.Builder, unhinged.common.AttachmentOrBuilder> 
        getAudioFileFieldBuilder() {
      if (audioFileBuilder_ == null) {
        audioFileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            unhinged.common.Attachment, unhinged.common.Attachment.Builder, unhinged.common.AttachmentOrBuilder>(
                getAudioFile(),
                getParentForChildren(),
                isClean());
        audioFile_ = null;
      }
      return audioFileBuilder_;
    }

    private java.util.List<java.lang.Integer> analysisTypes_ =
      java.util.Collections.emptyList();
    private void ensureAnalysisTypesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        analysisTypes_ = new java.util.ArrayList<java.lang.Integer>(analysisTypes_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @return A list containing the analysisTypes.
     */
    public java.util.List<unhinged.audio.AnalysisType> getAnalysisTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, unhinged.audio.AnalysisType>(analysisTypes_, analysisTypes_converter_);
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @return The count of analysisTypes.
     */
    public int getAnalysisTypesCount() {
      return analysisTypes_.size();
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @param index The index of the element to return.
     * @return The analysisTypes at the given index.
     */
    public unhinged.audio.AnalysisType getAnalysisTypes(int index) {
      return analysisTypes_converter_.convert(analysisTypes_.get(index));
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @param index The index to set the value at.
     * @param value The analysisTypes to set.
     * @return This builder for chaining.
     */
    public Builder setAnalysisTypes(
        int index, unhinged.audio.AnalysisType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAnalysisTypesIsMutable();
      analysisTypes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @param value The analysisTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAnalysisTypes(unhinged.audio.AnalysisType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAnalysisTypesIsMutable();
      analysisTypes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @param values The analysisTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllAnalysisTypes(
        java.lang.Iterable<? extends unhinged.audio.AnalysisType> values) {
      ensureAnalysisTypesIsMutable();
      for (unhinged.audio.AnalysisType value : values) {
        analysisTypes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAnalysisTypes() {
      analysisTypes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @return A list containing the enum numeric values on the wire for analysisTypes.
     */
    public java.util.List<java.lang.Integer>
    getAnalysisTypesValueList() {
      return java.util.Collections.unmodifiableList(analysisTypes_);
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of analysisTypes at the given index.
     */
    public int getAnalysisTypesValue(int index) {
      return analysisTypes_.get(index);
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for analysisTypes to set.
     * @return This builder for chaining.
     */
    public Builder setAnalysisTypesValue(
        int index, int value) {
      ensureAnalysisTypesIsMutable();
      analysisTypes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @param value The enum numeric value on the wire for analysisTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAnalysisTypesValue(int value) {
      ensureAnalysisTypesIsMutable();
      analysisTypes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .unhinged.audio.v1.AnalysisType analysis_types = 2;</code>
     * @param values The enum numeric values on the wire for analysisTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllAnalysisTypesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureAnalysisTypesIsMutable();
      for (int value : values) {
        analysisTypes_.add(value);
      }
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:unhinged.audio.v1.AnalyzeAudioRequest)
  }

  // @@protoc_insertion_point(class_scope:unhinged.audio.v1.AnalyzeAudioRequest)
  private static final unhinged.audio.AnalyzeAudioRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new unhinged.audio.AnalyzeAudioRequest();
  }

  public static unhinged.audio.AnalyzeAudioRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AnalyzeAudioRequest>
      PARSER = new com.google.protobuf.AbstractParser<AnalyzeAudioRequest>() {
    @java.lang.Override
    public AnalyzeAudioRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AnalyzeAudioRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AnalyzeAudioRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public unhinged.audio.AnalyzeAudioRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

