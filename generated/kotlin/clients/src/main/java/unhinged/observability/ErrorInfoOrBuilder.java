// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: observability.proto

package unhinged.observability;

public interface ErrorInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:unhinged.observability.v1.ErrorInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Exception class name
   * </pre>
   *
   * <code>string error_type = 1;</code>
   * @return The errorType.
   */
  java.lang.String getErrorType();
  /**
   * <pre>
   * Exception class name
   * </pre>
   *
   * <code>string error_type = 1;</code>
   * @return The bytes for errorType.
   */
  com.google.protobuf.ByteString
      getErrorTypeBytes();

  /**
   * <pre>
   * Exception message
   * </pre>
   *
   * <code>string error_message = 2;</code>
   * @return The errorMessage.
   */
  java.lang.String getErrorMessage();
  /**
   * <pre>
   * Exception message
   * </pre>
   *
   * <code>string error_message = 2;</code>
   * @return The bytes for errorMessage.
   */
  com.google.protobuf.ByteString
      getErrorMessageBytes();

  /**
   * <pre>
   * Full stack trace
   * </pre>
   *
   * <code>string stack_trace = 3;</code>
   * @return The stackTrace.
   */
  java.lang.String getStackTrace();
  /**
   * <pre>
   * Full stack trace
   * </pre>
   *
   * <code>string stack_trace = 3;</code>
   * @return The bytes for stackTrace.
   */
  com.google.protobuf.ByteString
      getStackTraceBytes();

  /**
   * <pre>
   * Application error code
   * </pre>
   *
   * <code>string error_code = 4;</code>
   * @return The errorCode.
   */
  java.lang.String getErrorCode();
  /**
   * <pre>
   * Application error code
   * </pre>
   *
   * <code>string error_code = 4;</code>
   * @return The bytes for errorCode.
   */
  com.google.protobuf.ByteString
      getErrorCodeBytes();

  /**
   * <pre>
   * Additional error context
   * </pre>
   *
   * <code>map&lt;string, string&gt; error_attributes = 5;</code>
   */
  int getErrorAttributesCount();
  /**
   * <pre>
   * Additional error context
   * </pre>
   *
   * <code>map&lt;string, string&gt; error_attributes = 5;</code>
   */
  boolean containsErrorAttributes(
      java.lang.String key);
  /**
   * Use {@link #getErrorAttributesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getErrorAttributes();
  /**
   * <pre>
   * Additional error context
   * </pre>
   *
   * <code>map&lt;string, string&gt; error_attributes = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getErrorAttributesMap();
  /**
   * <pre>
   * Additional error context
   * </pre>
   *
   * <code>map&lt;string, string&gt; error_attributes = 5;</code>
   */
  /* nullable */
java.lang.String getErrorAttributesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Additional error context
   * </pre>
   *
   * <code>map&lt;string, string&gt; error_attributes = 5;</code>
   */
  java.lang.String getErrorAttributesOrThrow(
      java.lang.String key);
}
