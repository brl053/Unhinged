// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: observability.proto

package unhinged.observability;

public interface TraceContextOrBuilder extends
    // @@protoc_insertion_point(interface_extends:unhinged.observability.v1.TraceContext)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * OpenTelemetry trace ID (32 hex chars)
   * </pre>
   *
   * <code>string trace_id = 1;</code>
   * @return The traceId.
   */
  java.lang.String getTraceId();
  /**
   * <pre>
   * OpenTelemetry trace ID (32 hex chars)
   * </pre>
   *
   * <code>string trace_id = 1;</code>
   * @return The bytes for traceId.
   */
  com.google.protobuf.ByteString
      getTraceIdBytes();

  /**
   * <pre>
   * OpenTelemetry span ID (16 hex chars)
   * </pre>
   *
   * <code>string span_id = 2;</code>
   * @return The spanId.
   */
  java.lang.String getSpanId();
  /**
   * <pre>
   * OpenTelemetry span ID (16 hex chars)
   * </pre>
   *
   * <code>string span_id = 2;</code>
   * @return The bytes for spanId.
   */
  com.google.protobuf.ByteString
      getSpanIdBytes();

  /**
   * <pre>
   * Parent span ID for hierarchy
   * </pre>
   *
   * <code>string parent_span_id = 3;</code>
   * @return The parentSpanId.
   */
  java.lang.String getParentSpanId();
  /**
   * <pre>
   * Parent span ID for hierarchy
   * </pre>
   *
   * <code>string parent_span_id = 3;</code>
   * @return The bytes for parentSpanId.
   */
  com.google.protobuf.ByteString
      getParentSpanIdBytes();

  /**
   * <pre>
   * Trace flags (sampled, etc.)
   * </pre>
   *
   * <code>.unhinged.observability.v1.TraceFlags trace_flags = 4;</code>
   * @return Whether the traceFlags field is set.
   */
  boolean hasTraceFlags();
  /**
   * <pre>
   * Trace flags (sampled, etc.)
   * </pre>
   *
   * <code>.unhinged.observability.v1.TraceFlags trace_flags = 4;</code>
   * @return The traceFlags.
   */
  unhinged.observability.TraceFlags getTraceFlags();
  /**
   * <pre>
   * Trace flags (sampled, etc.)
   * </pre>
   *
   * <code>.unhinged.observability.v1.TraceFlags trace_flags = 4;</code>
   */
  unhinged.observability.TraceFlagsOrBuilder getTraceFlagsOrBuilder();

  /**
   * <pre>
   * W3C trace state for vendor data
   * </pre>
   *
   * <code>string trace_state = 5;</code>
   * @return The traceState.
   */
  java.lang.String getTraceState();
  /**
   * <pre>
   * W3C trace state for vendor data
   * </pre>
   *
   * <code>string trace_state = 5;</code>
   * @return The bytes for traceState.
   */
  com.google.protobuf.ByteString
      getTraceStateBytes();

  /**
   * <pre>
   * Additional context for correlation
   * </pre>
   *
   * <code>string correlation_id = 10;</code>
   * @return The correlationId.
   */
  java.lang.String getCorrelationId();
  /**
   * <pre>
   * Additional context for correlation
   * </pre>
   *
   * <code>string correlation_id = 10;</code>
   * @return The bytes for correlationId.
   */
  com.google.protobuf.ByteString
      getCorrelationIdBytes();

  /**
   * <pre>
   * Request-specific ID
   * </pre>
   *
   * <code>string request_id = 11;</code>
   * @return The requestId.
   */
  java.lang.String getRequestId();
  /**
   * <pre>
   * Request-specific ID
   * </pre>
   *
   * <code>string request_id = 11;</code>
   * @return The bytes for requestId.
   */
  com.google.protobuf.ByteString
      getRequestIdBytes();

  /**
   * <pre>
   * User session ID
   * </pre>
   *
   * <code>string session_id = 12;</code>
   * @return The sessionId.
   */
  java.lang.String getSessionId();
  /**
   * <pre>
   * User session ID
   * </pre>
   *
   * <code>string session_id = 12;</code>
   * @return The bytes for sessionId.
   */
  com.google.protobuf.ByteString
      getSessionIdBytes();

  /**
   * <pre>
   * User identifier
   * </pre>
   *
   * <code>string user_id = 13;</code>
   * @return The userId.
   */
  java.lang.String getUserId();
  /**
   * <pre>
   * User identifier
   * </pre>
   *
   * <code>string user_id = 13;</code>
   * @return The bytes for userId.
   */
  com.google.protobuf.ByteString
      getUserIdBytes();
}
