// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package unhinged.common;

/**
 * <pre>
 **
 * Filter operators
 * </pre>
 *
 * Protobuf enum {@code unhinged.common.v1.FilterOperator}
 */
public enum FilterOperator
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>FILTER_OPERATOR_UNSPECIFIED = 0;</code>
   */
  FILTER_OPERATOR_UNSPECIFIED(0),
  /**
   * <pre>
   * field = value
   * </pre>
   *
   * <code>FILTER_OPERATOR_EQUALS = 1;</code>
   */
  FILTER_OPERATOR_EQUALS(1),
  /**
   * <pre>
   * field != value
   * </pre>
   *
   * <code>FILTER_OPERATOR_NOT_EQUALS = 2;</code>
   */
  FILTER_OPERATOR_NOT_EQUALS(2),
  /**
   * <pre>
   * field &gt; value
   * </pre>
   *
   * <code>FILTER_OPERATOR_GREATER_THAN = 3;</code>
   */
  FILTER_OPERATOR_GREATER_THAN(3),
  /**
   * <pre>
   * field &lt; value
   * </pre>
   *
   * <code>FILTER_OPERATOR_LESS_THAN = 4;</code>
   */
  FILTER_OPERATOR_LESS_THAN(4),
  /**
   * <pre>
   * field LIKE %value%
   * </pre>
   *
   * <code>FILTER_OPERATOR_CONTAINS = 5;</code>
   */
  FILTER_OPERATOR_CONTAINS(5),
  /**
   * <pre>
   * field IN (values)
   * </pre>
   *
   * <code>FILTER_OPERATOR_IN = 6;</code>
   */
  FILTER_OPERATOR_IN(6),
  /**
   * <pre>
   * field NOT IN (values)
   * </pre>
   *
   * <code>FILTER_OPERATOR_NOT_IN = 7;</code>
   */
  FILTER_OPERATOR_NOT_IN(7),
  /**
   * <pre>
   * field IS NULL
   * </pre>
   *
   * <code>FILTER_OPERATOR_IS_NULL = 8;</code>
   */
  FILTER_OPERATOR_IS_NULL(8),
  /**
   * <pre>
   * field IS NOT NULL
   * </pre>
   *
   * <code>FILTER_OPERATOR_IS_NOT_NULL = 9;</code>
   */
  FILTER_OPERATOR_IS_NOT_NULL(9),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>FILTER_OPERATOR_UNSPECIFIED = 0;</code>
   */
  public static final int FILTER_OPERATOR_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * field = value
   * </pre>
   *
   * <code>FILTER_OPERATOR_EQUALS = 1;</code>
   */
  public static final int FILTER_OPERATOR_EQUALS_VALUE = 1;
  /**
   * <pre>
   * field != value
   * </pre>
   *
   * <code>FILTER_OPERATOR_NOT_EQUALS = 2;</code>
   */
  public static final int FILTER_OPERATOR_NOT_EQUALS_VALUE = 2;
  /**
   * <pre>
   * field &gt; value
   * </pre>
   *
   * <code>FILTER_OPERATOR_GREATER_THAN = 3;</code>
   */
  public static final int FILTER_OPERATOR_GREATER_THAN_VALUE = 3;
  /**
   * <pre>
   * field &lt; value
   * </pre>
   *
   * <code>FILTER_OPERATOR_LESS_THAN = 4;</code>
   */
  public static final int FILTER_OPERATOR_LESS_THAN_VALUE = 4;
  /**
   * <pre>
   * field LIKE %value%
   * </pre>
   *
   * <code>FILTER_OPERATOR_CONTAINS = 5;</code>
   */
  public static final int FILTER_OPERATOR_CONTAINS_VALUE = 5;
  /**
   * <pre>
   * field IN (values)
   * </pre>
   *
   * <code>FILTER_OPERATOR_IN = 6;</code>
   */
  public static final int FILTER_OPERATOR_IN_VALUE = 6;
  /**
   * <pre>
   * field NOT IN (values)
   * </pre>
   *
   * <code>FILTER_OPERATOR_NOT_IN = 7;</code>
   */
  public static final int FILTER_OPERATOR_NOT_IN_VALUE = 7;
  /**
   * <pre>
   * field IS NULL
   * </pre>
   *
   * <code>FILTER_OPERATOR_IS_NULL = 8;</code>
   */
  public static final int FILTER_OPERATOR_IS_NULL_VALUE = 8;
  /**
   * <pre>
   * field IS NOT NULL
   * </pre>
   *
   * <code>FILTER_OPERATOR_IS_NOT_NULL = 9;</code>
   */
  public static final int FILTER_OPERATOR_IS_NOT_NULL_VALUE = 9;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static FilterOperator valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static FilterOperator forNumber(int value) {
    switch (value) {
      case 0: return FILTER_OPERATOR_UNSPECIFIED;
      case 1: return FILTER_OPERATOR_EQUALS;
      case 2: return FILTER_OPERATOR_NOT_EQUALS;
      case 3: return FILTER_OPERATOR_GREATER_THAN;
      case 4: return FILTER_OPERATOR_LESS_THAN;
      case 5: return FILTER_OPERATOR_CONTAINS;
      case 6: return FILTER_OPERATOR_IN;
      case 7: return FILTER_OPERATOR_NOT_IN;
      case 8: return FILTER_OPERATOR_IS_NULL;
      case 9: return FILTER_OPERATOR_IS_NOT_NULL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<FilterOperator>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      FilterOperator> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<FilterOperator>() {
          public FilterOperator findValueByNumber(int number) {
            return FilterOperator.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return unhinged.common.CommonProto.getDescriptor().getEnumTypes().get(4);
  }

  private static final FilterOperator[] VALUES = values();

  public static FilterOperator valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private FilterOperator(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:unhinged.common.v1.FilterOperator)
}

