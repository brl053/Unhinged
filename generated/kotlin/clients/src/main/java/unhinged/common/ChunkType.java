// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package unhinged.common;

/**
 * <pre>
 **
 * Chunk type classification
 * </pre>
 *
 * Protobuf enum {@code unhinged.common.v1.ChunkType}
 */
public enum ChunkType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>CHUNK_TYPE_UNSPECIFIED = 0;</code>
   */
  CHUNK_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * Primary content
   * </pre>
   *
   * <code>CHUNK_TYPE_DATA = 1;</code>
   */
  CHUNK_TYPE_DATA(1),
  /**
   * <pre>
   * Metadata update
   * </pre>
   *
   * <code>CHUNK_TYPE_METADATA = 2;</code>
   */
  CHUNK_TYPE_METADATA(2),
  /**
   * <pre>
   * Error information
   * </pre>
   *
   * <code>CHUNK_TYPE_ERROR = 3;</code>
   */
  CHUNK_TYPE_ERROR(3),
  /**
   * <pre>
   * Keep-alive signal
   * </pre>
   *
   * <code>CHUNK_TYPE_HEARTBEAT = 4;</code>
   */
  CHUNK_TYPE_HEARTBEAT(4),
  /**
   * <pre>
   * Progress update
   * </pre>
   *
   * <code>CHUNK_TYPE_PROGRESS = 5;</code>
   */
  CHUNK_TYPE_PROGRESS(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CHUNK_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int CHUNK_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Primary content
   * </pre>
   *
   * <code>CHUNK_TYPE_DATA = 1;</code>
   */
  public static final int CHUNK_TYPE_DATA_VALUE = 1;
  /**
   * <pre>
   * Metadata update
   * </pre>
   *
   * <code>CHUNK_TYPE_METADATA = 2;</code>
   */
  public static final int CHUNK_TYPE_METADATA_VALUE = 2;
  /**
   * <pre>
   * Error information
   * </pre>
   *
   * <code>CHUNK_TYPE_ERROR = 3;</code>
   */
  public static final int CHUNK_TYPE_ERROR_VALUE = 3;
  /**
   * <pre>
   * Keep-alive signal
   * </pre>
   *
   * <code>CHUNK_TYPE_HEARTBEAT = 4;</code>
   */
  public static final int CHUNK_TYPE_HEARTBEAT_VALUE = 4;
  /**
   * <pre>
   * Progress update
   * </pre>
   *
   * <code>CHUNK_TYPE_PROGRESS = 5;</code>
   */
  public static final int CHUNK_TYPE_PROGRESS_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ChunkType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ChunkType forNumber(int value) {
    switch (value) {
      case 0: return CHUNK_TYPE_UNSPECIFIED;
      case 1: return CHUNK_TYPE_DATA;
      case 2: return CHUNK_TYPE_METADATA;
      case 3: return CHUNK_TYPE_ERROR;
      case 4: return CHUNK_TYPE_HEARTBEAT;
      case 5: return CHUNK_TYPE_PROGRESS;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ChunkType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ChunkType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ChunkType>() {
          public ChunkType findValueByNumber(int number) {
            return ChunkType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return unhinged.common.CommonProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final ChunkType[] VALUES = values();

  public static ChunkType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ChunkType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:unhinged.common.v1.ChunkType)
}

