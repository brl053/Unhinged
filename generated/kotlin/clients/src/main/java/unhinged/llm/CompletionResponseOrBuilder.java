// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: llm.proto

package unhinged.llm;

public interface CompletionResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:unhinged.llm.v1.CompletionResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ← DRY! (success, error handling)
   * </pre>
   *
   * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
   * @return Whether the response field is set.
   */
  boolean hasResponse();
  /**
   * <pre>
   * ← DRY! (success, error handling)
   * </pre>
   *
   * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
   * @return The response.
   */
  unhinged.common.StandardResponse getResponse();
  /**
   * <pre>
   * ← DRY! (success, error handling)
   * </pre>
   *
   * <code>.unhinged.common.v1.StandardResponse response = 1;</code>
   */
  unhinged.common.StandardResponseOrBuilder getResponseOrBuilder();

  /**
   * <code>string completion_id = 2;</code>
   * @return The completionId.
   */
  java.lang.String getCompletionId();
  /**
   * <code>string completion_id = 2;</code>
   * @return The bytes for completionId.
   */
  com.google.protobuf.ByteString
      getCompletionIdBytes();

  /**
   * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
   */
  java.util.List<unhinged.llm.CompletionChoice> 
      getChoicesList();
  /**
   * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
   */
  unhinged.llm.CompletionChoice getChoices(int index);
  /**
   * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
   */
  int getChoicesCount();
  /**
   * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
   */
  java.util.List<? extends unhinged.llm.CompletionChoiceOrBuilder> 
      getChoicesOrBuilderList();
  /**
   * <code>repeated .unhinged.llm.v1.CompletionChoice choices = 3;</code>
   */
  unhinged.llm.CompletionChoiceOrBuilder getChoicesOrBuilder(
      int index);

  /**
   * <pre>
   * ← DRY! (token usage)
   * </pre>
   *
   * <code>.unhinged.common.v1.UsageMetrics usage = 4;</code>
   * @return Whether the usage field is set.
   */
  boolean hasUsage();
  /**
   * <pre>
   * ← DRY! (token usage)
   * </pre>
   *
   * <code>.unhinged.common.v1.UsageMetrics usage = 4;</code>
   * @return The usage.
   */
  unhinged.common.UsageMetrics getUsage();
  /**
   * <pre>
   * ← DRY! (token usage)
   * </pre>
   *
   * <code>.unhinged.common.v1.UsageMetrics usage = 4;</code>
   */
  unhinged.common.UsageMetricsOrBuilder getUsageOrBuilder();

  /**
   * <code>.unhinged.llm.v1.CompletionMetadata metadata = 5;</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <code>.unhinged.llm.v1.CompletionMetadata metadata = 5;</code>
   * @return The metadata.
   */
  unhinged.llm.CompletionMetadata getMetadata();
  /**
   * <code>.unhinged.llm.v1.CompletionMetadata metadata = 5;</code>
   */
  unhinged.llm.CompletionMetadataOrBuilder getMetadataOrBuilder();
}
