// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: llm.proto

package unhinged.llm;

public interface CompletionChunkPayloadOrBuilder extends
    // @@protoc_insertion_point(interface_extends:unhinged.llm.v1.CompletionChunkPayload)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string completion_id = 1;</code>
   * @return The completionId.
   */
  java.lang.String getCompletionId();
  /**
   * <code>string completion_id = 1;</code>
   * @return The bytes for completionId.
   */
  com.google.protobuf.ByteString
      getCompletionIdBytes();

  /**
   * <code>int32 choice_index = 2;</code>
   * @return The choiceIndex.
   */
  int getChoiceIndex();

  /**
   * <code>.unhinged.llm.v1.CompletionChunkType type = 3;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <code>.unhinged.llm.v1.CompletionChunkType type = 3;</code>
   * @return The type.
   */
  unhinged.llm.CompletionChunkType getType();

  /**
   * <code>string content = 4;</code>
   * @return The content.
   */
  java.lang.String getContent();
  /**
   * <code>string content = 4;</code>
   * @return The bytes for content.
   */
  com.google.protobuf.ByteString
      getContentBytes();

  /**
   * <pre>
   * ← DRY! (reuse from chat)
   * </pre>
   *
   * <code>repeated .unhinged.chat.v1.ToolCall tool_calls = 5;</code>
   */
  java.util.List<unhinged.chat.ToolCall> 
      getToolCallsList();
  /**
   * <pre>
   * ← DRY! (reuse from chat)
   * </pre>
   *
   * <code>repeated .unhinged.chat.v1.ToolCall tool_calls = 5;</code>
   */
  unhinged.chat.ToolCall getToolCalls(int index);
  /**
   * <pre>
   * ← DRY! (reuse from chat)
   * </pre>
   *
   * <code>repeated .unhinged.chat.v1.ToolCall tool_calls = 5;</code>
   */
  int getToolCallsCount();
  /**
   * <pre>
   * ← DRY! (reuse from chat)
   * </pre>
   *
   * <code>repeated .unhinged.chat.v1.ToolCall tool_calls = 5;</code>
   */
  java.util.List<? extends unhinged.chat.ToolCallOrBuilder> 
      getToolCallsOrBuilderList();
  /**
   * <pre>
   * ← DRY! (reuse from chat)
   * </pre>
   *
   * <code>repeated .unhinged.chat.v1.ToolCall tool_calls = 5;</code>
   */
  unhinged.chat.ToolCallOrBuilder getToolCallsOrBuilder(
      int index);

  /**
   * <code>string finish_reason = 6;</code>
   * @return The finishReason.
   */
  java.lang.String getFinishReason();
  /**
   * <code>string finish_reason = 6;</code>
   * @return The bytes for finishReason.
   */
  com.google.protobuf.ByteString
      getFinishReasonBytes();

  /**
   * <pre>
   * ← DRY! (only in final chunk)
   * </pre>
   *
   * <code>.unhinged.common.v1.UsageMetrics usage = 7;</code>
   * @return Whether the usage field is set.
   */
  boolean hasUsage();
  /**
   * <pre>
   * ← DRY! (only in final chunk)
   * </pre>
   *
   * <code>.unhinged.common.v1.UsageMetrics usage = 7;</code>
   * @return The usage.
   */
  unhinged.common.UsageMetrics getUsage();
  /**
   * <pre>
   * ← DRY! (only in final chunk)
   * </pre>
   *
   * <code>.unhinged.common.v1.UsageMetrics usage = 7;</code>
   */
  unhinged.common.UsageMetricsOrBuilder getUsageOrBuilder();
}
