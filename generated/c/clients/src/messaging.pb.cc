// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging.proto

#include "messaging.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace unhinged {
namespace messaging {
PROTOBUF_CONSTEXPR Message::Message(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.from_service_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.to_service_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.routing_key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.correlation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reply_to_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trace_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.created_at_)*/nullptr
  , /*decltype(_impl_.expires_at_)*/nullptr
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.metadata_)*/nullptr
  , /*decltype(_impl_.payload_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;
PROTOBUF_CONSTEXPR MessageOptions::MessageOptions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.delivery_mode_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.retry_attempts_)*/0
  , /*decltype(_impl_.retry_delay_ms_)*/0
  , /*decltype(_impl_.priority_)*/0
  , /*decltype(_impl_.preserve_order_)*/false
  , /*decltype(_impl_.expect_reply_)*/false
  , /*decltype(_impl_.reply_timeout_ms_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MessageOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageOptionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageOptionsDefaultTypeInternal() {}
  union {
    MessageOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageOptionsDefaultTypeInternal _MessageOptions_default_instance_;
PROTOBUF_CONSTEXPR LLMMessage::LLMMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.interaction_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_type_)*/0
  , /*decltype(_impl_.message_data_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct LLMMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LLMMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LLMMessageDefaultTypeInternal() {}
  union {
    LLMMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LLMMessageDefaultTypeInternal _LLMMessage_default_instance_;
PROTOBUF_CONSTEXPR LLMPromptRequest::LLMPromptRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.context_documents_)*/{}
  , /*decltype(_impl_.stop_sequences_)*/{}
  , /*decltype(_impl_.tools_available_)*/{}
  , /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.provider_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.system_prompt_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_prompt_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.stream_callback_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.prompt_metadata_)*/nullptr
  , /*decltype(_impl_.max_tokens_)*/0
  , /*decltype(_impl_.temperature_)*/0
  , /*decltype(_impl_.top_p_)*/0
  , /*decltype(_impl_.stream_response_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LLMPromptRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LLMPromptRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LLMPromptRequestDefaultTypeInternal() {}
  union {
    LLMPromptRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LLMPromptRequestDefaultTypeInternal _LLMPromptRequest_default_instance_;
PROTOBUF_CONSTEXPR ContextDocument::ContextDocument(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.document_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.document_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metadata_)*/nullptr
  , /*decltype(_impl_.relevance_score_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ContextDocumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContextDocumentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContextDocumentDefaultTypeInternal() {}
  union {
    ContextDocument _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContextDocumentDefaultTypeInternal _ContextDocument_default_instance_;
PROTOBUF_CONSTEXPR LLMPromptResponse::LLMPromptResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tool_calls_)*/{}
  , /*decltype(_impl_.response_text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.finish_reason_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.response_metadata_)*/nullptr
  , /*decltype(_impl_.prompt_tokens_)*/0
  , /*decltype(_impl_.completion_tokens_)*/0
  , /*decltype(_impl_.total_tokens_)*/0
  , /*decltype(_impl_.response_time_ms_)*/0
  , /*decltype(_impl_.tokens_per_second_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LLMPromptResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LLMPromptResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LLMPromptResponseDefaultTypeInternal() {}
  union {
    LLMPromptResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LLMPromptResponseDefaultTypeInternal _LLMPromptResponse_default_instance_;
PROTOBUF_CONSTEXPR LLMStreamChunk::LLMStreamChunk(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.partial_tool_calls_)*/{}
  , /*decltype(_impl_.chunk_text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.chunk_index_)*/0
  , /*decltype(_impl_.is_final_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LLMStreamChunkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LLMStreamChunkDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LLMStreamChunkDefaultTypeInternal() {}
  union {
    LLMStreamChunk _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LLMStreamChunkDefaultTypeInternal _LLMStreamChunk_default_instance_;
PROTOBUF_CONSTEXPR LLMError::LLMError(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_retryable_)*/false
  , /*decltype(_impl_.retry_after_seconds_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LLMErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LLMErrorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LLMErrorDefaultTypeInternal() {}
  union {
    LLMError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LLMErrorDefaultTypeInternal _LLMError_default_instance_;
PROTOBUF_CONSTEXPR LLMCancel::LLMCancel(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reason_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LLMCancelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LLMCancelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LLMCancelDefaultTypeInternal() {}
  union {
    LLMCancel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LLMCancelDefaultTypeInternal _LLMCancel_default_instance_;
PROTOBUF_CONSTEXPR ToolCall::ToolCall(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tool_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.tool_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.tool_arguments_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ToolCallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolCallDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolCallDefaultTypeInternal() {}
  union {
    ToolCall _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolCallDefaultTypeInternal _ToolCall_default_instance_;
PROTOBUF_CONSTEXPR AgentMessage::AgentMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.execution_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_type_)*/0
  , /*decltype(_impl_.message_data_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct AgentMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentMessageDefaultTypeInternal() {}
  union {
    AgentMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentMessageDefaultTypeInternal _AgentMessage_default_instance_;
PROTOBUF_CONSTEXPR AgentTaskRequest::AgentTaskRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.required_capabilities_)*/{}
  , /*decltype(_impl_.task_description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.task_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.task_parameters_)*/nullptr
  , /*decltype(_impl_.context_)*/nullptr
  , /*decltype(_impl_.deadline_)*/nullptr
  , /*decltype(_impl_.priority_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AgentTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentTaskRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentTaskRequestDefaultTypeInternal() {}
  union {
    AgentTaskRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentTaskRequestDefaultTypeInternal _AgentTaskRequest_default_instance_;
PROTOBUF_CONSTEXPR AgentTaskResponse::AgentTaskResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.artifacts_created_)*/{}
  , /*decltype(_impl_.status_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.completion_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_.execution_time_ms_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AgentTaskResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentTaskResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentTaskResponseDefaultTypeInternal() {}
  union {
    AgentTaskResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentTaskResponseDefaultTypeInternal _AgentTaskResponse_default_instance_;
PROTOBUF_CONSTEXPR AgentStepUpdate::AgentStepUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.step_description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.step_status_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.step_data_)*/nullptr
  , /*decltype(_impl_.step_number_)*/0
  , /*decltype(_impl_.progress_percentage_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AgentStepUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentStepUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentStepUpdateDefaultTypeInternal() {}
  union {
    AgentStepUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentStepUpdateDefaultTypeInternal _AgentStepUpdate_default_instance_;
PROTOBUF_CONSTEXPR AgentCollaboration::AgentCollaboration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.collaboration_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.target_agent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.collaboration_data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AgentCollaborationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentCollaborationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentCollaborationDefaultTypeInternal() {}
  union {
    AgentCollaboration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentCollaborationDefaultTypeInternal _AgentCollaboration_default_instance_;
PROTOBUF_CONSTEXPR AgentError::AgentError(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_context_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_recoverable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AgentErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentErrorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentErrorDefaultTypeInternal() {}
  union {
    AgentError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentErrorDefaultTypeInternal _AgentError_default_instance_;
PROTOBUF_CONSTEXPR ToolMessage::ToolMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tool_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.tool_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.tool_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_type_)*/0
  , /*decltype(_impl_.message_data_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ToolMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolMessageDefaultTypeInternal() {}
  union {
    ToolMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolMessageDefaultTypeInternal _ToolMessage_default_instance_;
PROTOBUF_CONSTEXPR ToolInvocation::ToolInvocation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invocation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.arguments_)*/nullptr
  , /*decltype(_impl_.context_)*/nullptr
  , /*decltype(_impl_.timeout_seconds_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ToolInvocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolInvocationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolInvocationDefaultTypeInternal() {}
  union {
    ToolInvocation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolInvocationDefaultTypeInternal _ToolInvocation_default_instance_;
PROTOBUF_CONSTEXPR ToolResult::ToolResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.artifacts_)*/{}
  , /*decltype(_impl_.invocation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.result_data_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_.execution_time_ms_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ToolResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolResultDefaultTypeInternal() {}
  union {
    ToolResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolResultDefaultTypeInternal _ToolResult_default_instance_;
PROTOBUF_CONSTEXPR ToolError::ToolError(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invocation_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_retryable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ToolErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolErrorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolErrorDefaultTypeInternal() {}
  union {
    ToolError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolErrorDefaultTypeInternal _ToolError_default_instance_;
PROTOBUF_CONSTEXPR ToolRegistration::ToolRegistration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.capabilities_)*/{}
  , /*decltype(_impl_.tool_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.tool_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.endpoint_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.schema_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ToolRegistrationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolRegistrationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolRegistrationDefaultTypeInternal() {}
  union {
    ToolRegistration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolRegistrationDefaultTypeInternal _ToolRegistration_default_instance_;
PROTOBUF_CONSTEXPR WorkflowMessage::WorkflowMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.workflow_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.execution_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_type_)*/0
  , /*decltype(_impl_.message_data_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct WorkflowMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkflowMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkflowMessageDefaultTypeInternal() {}
  union {
    WorkflowMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkflowMessageDefaultTypeInternal _WorkflowMessage_default_instance_;
PROTOBUF_CONSTEXPR WorkflowTrigger::WorkflowTrigger(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trigger_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trigger_source_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trigger_data_)*/nullptr
  , /*decltype(_impl_.initial_context_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WorkflowTriggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkflowTriggerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkflowTriggerDefaultTypeInternal() {}
  union {
    WorkflowTrigger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkflowTriggerDefaultTypeInternal _WorkflowTrigger_default_instance_;
PROTOBUF_CONSTEXPR WorkflowStepExecution::WorkflowStepExecution(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.step_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.step_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.step_status_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.next_step_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.step_input_)*/nullptr
  , /*decltype(_impl_.step_output_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WorkflowStepExecutionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkflowStepExecutionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkflowStepExecutionDefaultTypeInternal() {}
  union {
    WorkflowStepExecution _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkflowStepExecutionDefaultTypeInternal _WorkflowStepExecution_default_instance_;
PROTOBUF_CONSTEXPR WorkflowCompletion::WorkflowCompletion(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.completion_status_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.completion_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.final_output_)*/nullptr
  , /*decltype(_impl_.total_steps_executed_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WorkflowCompletionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkflowCompletionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkflowCompletionDefaultTypeInternal() {}
  union {
    WorkflowCompletion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkflowCompletionDefaultTypeInternal _WorkflowCompletion_default_instance_;
PROTOBUF_CONSTEXPR WorkflowControl::WorkflowControl(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.control_action_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.control_reason_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.control_parameters_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WorkflowControlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkflowControlDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkflowControlDefaultTypeInternal() {}
  union {
    WorkflowControl _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkflowControlDefaultTypeInternal _WorkflowControl_default_instance_;
PROTOBUF_CONSTEXPR UIMessage::UIMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.component_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_type_)*/0
  , /*decltype(_impl_.message_data_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct UIMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UIMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UIMessageDefaultTypeInternal() {}
  union {
    UIMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UIMessageDefaultTypeInternal _UIMessage_default_instance_;
PROTOBUF_CONSTEXPR UIUpdate::UIUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.update_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.update_data_)*/nullptr
  , /*decltype(_impl_.force_refresh_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UIUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UIUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UIUpdateDefaultTypeInternal() {}
  union {
    UIUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UIUpdateDefaultTypeInternal _UIUpdate_default_instance_;
PROTOBUF_CONSTEXPR UINotification::UINotification(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.notification_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.duration_ms_)*/0
  , /*decltype(_impl_.dismissible_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UINotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UINotificationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UINotificationDefaultTypeInternal() {}
  union {
    UINotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UINotificationDefaultTypeInternal _UINotification_default_instance_;
PROTOBUF_CONSTEXPR UICommand::UICommand(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.command_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.command_parameters_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UICommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UICommandDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UICommandDefaultTypeInternal() {}
  union {
    UICommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UICommandDefaultTypeInternal _UICommand_default_instance_;
PROTOBUF_CONSTEXPR SystemMessage::SystemMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_type_)*/0
  , /*decltype(_impl_.message_data_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct SystemMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemMessageDefaultTypeInternal() {}
  union {
    SystemMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemMessageDefaultTypeInternal _SystemMessage_default_instance_;
PROTOBUF_CONSTEXPR ServiceDiscovery::ServiceDiscovery(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.capabilities_)*/{}
  , /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.service_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.endpoint_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServiceDiscoveryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceDiscoveryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceDiscoveryDefaultTypeInternal() {}
  union {
    ServiceDiscovery _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceDiscoveryDefaultTypeInternal _ServiceDiscovery_default_instance_;
PROTOBUF_CONSTEXPR HealthCheck::HealthCheck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.health_details_)*/nullptr
  , /*decltype(_impl_.is_healthy_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HealthCheckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthCheckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthCheckDefaultTypeInternal() {}
  union {
    HealthCheck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthCheckDefaultTypeInternal _HealthCheck_default_instance_;
PROTOBUF_CONSTEXPR ConfigUpdate::ConfigUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.update_reason_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.config_value_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConfigUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigUpdateDefaultTypeInternal() {}
  union {
    ConfigUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigUpdateDefaultTypeInternal _ConfigUpdate_default_instance_;
PROTOBUF_CONSTEXPR ShutdownNotice::ShutdownNotice(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.shutdown_reason_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.graceful_shutdown_seconds_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShutdownNoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShutdownNoticeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShutdownNoticeDefaultTypeInternal() {}
  union {
    ShutdownNotice _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShutdownNoticeDefaultTypeInternal _ShutdownNotice_default_instance_;
PROTOBUF_CONSTEXPR SendMessageRequest::SendMessageRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageRequestDefaultTypeInternal() {}
  union {
    SendMessageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageRequestDefaultTypeInternal _SendMessageRequest_default_instance_;
PROTOBUF_CONSTEXPR SendMessageResponse::SendMessageResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageResponseDefaultTypeInternal() {}
  union {
    SendMessageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageResponseDefaultTypeInternal _SendMessageResponse_default_instance_;
PROTOBUF_CONSTEXPR SendMessagesRequest::SendMessagesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_.atomic_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendMessagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessagesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessagesRequestDefaultTypeInternal() {}
  union {
    SendMessagesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessagesRequestDefaultTypeInternal _SendMessagesRequest_default_instance_;
PROTOBUF_CONSTEXPR SendMessageResult::SendMessageResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendMessageResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageResultDefaultTypeInternal() {}
  union {
    SendMessageResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageResultDefaultTypeInternal _SendMessageResult_default_instance_;
PROTOBUF_CONSTEXPR SendMessagesResponse::SendMessagesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.results_)*/{}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_.successful_count_)*/0
  , /*decltype(_impl_.failed_count_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendMessagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessagesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessagesResponseDefaultTypeInternal() {}
  union {
    SendMessagesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessagesResponseDefaultTypeInternal _SendMessagesResponse_default_instance_;
PROTOBUF_CONSTEXPR ReceiveMessagesRequest::ReceiveMessagesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_types_)*/{}
  , /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.max_messages_)*/0
  , /*decltype(_impl_.wait_time_seconds_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveMessagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveMessagesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveMessagesRequestDefaultTypeInternal() {}
  union {
    ReceiveMessagesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveMessagesRequestDefaultTypeInternal _ReceiveMessagesRequest_default_instance_;
PROTOBUF_CONSTEXPR ReceiveMessagesResponse::ReceiveMessagesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_.receipt_handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveMessagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveMessagesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveMessagesResponseDefaultTypeInternal() {}
  union {
    ReceiveMessagesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveMessagesResponseDefaultTypeInternal _ReceiveMessagesResponse_default_instance_;
PROTOBUF_CONSTEXPR AcknowledgeMessageRequest::AcknowledgeMessageRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.receipt_handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AcknowledgeMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AcknowledgeMessageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AcknowledgeMessageRequestDefaultTypeInternal() {}
  union {
    AcknowledgeMessageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AcknowledgeMessageRequestDefaultTypeInternal _AcknowledgeMessageRequest_default_instance_;
PROTOBUF_CONSTEXPR AcknowledgeMessageResponse::AcknowledgeMessageResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AcknowledgeMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AcknowledgeMessageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AcknowledgeMessageResponseDefaultTypeInternal() {}
  union {
    AcknowledgeMessageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AcknowledgeMessageResponseDefaultTypeInternal _AcknowledgeMessageResponse_default_instance_;
PROTOBUF_CONSTEXPR SubscribeToMessagesRequest::SubscribeToMessagesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_types_)*/{}
  , /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.filter_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SubscribeToMessagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeToMessagesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeToMessagesRequestDefaultTypeInternal() {}
  union {
    SubscribeToMessagesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeToMessagesRequestDefaultTypeInternal _SubscribeToMessagesRequest_default_instance_;
PROTOBUF_CONSTEXPR MessageFilter::MessageFilter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.from_services_)*/{}
  , /*decltype(_impl_.user_ids_)*/{}
  , /*decltype(_impl_.session_ids_)*/{}
  , /*decltype(_impl_.metadata_filter_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MessageFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageFilterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageFilterDefaultTypeInternal() {}
  union {
    MessageFilter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageFilterDefaultTypeInternal _MessageFilter_default_instance_;
PROTOBUF_CONSTEXPR MessageStreamResponse::MessageStreamResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.response_type_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct MessageStreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageStreamResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageStreamResponseDefaultTypeInternal() {}
  union {
    MessageStreamResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageStreamResponseDefaultTypeInternal _MessageStreamResponse_default_instance_;
PROTOBUF_CONSTEXPR StreamStatus::StreamStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.status_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.messages_received_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamStatusDefaultTypeInternal() {}
  union {
    StreamStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamStatusDefaultTypeInternal _StreamStatus_default_instance_;
PROTOBUF_CONSTEXPR StreamError::StreamError(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_recoverable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamErrorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamErrorDefaultTypeInternal() {}
  union {
    StreamError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamErrorDefaultTypeInternal _StreamError_default_instance_;
}  // namespace messaging
}  // namespace unhinged
static ::_pb::Metadata file_level_metadata_messaging_2eproto[49];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_messaging_2eproto[6];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_messaging_2eproto = nullptr;

const uint32_t TableStruct_messaging_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.message_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.message_type_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.message_version_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.from_service_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.to_service_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.routing_key_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.created_at_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.expires_at_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.correlation_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.reply_to_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.session_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.trace_id_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.metadata_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::Message, _impl_.payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageOptions, _impl_.delivery_mode_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageOptions, _impl_.retry_attempts_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageOptions, _impl_.retry_delay_ms_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageOptions, _impl_.priority_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageOptions, _impl_.preserve_order_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageOptions, _impl_.expect_reply_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageOptions, _impl_.reply_timeout_ms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMMessage, _impl_.interaction_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMMessage, _impl_.message_type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMMessage, _impl_.message_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.model_name_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.provider_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.system_prompt_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.user_prompt_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.context_documents_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.max_tokens_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.temperature_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.top_p_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.stop_sequences_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.stream_response_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.stream_callback_url_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.prompt_metadata_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptRequest, _impl_.tools_available_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ContextDocument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ContextDocument, _impl_.document_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ContextDocument, _impl_.document_type_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ContextDocument, _impl_.content_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ContextDocument, _impl_.metadata_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ContextDocument, _impl_.relevance_score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptResponse, _impl_.response_text_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptResponse, _impl_.finish_reason_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptResponse, _impl_.prompt_tokens_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptResponse, _impl_.completion_tokens_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptResponse, _impl_.total_tokens_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptResponse, _impl_.response_time_ms_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptResponse, _impl_.tokens_per_second_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptResponse, _impl_.tool_calls_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMPromptResponse, _impl_.response_metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMStreamChunk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMStreamChunk, _impl_.chunk_text_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMStreamChunk, _impl_.chunk_index_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMStreamChunk, _impl_.is_final_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMStreamChunk, _impl_.partial_tool_calls_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMError, _impl_.error_code_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMError, _impl_.error_message_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMError, _impl_.error_type_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMError, _impl_.is_retryable_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMError, _impl_.retry_after_seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMCancel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::LLMCancel, _impl_.reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolCall, _impl_.tool_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolCall, _impl_.tool_name_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolCall, _impl_.tool_arguments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentMessage, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentMessage, _impl_.execution_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentMessage, _impl_.message_type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentMessage, _impl_.message_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskRequest, _impl_.task_description_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskRequest, _impl_.task_type_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskRequest, _impl_.task_parameters_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskRequest, _impl_.required_capabilities_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskRequest, _impl_.context_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskRequest, _impl_.priority_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskRequest, _impl_.deadline_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskResponse, _impl_.completion_message_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskResponse, _impl_.artifacts_created_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentTaskResponse, _impl_.execution_time_ms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentStepUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentStepUpdate, _impl_.step_number_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentStepUpdate, _impl_.step_description_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentStepUpdate, _impl_.step_status_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentStepUpdate, _impl_.step_data_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentStepUpdate, _impl_.progress_percentage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentCollaboration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentCollaboration, _impl_.collaboration_type_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentCollaboration, _impl_.target_agent_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentCollaboration, _impl_.collaboration_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentError, _impl_.error_code_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentError, _impl_.error_message_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentError, _impl_.error_context_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AgentError, _impl_.is_recoverable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolMessage, _impl_.tool_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolMessage, _impl_.tool_name_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolMessage, _impl_.tool_version_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolMessage, _impl_.message_type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolMessage, _impl_.message_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolInvocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolInvocation, _impl_.invocation_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolInvocation, _impl_.arguments_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolInvocation, _impl_.context_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolInvocation, _impl_.timeout_seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolResult, _impl_.invocation_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolResult, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolResult, _impl_.result_data_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolResult, _impl_.result_text_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolResult, _impl_.artifacts_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolResult, _impl_.execution_time_ms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolError, _impl_.invocation_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolError, _impl_.error_code_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolError, _impl_.error_message_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolError, _impl_.is_retryable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolRegistration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolRegistration, _impl_.tool_name_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolRegistration, _impl_.tool_version_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolRegistration, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolRegistration, _impl_.schema_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolRegistration, _impl_.capabilities_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ToolRegistration, _impl_.endpoint_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowMessage, _impl_.workflow_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowMessage, _impl_.execution_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowMessage, _impl_.message_type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowMessage, _impl_.message_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowTrigger, _impl_.trigger_type_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowTrigger, _impl_.trigger_source_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowTrigger, _impl_.trigger_data_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowTrigger, _impl_.initial_context_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowStepExecution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowStepExecution, _impl_.step_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowStepExecution, _impl_.step_type_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowStepExecution, _impl_.step_status_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowStepExecution, _impl_.step_input_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowStepExecution, _impl_.step_output_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowStepExecution, _impl_.next_step_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowCompletion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowCompletion, _impl_.completion_status_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowCompletion, _impl_.final_output_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowCompletion, _impl_.completion_message_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowCompletion, _impl_.total_steps_executed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowControl, _impl_.control_action_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowControl, _impl_.control_reason_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::WorkflowControl, _impl_.control_parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UIMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UIMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UIMessage, _impl_.component_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UIMessage, _impl_.message_type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UIMessage, _impl_.message_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UIUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UIUpdate, _impl_.update_type_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UIUpdate, _impl_.update_data_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UIUpdate, _impl_.force_refresh_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UINotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UINotification, _impl_.notification_type_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UINotification, _impl_.title_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UINotification, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UINotification, _impl_.duration_ms_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UINotification, _impl_.dismissible_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UICommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UICommand, _impl_.command_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::UICommand, _impl_.command_parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SystemMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SystemMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SystemMessage, _impl_.message_type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SystemMessage, _impl_.message_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ServiceDiscovery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ServiceDiscovery, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ServiceDiscovery, _impl_.service_version_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ServiceDiscovery, _impl_.endpoint_url_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ServiceDiscovery, _impl_.capabilities_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ServiceDiscovery, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::HealthCheck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::HealthCheck, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::HealthCheck, _impl_.is_healthy_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::HealthCheck, _impl_.status_message_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::HealthCheck, _impl_.health_details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ConfigUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ConfigUpdate, _impl_.config_key_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ConfigUpdate, _impl_.config_value_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ConfigUpdate, _impl_.update_reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ShutdownNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ShutdownNotice, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ShutdownNotice, _impl_.shutdown_reason_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ShutdownNotice, _impl_.graceful_shutdown_seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessageRequest, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessageResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessageResponse, _impl_.message_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessageResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessageResponse, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessagesRequest, _impl_.messages_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessagesRequest, _impl_.atomic_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessageResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessageResult, _impl_.message_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessageResult, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessageResult, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessagesResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessagesResponse, _impl_.results_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessagesResponse, _impl_.successful_count_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SendMessagesResponse, _impl_.failed_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ReceiveMessagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ReceiveMessagesRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ReceiveMessagesRequest, _impl_.message_types_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ReceiveMessagesRequest, _impl_.max_messages_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ReceiveMessagesRequest, _impl_.wait_time_seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ReceiveMessagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ReceiveMessagesResponse, _impl_.messages_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::ReceiveMessagesResponse, _impl_.receipt_handle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AcknowledgeMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AcknowledgeMessageRequest, _impl_.message_id_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AcknowledgeMessageRequest, _impl_.receipt_handle_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AcknowledgeMessageRequest, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AcknowledgeMessageRequest, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AcknowledgeMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AcknowledgeMessageResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::AcknowledgeMessageResponse, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SubscribeToMessagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SubscribeToMessagesRequest, _impl_.service_name_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SubscribeToMessagesRequest, _impl_.message_types_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::SubscribeToMessagesRequest, _impl_.filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageFilter, _impl_.from_services_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageFilter, _impl_.user_ids_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageFilter, _impl_.session_ids_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageFilter, _impl_.metadata_filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageStreamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageStreamResponse, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::MessageStreamResponse, _impl_.response_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::StreamStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::StreamStatus, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::StreamStatus, _impl_.messages_received_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::StreamError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::StreamError, _impl_.error_code_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::StreamError, _impl_.error_message_),
  PROTOBUF_FIELD_OFFSET(::unhinged::messaging::StreamError, _impl_.is_recoverable_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::unhinged::messaging::Message)},
  { 28, -1, -1, sizeof(::unhinged::messaging::MessageOptions)},
  { 41, -1, -1, sizeof(::unhinged::messaging::LLMMessage)},
  { 55, -1, -1, sizeof(::unhinged::messaging::LLMPromptRequest)},
  { 74, -1, -1, sizeof(::unhinged::messaging::ContextDocument)},
  { 85, -1, -1, sizeof(::unhinged::messaging::LLMPromptResponse)},
  { 100, -1, -1, sizeof(::unhinged::messaging::LLMStreamChunk)},
  { 110, -1, -1, sizeof(::unhinged::messaging::LLMError)},
  { 121, -1, -1, sizeof(::unhinged::messaging::LLMCancel)},
  { 128, -1, -1, sizeof(::unhinged::messaging::ToolCall)},
  { 137, -1, -1, sizeof(::unhinged::messaging::AgentMessage)},
  { 152, -1, -1, sizeof(::unhinged::messaging::AgentTaskRequest)},
  { 165, -1, -1, sizeof(::unhinged::messaging::AgentTaskResponse)},
  { 176, -1, -1, sizeof(::unhinged::messaging::AgentStepUpdate)},
  { 187, -1, -1, sizeof(::unhinged::messaging::AgentCollaboration)},
  { 196, -1, -1, sizeof(::unhinged::messaging::AgentError)},
  { 206, -1, -1, sizeof(::unhinged::messaging::ToolMessage)},
  { 221, -1, -1, sizeof(::unhinged::messaging::ToolInvocation)},
  { 231, -1, -1, sizeof(::unhinged::messaging::ToolResult)},
  { 243, -1, -1, sizeof(::unhinged::messaging::ToolError)},
  { 253, -1, -1, sizeof(::unhinged::messaging::ToolRegistration)},
  { 265, -1, -1, sizeof(::unhinged::messaging::WorkflowMessage)},
  { 279, -1, -1, sizeof(::unhinged::messaging::WorkflowTrigger)},
  { 289, -1, -1, sizeof(::unhinged::messaging::WorkflowStepExecution)},
  { 301, -1, -1, sizeof(::unhinged::messaging::WorkflowCompletion)},
  { 311, -1, -1, sizeof(::unhinged::messaging::WorkflowControl)},
  { 320, -1, -1, sizeof(::unhinged::messaging::UIMessage)},
  { 332, -1, -1, sizeof(::unhinged::messaging::UIUpdate)},
  { 341, -1, -1, sizeof(::unhinged::messaging::UINotification)},
  { 352, -1, -1, sizeof(::unhinged::messaging::UICommand)},
  { 360, -1, -1, sizeof(::unhinged::messaging::SystemMessage)},
  { 372, -1, -1, sizeof(::unhinged::messaging::ServiceDiscovery)},
  { 383, -1, -1, sizeof(::unhinged::messaging::HealthCheck)},
  { 393, -1, -1, sizeof(::unhinged::messaging::ConfigUpdate)},
  { 402, -1, -1, sizeof(::unhinged::messaging::ShutdownNotice)},
  { 411, -1, -1, sizeof(::unhinged::messaging::SendMessageRequest)},
  { 418, -1, -1, sizeof(::unhinged::messaging::SendMessageResponse)},
  { 428, -1, -1, sizeof(::unhinged::messaging::SendMessagesRequest)},
  { 436, -1, -1, sizeof(::unhinged::messaging::SendMessageResult)},
  { 445, -1, -1, sizeof(::unhinged::messaging::SendMessagesResponse)},
  { 455, -1, -1, sizeof(::unhinged::messaging::ReceiveMessagesRequest)},
  { 465, -1, -1, sizeof(::unhinged::messaging::ReceiveMessagesResponse)},
  { 473, -1, -1, sizeof(::unhinged::messaging::AcknowledgeMessageRequest)},
  { 483, -1, -1, sizeof(::unhinged::messaging::AcknowledgeMessageResponse)},
  { 491, -1, -1, sizeof(::unhinged::messaging::SubscribeToMessagesRequest)},
  { 500, -1, -1, sizeof(::unhinged::messaging::MessageFilter)},
  { 510, -1, -1, sizeof(::unhinged::messaging::MessageStreamResponse)},
  { 520, -1, -1, sizeof(::unhinged::messaging::StreamStatus)},
  { 528, -1, -1, sizeof(::unhinged::messaging::StreamError)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::unhinged::messaging::_Message_default_instance_._instance,
  &::unhinged::messaging::_MessageOptions_default_instance_._instance,
  &::unhinged::messaging::_LLMMessage_default_instance_._instance,
  &::unhinged::messaging::_LLMPromptRequest_default_instance_._instance,
  &::unhinged::messaging::_ContextDocument_default_instance_._instance,
  &::unhinged::messaging::_LLMPromptResponse_default_instance_._instance,
  &::unhinged::messaging::_LLMStreamChunk_default_instance_._instance,
  &::unhinged::messaging::_LLMError_default_instance_._instance,
  &::unhinged::messaging::_LLMCancel_default_instance_._instance,
  &::unhinged::messaging::_ToolCall_default_instance_._instance,
  &::unhinged::messaging::_AgentMessage_default_instance_._instance,
  &::unhinged::messaging::_AgentTaskRequest_default_instance_._instance,
  &::unhinged::messaging::_AgentTaskResponse_default_instance_._instance,
  &::unhinged::messaging::_AgentStepUpdate_default_instance_._instance,
  &::unhinged::messaging::_AgentCollaboration_default_instance_._instance,
  &::unhinged::messaging::_AgentError_default_instance_._instance,
  &::unhinged::messaging::_ToolMessage_default_instance_._instance,
  &::unhinged::messaging::_ToolInvocation_default_instance_._instance,
  &::unhinged::messaging::_ToolResult_default_instance_._instance,
  &::unhinged::messaging::_ToolError_default_instance_._instance,
  &::unhinged::messaging::_ToolRegistration_default_instance_._instance,
  &::unhinged::messaging::_WorkflowMessage_default_instance_._instance,
  &::unhinged::messaging::_WorkflowTrigger_default_instance_._instance,
  &::unhinged::messaging::_WorkflowStepExecution_default_instance_._instance,
  &::unhinged::messaging::_WorkflowCompletion_default_instance_._instance,
  &::unhinged::messaging::_WorkflowControl_default_instance_._instance,
  &::unhinged::messaging::_UIMessage_default_instance_._instance,
  &::unhinged::messaging::_UIUpdate_default_instance_._instance,
  &::unhinged::messaging::_UINotification_default_instance_._instance,
  &::unhinged::messaging::_UICommand_default_instance_._instance,
  &::unhinged::messaging::_SystemMessage_default_instance_._instance,
  &::unhinged::messaging::_ServiceDiscovery_default_instance_._instance,
  &::unhinged::messaging::_HealthCheck_default_instance_._instance,
  &::unhinged::messaging::_ConfigUpdate_default_instance_._instance,
  &::unhinged::messaging::_ShutdownNotice_default_instance_._instance,
  &::unhinged::messaging::_SendMessageRequest_default_instance_._instance,
  &::unhinged::messaging::_SendMessageResponse_default_instance_._instance,
  &::unhinged::messaging::_SendMessagesRequest_default_instance_._instance,
  &::unhinged::messaging::_SendMessageResult_default_instance_._instance,
  &::unhinged::messaging::_SendMessagesResponse_default_instance_._instance,
  &::unhinged::messaging::_ReceiveMessagesRequest_default_instance_._instance,
  &::unhinged::messaging::_ReceiveMessagesResponse_default_instance_._instance,
  &::unhinged::messaging::_AcknowledgeMessageRequest_default_instance_._instance,
  &::unhinged::messaging::_AcknowledgeMessageResponse_default_instance_._instance,
  &::unhinged::messaging::_SubscribeToMessagesRequest_default_instance_._instance,
  &::unhinged::messaging::_MessageFilter_default_instance_._instance,
  &::unhinged::messaging::_MessageStreamResponse_default_instance_._instance,
  &::unhinged::messaging::_StreamStatus_default_instance_._instance,
  &::unhinged::messaging::_StreamError_default_instance_._instance,
};

const char descriptor_table_protodef_messaging_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017messaging.proto\022\022unhinged.messaging\032\037g"
  "oogle/protobuf/timestamp.proto\032\034google/p"
  "rotobuf/struct.proto\032\031google/protobuf/an"
  "y.proto\"\225\006\n\007Message\022\022\n\nmessage_id\030\001 \001(\t\022"
  "\024\n\014message_type\030\002 \001(\t\022\027\n\017message_version"
  "\030\003 \001(\t\022\024\n\014from_service\030\004 \001(\t\022\022\n\nto_servi"
  "ce\030\005 \001(\t\022\023\n\013routing_key\030\006 \001(\t\022.\n\ncreated"
  "_at\030\007 \001(\0132\032.google.protobuf.Timestamp\022.\n"
  "\nexpires_at\030\010 \001(\0132\032.google.protobuf.Time"
  "stamp\022\026\n\016correlation_id\030\t \001(\t\022\020\n\010reply_t"
  "o\030\n \001(\t\022\017\n\007user_id\030\013 \001(\t\022\022\n\nsession_id\030\014"
  " \001(\t\022\020\n\010trace_id\030\r \001(\t\0225\n\013llm_message\030\024 "
  "\001(\0132\036.unhinged.messaging.LLMMessageH\000\0229\n"
  "\ragent_message\030\025 \001(\0132 .unhinged.messagin"
  "g.AgentMessageH\000\0227\n\014tool_message\030\026 \001(\0132\037"
  ".unhinged.messaging.ToolMessageH\000\022\?\n\020wor"
  "kflow_message\030\027 \001(\0132#.unhinged.messaging"
  ".WorkflowMessageH\000\0223\n\nui_message\030\030 \001(\0132\035"
  ".unhinged.messaging.UIMessageH\000\022;\n\016syste"
  "m_message\030\031 \001(\0132!.unhinged.messaging.Sys"
  "temMessageH\000\0223\n\007options\030\036 \001(\0132\".unhinged"
  ".messaging.MessageOptions\022)\n\010metadata\030\037 "
  "\001(\0132\027.google.protobuf.StructB\t\n\007payload\""
  "\261\001\n\016MessageOptions\022\025\n\rdelivery_mode\030\001 \001("
  "\t\022\026\n\016retry_attempts\030\002 \001(\005\022\026\n\016retry_delay"
  "_ms\030\003 \001(\005\022\020\n\010priority\030\004 \001(\005\022\026\n\016preserve_"
  "order\030\005 \001(\010\022\024\n\014expect_reply\030\006 \001(\010\022\030\n\020rep"
  "ly_timeout_ms\030\007 \001(\005\"\230\003\n\nLLMMessage\022\026\n\016in"
  "teraction_id\030\001 \001(\t\0228\n\014message_type\030\002 \001(\016"
  "2\".unhinged.messaging.LLMMessageType\022>\n\016"
  "prompt_request\030\n \001(\0132$.unhinged.messagin"
  "g.LLMPromptRequestH\000\022@\n\017prompt_response\030"
  "\013 \001(\0132%.unhinged.messaging.LLMPromptResp"
  "onseH\000\022:\n\014stream_chunk\030\014 \001(\0132\".unhinged."
  "messaging.LLMStreamChunkH\000\0221\n\tllm_error\030"
  "\r \001(\0132\034.unhinged.messaging.LLMErrorH\000\0227\n"
  "\016cancel_request\030\016 \001(\0132\035.unhinged.messagi"
  "ng.LLMCancelH\000B\016\n\014message_data\"\365\002\n\020LLMPr"
  "omptRequest\022\022\n\nmodel_name\030\001 \001(\t\022\020\n\010provi"
  "der\030\002 \001(\t\022\025\n\rsystem_prompt\030\003 \001(\t\022\023\n\013user"
  "_prompt\030\004 \001(\t\022>\n\021context_documents\030\005 \003(\013"
  "2#.unhinged.messaging.ContextDocument\022\022\n"
  "\nmax_tokens\030\006 \001(\005\022\023\n\013temperature\030\007 \001(\002\022\r"
  "\n\005top_p\030\010 \001(\002\022\026\n\016stop_sequences\030\t \003(\t\022\027\n"
  "\017stream_response\030\n \001(\010\022\033\n\023stream_callbac"
  "k_url\030\013 \001(\t\0220\n\017prompt_metadata\030\014 \001(\0132\027.g"
  "oogle.protobuf.Struct\022\027\n\017tools_available"
  "\030\r \003(\t\"\222\001\n\017ContextDocument\022\023\n\013document_i"
  "d\030\001 \001(\t\022\025\n\rdocument_type\030\002 \001(\t\022\017\n\007conten"
  "t\030\003 \001(\t\022)\n\010metadata\030\004 \001(\0132\027.google.proto"
  "buf.Struct\022\027\n\017relevance_score\030\005 \001(\002\"\244\002\n\021"
  "LLMPromptResponse\022\025\n\rresponse_text\030\001 \001(\t"
  "\022\025\n\rfinish_reason\030\002 \001(\t\022\025\n\rprompt_tokens"
  "\030\003 \001(\005\022\031\n\021completion_tokens\030\004 \001(\005\022\024\n\014tot"
  "al_tokens\030\005 \001(\005\022\030\n\020response_time_ms\030\006 \001("
  "\002\022\031\n\021tokens_per_second\030\007 \001(\002\0220\n\ntool_cal"
  "ls\030\010 \003(\0132\034.unhinged.messaging.ToolCall\0222"
  "\n\021response_metadata\030\t \001(\0132\027.google.proto"
  "buf.Struct\"\205\001\n\016LLMStreamChunk\022\022\n\nchunk_t"
  "ext\030\001 \001(\t\022\023\n\013chunk_index\030\002 \001(\005\022\020\n\010is_fin"
  "al\030\003 \001(\010\0228\n\022partial_tool_calls\030\004 \003(\0132\034.u"
  "nhinged.messaging.ToolCall\"|\n\010LLMError\022\022"
  "\n\nerror_code\030\001 \001(\t\022\025\n\rerror_message\030\002 \001("
  "\t\022\022\n\nerror_type\030\003 \001(\t\022\024\n\014is_retryable\030\004 "
  "\001(\010\022\033\n\023retry_after_seconds\030\005 \001(\005\"\033\n\tLLMC"
  "ancel\022\016\n\006reason\030\001 \001(\t\"_\n\010ToolCall\022\017\n\007too"
  "l_id\030\001 \001(\t\022\021\n\ttool_name\030\002 \001(\t\022/\n\016tool_ar"
  "guments\030\003 \001(\0132\027.google.protobuf.Struct\"\264"
  "\003\n\014AgentMessage\022\020\n\010agent_id\030\001 \001(\t\022\024\n\014exe"
  "cution_id\030\002 \001(\t\022:\n\014message_type\030\003 \001(\0162$."
  "unhinged.messaging.AgentMessageType\022<\n\014t"
  "ask_request\030\n \001(\0132$.unhinged.messaging.A"
  "gentTaskRequestH\000\022>\n\rtask_response\030\013 \001(\013"
  "2%.unhinged.messaging.AgentTaskResponseH"
  "\000\022:\n\013step_update\030\014 \001(\0132#.unhinged.messag"
  "ing.AgentStepUpdateH\000\022\?\n\rcollaboration\030\r"
  " \001(\0132&.unhinged.messaging.AgentCollabora"
  "tionH\000\0225\n\013agent_error\030\016 \001(\0132\036.unhinged.m"
  "essaging.AgentErrorH\000B\016\n\014message_data\"\372\001"
  "\n\020AgentTaskRequest\022\030\n\020task_description\030\001"
  " \001(\t\022\021\n\ttask_type\030\002 \001(\t\0220\n\017task_paramete"
  "rs\030\003 \001(\0132\027.google.protobuf.Struct\022\035\n\025req"
  "uired_capabilities\030\004 \003(\t\022(\n\007context\030\005 \001("
  "\0132\027.google.protobuf.Struct\022\020\n\010priority\030\006"
  " \001(\005\022,\n\010deadline\030\007 \001(\0132\032.google.protobuf"
  ".Timestamp\"\236\001\n\021AgentTaskResponse\022\016\n\006stat"
  "us\030\001 \001(\t\022\'\n\006result\030\002 \001(\0132\027.google.protob"
  "uf.Struct\022\032\n\022completion_message\030\003 \001(\t\022\031\n"
  "\021artifacts_created\030\004 \003(\t\022\031\n\021execution_ti"
  "me_ms\030\005 \001(\002\"\236\001\n\017AgentStepUpdate\022\023\n\013step_"
  "number\030\001 \001(\005\022\030\n\020step_description\030\002 \001(\t\022\023"
  "\n\013step_status\030\003 \001(\t\022*\n\tstep_data\030\004 \001(\0132\027"
  ".google.protobuf.Struct\022\033\n\023progress_perc"
  "entage\030\005 \001(\002\"~\n\022AgentCollaboration\022\032\n\022co"
  "llaboration_type\030\001 \001(\t\022\027\n\017target_agent_i"
  "d\030\002 \001(\t\0223\n\022collaboration_data\030\003 \001(\0132\027.go"
  "ogle.protobuf.Struct\"f\n\nAgentError\022\022\n\ner"
  "ror_code\030\001 \001(\t\022\025\n\rerror_message\030\002 \001(\t\022\025\n"
  "\rerror_context\030\003 \001(\t\022\026\n\016is_recoverable\030\004"
  " \001(\010\"\361\002\n\013ToolMessage\022\017\n\007tool_id\030\001 \001(\t\022\021\n"
  "\ttool_name\030\002 \001(\t\022\024\n\014tool_version\030\003 \001(\t\0229"
  "\n\014message_type\030\004 \001(\0162#.unhinged.messagin"
  "g.ToolMessageType\0228\n\ninvocation\030\n \001(\0132\"."
  "unhinged.messaging.ToolInvocationH\000\0220\n\006r"
  "esult\030\013 \001(\0132\036.unhinged.messaging.ToolRes"
  "ultH\000\0223\n\ntool_error\030\014 \001(\0132\035.unhinged.mes"
  "saging.ToolErrorH\000\022<\n\014registration\030\r \001(\013"
  "2$.unhinged.messaging.ToolRegistrationH\000"
  "B\016\n\014message_data\"\226\001\n\016ToolInvocation\022\025\n\ri"
  "nvocation_id\030\001 \001(\t\022*\n\targuments\030\002 \001(\0132\027."
  "google.protobuf.Struct\022(\n\007context\030\003 \001(\0132"
  "\027.google.protobuf.Struct\022\027\n\017timeout_seco"
  "nds\030\004 \001(\005\"\242\001\n\nToolResult\022\025\n\rinvocation_i"
  "d\030\001 \001(\t\022\017\n\007success\030\002 \001(\010\022)\n\013result_data\030"
  "\003 \001(\0132\024.google.protobuf.Any\022\023\n\013result_te"
  "xt\030\004 \001(\t\022\021\n\tartifacts\030\005 \003(\t\022\031\n\021execution"
  "_time_ms\030\006 \001(\002\"c\n\tToolError\022\025\n\rinvocatio"
  "n_id\030\001 \001(\t\022\022\n\nerror_code\030\002 \001(\t\022\025\n\rerror_"
  "message\030\003 \001(\t\022\024\n\014is_retryable\030\004 \001(\010\"\245\001\n\020"
  "ToolRegistration\022\021\n\ttool_name\030\001 \001(\t\022\024\n\014t"
  "ool_version\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\'"
  "\n\006schema\030\004 \001(\0132\027.google.protobuf.Struct\022"
  "\024\n\014capabilities\030\005 \003(\t\022\024\n\014endpoint_url\030\006 "
  "\001(\t\"\376\002\n\017WorkflowMessage\022\023\n\013workflow_id\030\001"
  " \001(\t\022\024\n\014execution_id\030\002 \001(\t\022=\n\014message_ty"
  "pe\030\003 \001(\0162\'.unhinged.messaging.WorkflowMe"
  "ssageType\0226\n\007trigger\030\n \001(\0132#.unhinged.me"
  "ssaging.WorkflowTriggerH\000\022C\n\016step_execut"
  "ion\030\013 \001(\0132).unhinged.messaging.WorkflowS"
  "tepExecutionH\000\022<\n\ncompletion\030\014 \001(\0132&.unh"
  "inged.messaging.WorkflowCompletionH\000\0226\n\007"
  "control\030\r \001(\0132#.unhinged.messaging.Workf"
  "lowControlH\000B\016\n\014message_data\"\240\001\n\017Workflo"
  "wTrigger\022\024\n\014trigger_type\030\001 \001(\t\022\026\n\016trigge"
  "r_source\030\002 \001(\t\022-\n\014trigger_data\030\003 \001(\0132\027.g"
  "oogle.protobuf.Struct\0220\n\017initial_context"
  "\030\004 \001(\0132\027.google.protobuf.Struct\"\301\001\n\025Work"
  "flowStepExecution\022\017\n\007step_id\030\001 \001(\t\022\021\n\tst"
  "ep_type\030\002 \001(\t\022\023\n\013step_status\030\003 \001(\t\022+\n\nst"
  "ep_input\030\004 \001(\0132\027.google.protobuf.Struct\022"
  ",\n\013step_output\030\005 \001(\0132\027.google.protobuf.S"
  "truct\022\024\n\014next_step_id\030\006 \001(\t\"\230\001\n\022Workflow"
  "Completion\022\031\n\021completion_status\030\001 \001(\t\022-\n"
  "\014final_output\030\002 \001(\0132\027.google.protobuf.St"
  "ruct\022\032\n\022completion_message\030\003 \001(\t\022\034\n\024tota"
  "l_steps_executed\030\004 \001(\005\"v\n\017WorkflowContro"
  "l\022\026\n\016control_action\030\001 \001(\t\022\026\n\016control_rea"
  "son\030\002 \001(\t\0223\n\022control_parameters\030\003 \001(\0132\027."
  "google.protobuf.Struct\"\210\002\n\tUIMessage\022\024\n\014"
  "component_id\030\001 \001(\t\0227\n\014message_type\030\002 \001(\016"
  "2!.unhinged.messaging.UIMessageType\022.\n\006u"
  "pdate\030\n \001(\0132\034.unhinged.messaging.UIUpdat"
  "eH\000\022:\n\014notification\030\013 \001(\0132\".unhinged.mes"
  "saging.UINotificationH\000\0220\n\007command\030\014 \001(\013"
  "2\035.unhinged.messaging.UICommandH\000B\016\n\014mes"
  "sage_data\"d\n\010UIUpdate\022\023\n\013update_type\030\001 \001"
  "(\t\022,\n\013update_data\030\002 \001(\0132\027.google.protobu"
  "f.Struct\022\025\n\rforce_refresh\030\003 \001(\010\"u\n\016UINot"
  "ification\022\031\n\021notification_type\030\001 \001(\t\022\r\n\005"
  "title\030\002 \001(\t\022\017\n\007message\030\003 \001(\t\022\023\n\013duration"
  "_ms\030\004 \001(\005\022\023\n\013dismissible\030\005 \001(\010\"Q\n\tUIComm"
  "and\022\017\n\007command\030\001 \001(\t\0223\n\022command_paramete"
  "rs\030\002 \001(\0132\027.google.protobuf.Struct\"\322\002\n\rSy"
  "stemMessage\022;\n\014message_type\030\001 \001(\0162%.unhi"
  "nged.messaging.SystemMessageType\022A\n\021serv"
  "ice_discovery\030\n \001(\0132$.unhinged.messaging"
  ".ServiceDiscoveryH\000\0227\n\014health_check\030\013 \001("
  "\0132\037.unhinged.messaging.HealthCheckH\000\0229\n\r"
  "config_update\030\014 \001(\0132 .unhinged.messaging"
  ".ConfigUpdateH\000\022=\n\017shutdown_notice\030\r \001(\013"
  "2\".unhinged.messaging.ShutdownNoticeH\000B\016"
  "\n\014message_data\"}\n\020ServiceDiscovery\022\024\n\014se"
  "rvice_name\030\001 \001(\t\022\027\n\017service_version\030\002 \001("
  "\t\022\024\n\014endpoint_url\030\003 \001(\t\022\024\n\014capabilities\030"
  "\004 \003(\t\022\016\n\006status\030\005 \001(\t\"\200\001\n\013HealthCheck\022\024\n"
  "\014service_name\030\001 \001(\t\022\022\n\nis_healthy\030\002 \001(\010\022"
  "\026\n\016status_message\030\003 \001(\t\022/\n\016health_detail"
  "s\030\004 \001(\0132\027.google.protobuf.Struct\"e\n\014Conf"
  "igUpdate\022\022\n\nconfig_key\030\001 \001(\t\022*\n\014config_v"
  "alue\030\002 \001(\0132\024.google.protobuf.Any\022\025\n\rupda"
  "te_reason\030\003 \001(\t\"b\n\016ShutdownNotice\022\024\n\014ser"
  "vice_name\030\001 \001(\t\022\027\n\017shutdown_reason\030\002 \001(\t"
  "\022!\n\031graceful_shutdown_seconds\030\003 \001(\005\"B\n\022S"
  "endMessageRequest\022,\n\007message\030\001 \001(\0132\033.unh"
  "inged.messaging.Message\"a\n\023SendMessageRe"
  "sponse\022\017\n\007success\030\001 \001(\010\022\022\n\nmessage_id\030\002 "
  "\001(\t\022\016\n\006status\030\003 \001(\t\022\025\n\rerror_message\030\004 \001"
  "(\t\"T\n\023SendMessagesRequest\022-\n\010messages\030\001 "
  "\003(\0132\033.unhinged.messaging.Message\022\016\n\006atom"
  "ic\030\002 \001(\010\"O\n\021SendMessageResult\022\022\n\nmessage"
  "_id\030\001 \001(\t\022\017\n\007success\030\002 \001(\010\022\025\n\rerror_mess"
  "age\030\003 \001(\t\"\217\001\n\024SendMessagesResponse\022\017\n\007su"
  "ccess\030\001 \001(\010\0226\n\007results\030\002 \003(\0132%.unhinged."
  "messaging.SendMessageResult\022\030\n\020successfu"
  "l_count\030\003 \001(\005\022\024\n\014failed_count\030\004 \001(\005\"v\n\026R"
  "eceiveMessagesRequest\022\024\n\014service_name\030\001 "
  "\001(\t\022\025\n\rmessage_types\030\002 \003(\t\022\024\n\014max_messag"
  "es\030\003 \001(\005\022\031\n\021wait_time_seconds\030\004 \001(\005\"`\n\027R"
  "eceiveMessagesResponse\022-\n\010messages\030\001 \003(\013"
  "2\033.unhinged.messaging.Message\022\026\n\016receipt"
  "_handle\030\002 \001(\t\"o\n\031AcknowledgeMessageReque"
  "st\022\022\n\nmessage_id\030\001 \001(\t\022\026\n\016receipt_handle"
  "\030\002 \001(\t\022\017\n\007success\030\003 \001(\010\022\025\n\rerror_message"
  "\030\004 \001(\t\">\n\032AcknowledgeMessageResponse\022\017\n\007"
  "success\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\"|\n\032Subscr"
  "ibeToMessagesRequest\022\024\n\014service_name\030\001 \001"
  "(\t\022\025\n\rmessage_types\030\002 \003(\t\0221\n\006filter\030\003 \001("
  "\0132!.unhinged.messaging.MessageFilter\"\177\n\r"
  "MessageFilter\022\025\n\rfrom_services\030\001 \003(\t\022\020\n\010"
  "user_ids\030\002 \003(\t\022\023\n\013session_ids\030\003 \003(\t\0220\n\017m"
  "etadata_filter\030\004 \001(\0132\027.google.protobuf.S"
  "truct\"\276\001\n\025MessageStreamResponse\022.\n\007messa"
  "ge\030\001 \001(\0132\033.unhinged.messaging.MessageH\000\022"
  "2\n\006status\030\002 \001(\0132 .unhinged.messaging.Str"
  "eamStatusH\000\0220\n\005error\030\003 \001(\0132\037.unhinged.me"
  "ssaging.StreamErrorH\000B\017\n\rresponse_type\"9"
  "\n\014StreamStatus\022\016\n\006status\030\001 \001(\t\022\031\n\021messag"
  "es_received\030\002 \001(\005\"P\n\013StreamError\022\022\n\nerro"
  "r_code\030\001 \001(\t\022\025\n\rerror_message\030\002 \001(\t\022\026\n\016i"
  "s_recoverable\030\003 \001(\010*v\n\016LLMMessageType\022\026\n"
  "\022LLM_PROMPT_REQUEST\020\000\022\027\n\023LLM_PROMPT_RESP"
  "ONSE\020\001\022\024\n\020LLM_STREAM_CHUNK\020\002\022\r\n\tLLM_ERRO"
  "R\020\003\022\016\n\nLLM_CANCEL\020\004*\204\001\n\020AgentMessageType"
  "\022\026\n\022AGENT_TASK_REQUEST\020\000\022\027\n\023AGENT_TASK_R"
  "ESPONSE\020\001\022\025\n\021AGENT_STEP_UPDATE\020\002\022\027\n\023AGEN"
  "T_COLLABORATION\020\003\022\017\n\013AGENT_ERROR\020\004*^\n\017To"
  "olMessageType\022\023\n\017TOOL_INVOCATION\020\000\022\017\n\013TO"
  "OL_RESULT\020\001\022\016\n\nTOOL_ERROR\020\002\022\025\n\021TOOL_REGI"
  "STRATION\020\003*w\n\023WorkflowMessageType\022\024\n\020WOR"
  "KFLOW_TRIGGER\020\000\022\033\n\027WORKFLOW_STEP_EXECUTI"
  "ON\020\001\022\027\n\023WORKFLOW_COMPLETION\020\002\022\024\n\020WORKFLO"
  "W_CONTROL\020\003*C\n\rUIMessageType\022\r\n\tUI_UPDAT"
  "E\020\000\022\023\n\017UI_NOTIFICATION\020\001\022\016\n\nUI_COMMAND\020\002"
  "*d\n\021SystemMessageType\022\025\n\021SERVICE_DISCOVE"
  "RY\020\000\022\020\n\014HEALTH_CHECK\020\001\022\021\n\rCONFIG_UPDATE\020"
  "\002\022\023\n\017SHUTDOWN_NOTICE\020\0032\252\004\n\020MessagingServ"
  "ice\022^\n\013SendMessage\022&.unhinged.messaging."
  "SendMessageRequest\032\'.unhinged.messaging."
  "SendMessageResponse\022a\n\014SendMessages\022\'.un"
  "hinged.messaging.SendMessagesRequest\032(.u"
  "nhinged.messaging.SendMessagesResponse\022j"
  "\n\017ReceiveMessages\022*.unhinged.messaging.R"
  "eceiveMessagesRequest\032+.unhinged.messagi"
  "ng.ReceiveMessagesResponse\022s\n\022Acknowledg"
  "eMessage\022-.unhinged.messaging.Acknowledg"
  "eMessageRequest\032..unhinged.messaging.Ack"
  "nowledgeMessageResponse\022r\n\023SubscribeToMe"
  "ssages\022..unhinged.messaging.SubscribeToM"
  "essagesRequest\032).unhinged.messaging.Mess"
  "ageStreamResponse0\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_messaging_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_messaging_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_messaging_2eproto = {
    false, false, 9987, descriptor_table_protodef_messaging_2eproto,
    "messaging.proto",
    &descriptor_table_messaging_2eproto_once, descriptor_table_messaging_2eproto_deps, 3, 49,
    schemas, file_default_instances, TableStruct_messaging_2eproto::offsets,
    file_level_metadata_messaging_2eproto, file_level_enum_descriptors_messaging_2eproto,
    file_level_service_descriptors_messaging_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_messaging_2eproto_getter() {
  return &descriptor_table_messaging_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_messaging_2eproto(&descriptor_table_messaging_2eproto);
namespace unhinged {
namespace messaging {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LLMMessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_2eproto);
  return file_level_enum_descriptors_messaging_2eproto[0];
}
bool LLMMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgentMessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_2eproto);
  return file_level_enum_descriptors_messaging_2eproto[1];
}
bool AgentMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ToolMessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_2eproto);
  return file_level_enum_descriptors_messaging_2eproto[2];
}
bool ToolMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WorkflowMessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_2eproto);
  return file_level_enum_descriptors_messaging_2eproto[3];
}
bool WorkflowMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UIMessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_2eproto);
  return file_level_enum_descriptors_messaging_2eproto[4];
}
bool UIMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SystemMessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_2eproto);
  return file_level_enum_descriptors_messaging_2eproto[5];
}
bool SystemMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Message::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const Message* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& expires_at(const Message* msg);
  static const ::unhinged::messaging::LLMMessage& llm_message(const Message* msg);
  static const ::unhinged::messaging::AgentMessage& agent_message(const Message* msg);
  static const ::unhinged::messaging::ToolMessage& tool_message(const Message* msg);
  static const ::unhinged::messaging::WorkflowMessage& workflow_message(const Message* msg);
  static const ::unhinged::messaging::UIMessage& ui_message(const Message* msg);
  static const ::unhinged::messaging::SystemMessage& system_message(const Message* msg);
  static const ::unhinged::messaging::MessageOptions& options(const Message* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& metadata(const Message* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Message::_Internal::created_at(const Message* msg) {
  return *msg->_impl_.created_at_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Message::_Internal::expires_at(const Message* msg) {
  return *msg->_impl_.expires_at_;
}
const ::unhinged::messaging::LLMMessage&
Message::_Internal::llm_message(const Message* msg) {
  return *msg->_impl_.payload_.llm_message_;
}
const ::unhinged::messaging::AgentMessage&
Message::_Internal::agent_message(const Message* msg) {
  return *msg->_impl_.payload_.agent_message_;
}
const ::unhinged::messaging::ToolMessage&
Message::_Internal::tool_message(const Message* msg) {
  return *msg->_impl_.payload_.tool_message_;
}
const ::unhinged::messaging::WorkflowMessage&
Message::_Internal::workflow_message(const Message* msg) {
  return *msg->_impl_.payload_.workflow_message_;
}
const ::unhinged::messaging::UIMessage&
Message::_Internal::ui_message(const Message* msg) {
  return *msg->_impl_.payload_.ui_message_;
}
const ::unhinged::messaging::SystemMessage&
Message::_Internal::system_message(const Message* msg) {
  return *msg->_impl_.payload_.system_message_;
}
const ::unhinged::messaging::MessageOptions&
Message::_Internal::options(const Message* msg) {
  return *msg->_impl_.options_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
Message::_Internal::metadata(const Message* msg) {
  return *msg->_impl_.metadata_;
}
void Message::clear_created_at() {
  if (GetArenaForAllocation() == nullptr && _impl_.created_at_ != nullptr) {
    delete _impl_.created_at_;
  }
  _impl_.created_at_ = nullptr;
}
void Message::clear_expires_at() {
  if (GetArenaForAllocation() == nullptr && _impl_.expires_at_ != nullptr) {
    delete _impl_.expires_at_;
  }
  _impl_.expires_at_ = nullptr;
}
void Message::set_allocated_llm_message(::unhinged::messaging::LLMMessage* llm_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (llm_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(llm_message);
    if (message_arena != submessage_arena) {
      llm_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, llm_message, submessage_arena);
    }
    set_has_llm_message();
    _impl_.payload_.llm_message_ = llm_message;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.Message.llm_message)
}
void Message::set_allocated_agent_message(::unhinged::messaging::AgentMessage* agent_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (agent_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(agent_message);
    if (message_arena != submessage_arena) {
      agent_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_message, submessage_arena);
    }
    set_has_agent_message();
    _impl_.payload_.agent_message_ = agent_message;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.Message.agent_message)
}
void Message::set_allocated_tool_message(::unhinged::messaging::ToolMessage* tool_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (tool_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(tool_message);
    if (message_arena != submessage_arena) {
      tool_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tool_message, submessage_arena);
    }
    set_has_tool_message();
    _impl_.payload_.tool_message_ = tool_message;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.Message.tool_message)
}
void Message::set_allocated_workflow_message(::unhinged::messaging::WorkflowMessage* workflow_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (workflow_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(workflow_message);
    if (message_arena != submessage_arena) {
      workflow_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, workflow_message, submessage_arena);
    }
    set_has_workflow_message();
    _impl_.payload_.workflow_message_ = workflow_message;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.Message.workflow_message)
}
void Message::set_allocated_ui_message(::unhinged::messaging::UIMessage* ui_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (ui_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ui_message);
    if (message_arena != submessage_arena) {
      ui_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ui_message, submessage_arena);
    }
    set_has_ui_message();
    _impl_.payload_.ui_message_ = ui_message;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.Message.ui_message)
}
void Message::set_allocated_system_message(::unhinged::messaging::SystemMessage* system_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (system_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(system_message);
    if (message_arena != submessage_arena) {
      system_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, system_message, submessage_arena);
    }
    set_has_system_message();
    _impl_.payload_.system_message_ = system_message;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.Message.system_message)
}
void Message::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && _impl_.metadata_ != nullptr) {
    delete _impl_.metadata_;
  }
  _impl_.metadata_ = nullptr;
}
Message::Message(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Message* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , decltype(_impl_.message_type_){}
    , decltype(_impl_.message_version_){}
    , decltype(_impl_.from_service_){}
    , decltype(_impl_.to_service_){}
    , decltype(_impl_.routing_key_){}
    , decltype(_impl_.correlation_id_){}
    , decltype(_impl_.reply_to_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.trace_id_){}
    , decltype(_impl_.created_at_){nullptr}
    , decltype(_impl_.expires_at_){nullptr}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.metadata_){nullptr}
    , decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message_id().empty()) {
    _this->_impl_.message_id_.Set(from._internal_message_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message_type().empty()) {
    _this->_impl_.message_type_.Set(from._internal_message_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message_version().empty()) {
    _this->_impl_.message_version_.Set(from._internal_message_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.from_service_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.from_service_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_from_service().empty()) {
    _this->_impl_.from_service_.Set(from._internal_from_service(), 
      _this->GetArenaForAllocation());
  }
  _impl_.to_service_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.to_service_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to_service().empty()) {
    _this->_impl_.to_service_.Set(from._internal_to_service(), 
      _this->GetArenaForAllocation());
  }
  _impl_.routing_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.routing_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_routing_key().empty()) {
    _this->_impl_.routing_key_.Set(from._internal_routing_key(), 
      _this->GetArenaForAllocation());
  }
  _impl_.correlation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.correlation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_correlation_id().empty()) {
    _this->_impl_.correlation_id_.Set(from._internal_correlation_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.reply_to_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_to_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply_to().empty()) {
    _this->_impl_.reply_to_.Set(from._internal_reply_to(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_session_id().empty()) {
    _this->_impl_.session_id_.Set(from._internal_session_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.trace_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trace_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trace_id().empty()) {
    _this->_impl_.trace_id_.Set(from._internal_trace_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_created_at()) {
    _this->_impl_.created_at_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.created_at_);
  }
  if (from._internal_has_expires_at()) {
    _this->_impl_.expires_at_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.expires_at_);
  }
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::unhinged::messaging::MessageOptions(*from._impl_.options_);
  }
  if (from._internal_has_metadata()) {
    _this->_impl_.metadata_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.metadata_);
  }
  clear_has_payload();
  switch (from.payload_case()) {
    case kLlmMessage: {
      _this->_internal_mutable_llm_message()->::unhinged::messaging::LLMMessage::MergeFrom(
          from._internal_llm_message());
      break;
    }
    case kAgentMessage: {
      _this->_internal_mutable_agent_message()->::unhinged::messaging::AgentMessage::MergeFrom(
          from._internal_agent_message());
      break;
    }
    case kToolMessage: {
      _this->_internal_mutable_tool_message()->::unhinged::messaging::ToolMessage::MergeFrom(
          from._internal_tool_message());
      break;
    }
    case kWorkflowMessage: {
      _this->_internal_mutable_workflow_message()->::unhinged::messaging::WorkflowMessage::MergeFrom(
          from._internal_workflow_message());
      break;
    }
    case kUiMessage: {
      _this->_internal_mutable_ui_message()->::unhinged::messaging::UIMessage::MergeFrom(
          from._internal_ui_message());
      break;
    }
    case kSystemMessage: {
      _this->_internal_mutable_system_message()->::unhinged::messaging::SystemMessage::MergeFrom(
          from._internal_system_message());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.Message)
}

inline void Message::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , decltype(_impl_.message_type_){}
    , decltype(_impl_.message_version_){}
    , decltype(_impl_.from_service_){}
    , decltype(_impl_.to_service_){}
    , decltype(_impl_.routing_key_){}
    , decltype(_impl_.correlation_id_){}
    , decltype(_impl_.reply_to_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.trace_id_){}
    , decltype(_impl_.created_at_){nullptr}
    , decltype(_impl_.expires_at_){nullptr}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.metadata_){nullptr}
    , decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.message_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.from_service_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.from_service_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.to_service_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.to_service_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.routing_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.routing_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.correlation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.correlation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reply_to_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_to_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trace_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trace_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_payload();
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.Message)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Message::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_id_.Destroy();
  _impl_.message_type_.Destroy();
  _impl_.message_version_.Destroy();
  _impl_.from_service_.Destroy();
  _impl_.to_service_.Destroy();
  _impl_.routing_key_.Destroy();
  _impl_.correlation_id_.Destroy();
  _impl_.reply_to_.Destroy();
  _impl_.user_id_.Destroy();
  _impl_.session_id_.Destroy();
  _impl_.trace_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.created_at_;
  if (this != internal_default_instance()) delete _impl_.expires_at_;
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.metadata_;
  if (has_payload()) {
    clear_payload();
  }
}

void Message::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Message::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:unhinged.messaging.Message)
  switch (payload_case()) {
    case kLlmMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.llm_message_;
      }
      break;
    }
    case kAgentMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.agent_message_;
      }
      break;
    }
    case kToolMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.tool_message_;
      }
      break;
    }
    case kWorkflowMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.workflow_message_;
      }
      break;
    }
    case kUiMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.ui_message_;
      }
      break;
    }
    case kSystemMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.system_message_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.Message)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_.ClearToEmpty();
  _impl_.message_type_.ClearToEmpty();
  _impl_.message_version_.ClearToEmpty();
  _impl_.from_service_.ClearToEmpty();
  _impl_.to_service_.ClearToEmpty();
  _impl_.routing_key_.ClearToEmpty();
  _impl_.correlation_id_.ClearToEmpty();
  _impl_.reply_to_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _impl_.session_id_.ClearToEmpty();
  _impl_.trace_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.created_at_ != nullptr) {
    delete _impl_.created_at_;
  }
  _impl_.created_at_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.expires_at_ != nullptr) {
    delete _impl_.expires_at_;
  }
  _impl_.expires_at_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.options_ != nullptr) {
    delete _impl_.options_;
  }
  _impl_.options_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.metadata_ != nullptr) {
    delete _impl_.metadata_;
  }
  _impl_.metadata_ = nullptr;
  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.Message.message_id"));
        } else
          goto handle_unusual;
        continue;
      // string message_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.Message.message_type"));
        } else
          goto handle_unusual;
        continue;
      // string message_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.Message.message_version"));
        } else
          goto handle_unusual;
        continue;
      // string from_service = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_from_service();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.Message.from_service"));
        } else
          goto handle_unusual;
        continue;
      // string to_service = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_to_service();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.Message.to_service"));
        } else
          goto handle_unusual;
        continue;
      // string routing_key = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_routing_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.Message.routing_key"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp expires_at = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_expires_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string correlation_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_correlation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.Message.correlation_id"));
        } else
          goto handle_unusual;
        continue;
      // string reply_to = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_reply_to();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.Message.reply_to"));
        } else
          goto handle_unusual;
        continue;
      // string user_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.Message.user_id"));
        } else
          goto handle_unusual;
        continue;
      // string session_id = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_session_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.Message.session_id"));
        } else
          goto handle_unusual;
        continue;
      // string trace_id = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_trace_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.Message.trace_id"));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.LLMMessage llm_message = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_llm_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.AgentMessage agent_message = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_agent_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.ToolMessage tool_message = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_tool_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.WorkflowMessage workflow_message = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_workflow_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.UIMessage ui_message = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_ui_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.SystemMessage system_message = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_system_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.MessageOptions options = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct metadata = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Message::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.Message)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_id = 1;
  if (!this->_internal_message_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_id().data(), static_cast<int>(this->_internal_message_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.Message.message_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message_id(), target);
  }

  // string message_type = 2;
  if (!this->_internal_message_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_type().data(), static_cast<int>(this->_internal_message_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.Message.message_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message_type(), target);
  }

  // string message_version = 3;
  if (!this->_internal_message_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_version().data(), static_cast<int>(this->_internal_message_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.Message.message_version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message_version(), target);
  }

  // string from_service = 4;
  if (!this->_internal_from_service().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_from_service().data(), static_cast<int>(this->_internal_from_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.Message.from_service");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_from_service(), target);
  }

  // string to_service = 5;
  if (!this->_internal_to_service().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_to_service().data(), static_cast<int>(this->_internal_to_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.Message.to_service");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_to_service(), target);
  }

  // string routing_key = 6;
  if (!this->_internal_routing_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_routing_key().data(), static_cast<int>(this->_internal_routing_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.Message.routing_key");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_routing_key(), target);
  }

  // .google.protobuf.Timestamp created_at = 7;
  if (this->_internal_has_created_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::created_at(this),
        _Internal::created_at(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp expires_at = 8;
  if (this->_internal_has_expires_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::expires_at(this),
        _Internal::expires_at(this).GetCachedSize(), target, stream);
  }

  // string correlation_id = 9;
  if (!this->_internal_correlation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_correlation_id().data(), static_cast<int>(this->_internal_correlation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.Message.correlation_id");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_correlation_id(), target);
  }

  // string reply_to = 10;
  if (!this->_internal_reply_to().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply_to().data(), static_cast<int>(this->_internal_reply_to().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.Message.reply_to");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_reply_to(), target);
  }

  // string user_id = 11;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.Message.user_id");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_user_id(), target);
  }

  // string session_id = 12;
  if (!this->_internal_session_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.Message.session_id");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_session_id(), target);
  }

  // string trace_id = 13;
  if (!this->_internal_trace_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trace_id().data(), static_cast<int>(this->_internal_trace_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.Message.trace_id");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_trace_id(), target);
  }

  // .unhinged.messaging.LLMMessage llm_message = 20;
  if (_internal_has_llm_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, _Internal::llm_message(this),
        _Internal::llm_message(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.AgentMessage agent_message = 21;
  if (_internal_has_agent_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::agent_message(this),
        _Internal::agent_message(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.ToolMessage tool_message = 22;
  if (_internal_has_tool_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(22, _Internal::tool_message(this),
        _Internal::tool_message(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.WorkflowMessage workflow_message = 23;
  if (_internal_has_workflow_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::workflow_message(this),
        _Internal::workflow_message(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.UIMessage ui_message = 24;
  if (_internal_has_ui_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(24, _Internal::ui_message(this),
        _Internal::ui_message(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.SystemMessage system_message = 25;
  if (_internal_has_system_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::system_message(this),
        _Internal::system_message(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.MessageOptions options = 30;
  if (this->_internal_has_options()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(30, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct metadata = 31;
  if (this->_internal_has_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.Message)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message_id = 1;
  if (!this->_internal_message_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_id());
  }

  // string message_type = 2;
  if (!this->_internal_message_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_type());
  }

  // string message_version = 3;
  if (!this->_internal_message_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_version());
  }

  // string from_service = 4;
  if (!this->_internal_from_service().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_from_service());
  }

  // string to_service = 5;
  if (!this->_internal_to_service().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_to_service());
  }

  // string routing_key = 6;
  if (!this->_internal_routing_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_routing_key());
  }

  // string correlation_id = 9;
  if (!this->_internal_correlation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_correlation_id());
  }

  // string reply_to = 10;
  if (!this->_internal_reply_to().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply_to());
  }

  // string user_id = 11;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string session_id = 12;
  if (!this->_internal_session_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // string trace_id = 13;
  if (!this->_internal_trace_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trace_id());
  }

  // .google.protobuf.Timestamp created_at = 7;
  if (this->_internal_has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.created_at_);
  }

  // .google.protobuf.Timestamp expires_at = 8;
  if (this->_internal_has_expires_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.expires_at_);
  }

  // .unhinged.messaging.MessageOptions options = 30;
  if (this->_internal_has_options()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.options_);
  }

  // .google.protobuf.Struct metadata = 31;
  if (this->_internal_has_metadata()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metadata_);
  }

  switch (payload_case()) {
    // .unhinged.messaging.LLMMessage llm_message = 20;
    case kLlmMessage: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.llm_message_);
      break;
    }
    // .unhinged.messaging.AgentMessage agent_message = 21;
    case kAgentMessage: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.agent_message_);
      break;
    }
    // .unhinged.messaging.ToolMessage tool_message = 22;
    case kToolMessage: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.tool_message_);
      break;
    }
    // .unhinged.messaging.WorkflowMessage workflow_message = 23;
    case kWorkflowMessage: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.workflow_message_);
      break;
    }
    // .unhinged.messaging.UIMessage ui_message = 24;
    case kUiMessage: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.ui_message_);
      break;
    }
    // .unhinged.messaging.SystemMessage system_message = 25;
    case kSystemMessage: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.system_message_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Message::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message::GetClassData() const { return &_class_data_; }


void Message::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.Message)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_id().empty()) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (!from._internal_message_type().empty()) {
    _this->_internal_set_message_type(from._internal_message_type());
  }
  if (!from._internal_message_version().empty()) {
    _this->_internal_set_message_version(from._internal_message_version());
  }
  if (!from._internal_from_service().empty()) {
    _this->_internal_set_from_service(from._internal_from_service());
  }
  if (!from._internal_to_service().empty()) {
    _this->_internal_set_to_service(from._internal_to_service());
  }
  if (!from._internal_routing_key().empty()) {
    _this->_internal_set_routing_key(from._internal_routing_key());
  }
  if (!from._internal_correlation_id().empty()) {
    _this->_internal_set_correlation_id(from._internal_correlation_id());
  }
  if (!from._internal_reply_to().empty()) {
    _this->_internal_set_reply_to(from._internal_reply_to());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (!from._internal_trace_id().empty()) {
    _this->_internal_set_trace_id(from._internal_trace_id());
  }
  if (from._internal_has_created_at()) {
    _this->_internal_mutable_created_at()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_created_at());
  }
  if (from._internal_has_expires_at()) {
    _this->_internal_mutable_expires_at()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_expires_at());
  }
  if (from._internal_has_options()) {
    _this->_internal_mutable_options()->::unhinged::messaging::MessageOptions::MergeFrom(
        from._internal_options());
  }
  if (from._internal_has_metadata()) {
    _this->_internal_mutable_metadata()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_metadata());
  }
  switch (from.payload_case()) {
    case kLlmMessage: {
      _this->_internal_mutable_llm_message()->::unhinged::messaging::LLMMessage::MergeFrom(
          from._internal_llm_message());
      break;
    }
    case kAgentMessage: {
      _this->_internal_mutable_agent_message()->::unhinged::messaging::AgentMessage::MergeFrom(
          from._internal_agent_message());
      break;
    }
    case kToolMessage: {
      _this->_internal_mutable_tool_message()->::unhinged::messaging::ToolMessage::MergeFrom(
          from._internal_tool_message());
      break;
    }
    case kWorkflowMessage: {
      _this->_internal_mutable_workflow_message()->::unhinged::messaging::WorkflowMessage::MergeFrom(
          from._internal_workflow_message());
      break;
    }
    case kUiMessage: {
      _this->_internal_mutable_ui_message()->::unhinged::messaging::UIMessage::MergeFrom(
          from._internal_ui_message());
      break;
    }
    case kSystemMessage: {
      _this->_internal_mutable_system_message()->::unhinged::messaging::SystemMessage::MergeFrom(
          from._internal_system_message());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_id_, lhs_arena,
      &other->_impl_.message_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_type_, lhs_arena,
      &other->_impl_.message_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_version_, lhs_arena,
      &other->_impl_.message_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.from_service_, lhs_arena,
      &other->_impl_.from_service_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.to_service_, lhs_arena,
      &other->_impl_.to_service_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.routing_key_, lhs_arena,
      &other->_impl_.routing_key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.correlation_id_, lhs_arena,
      &other->_impl_.correlation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_to_, lhs_arena,
      &other->_impl_.reply_to_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.session_id_, lhs_arena,
      &other->_impl_.session_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trace_id_, lhs_arena,
      &other->_impl_.trace_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message, _impl_.metadata_)
      + sizeof(Message::_impl_.metadata_)
      - PROTOBUF_FIELD_OFFSET(Message, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[0]);
}

// ===================================================================

class MessageOptions::_Internal {
 public:
};

MessageOptions::MessageOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.MessageOptions)
}
MessageOptions::MessageOptions(const MessageOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MessageOptions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.delivery_mode_){}
    , decltype(_impl_.retry_attempts_){}
    , decltype(_impl_.retry_delay_ms_){}
    , decltype(_impl_.priority_){}
    , decltype(_impl_.preserve_order_){}
    , decltype(_impl_.expect_reply_){}
    , decltype(_impl_.reply_timeout_ms_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.delivery_mode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.delivery_mode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delivery_mode().empty()) {
    _this->_impl_.delivery_mode_.Set(from._internal_delivery_mode(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.retry_attempts_, &from._impl_.retry_attempts_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.reply_timeout_ms_) -
    reinterpret_cast<char*>(&_impl_.retry_attempts_)) + sizeof(_impl_.reply_timeout_ms_));
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.MessageOptions)
}

inline void MessageOptions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.delivery_mode_){}
    , decltype(_impl_.retry_attempts_){0}
    , decltype(_impl_.retry_delay_ms_){0}
    , decltype(_impl_.priority_){0}
    , decltype(_impl_.preserve_order_){false}
    , decltype(_impl_.expect_reply_){false}
    , decltype(_impl_.reply_timeout_ms_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.delivery_mode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.delivery_mode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MessageOptions::~MessageOptions() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.MessageOptions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delivery_mode_.Destroy();
}

void MessageOptions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.MessageOptions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delivery_mode_.ClearToEmpty();
  ::memset(&_impl_.retry_attempts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.reply_timeout_ms_) -
      reinterpret_cast<char*>(&_impl_.retry_attempts_)) + sizeof(_impl_.reply_timeout_ms_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageOptions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delivery_mode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delivery_mode();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.MessageOptions.delivery_mode"));
        } else
          goto handle_unusual;
        continue;
      // int32 retry_attempts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.retry_attempts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 retry_delay_ms = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.retry_delay_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 priority = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool preserve_order = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.preserve_order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool expect_reply = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.expect_reply_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 reply_timeout_ms = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.reply_timeout_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MessageOptions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.MessageOptions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delivery_mode = 1;
  if (!this->_internal_delivery_mode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delivery_mode().data(), static_cast<int>(this->_internal_delivery_mode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.MessageOptions.delivery_mode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_delivery_mode(), target);
  }

  // int32 retry_attempts = 2;
  if (this->_internal_retry_attempts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_retry_attempts(), target);
  }

  // int32 retry_delay_ms = 3;
  if (this->_internal_retry_delay_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_retry_delay_ms(), target);
  }

  // int32 priority = 4;
  if (this->_internal_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_priority(), target);
  }

  // bool preserve_order = 5;
  if (this->_internal_preserve_order() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_preserve_order(), target);
  }

  // bool expect_reply = 6;
  if (this->_internal_expect_reply() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_expect_reply(), target);
  }

  // int32 reply_timeout_ms = 7;
  if (this->_internal_reply_timeout_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_reply_timeout_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.MessageOptions)
  return target;
}

size_t MessageOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.MessageOptions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delivery_mode = 1;
  if (!this->_internal_delivery_mode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delivery_mode());
  }

  // int32 retry_attempts = 2;
  if (this->_internal_retry_attempts() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_retry_attempts());
  }

  // int32 retry_delay_ms = 3;
  if (this->_internal_retry_delay_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_retry_delay_ms());
  }

  // int32 priority = 4;
  if (this->_internal_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_priority());
  }

  // bool preserve_order = 5;
  if (this->_internal_preserve_order() != 0) {
    total_size += 1 + 1;
  }

  // bool expect_reply = 6;
  if (this->_internal_expect_reply() != 0) {
    total_size += 1 + 1;
  }

  // int32 reply_timeout_ms = 7;
  if (this->_internal_reply_timeout_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reply_timeout_ms());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageOptions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageOptions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageOptions::GetClassData() const { return &_class_data_; }


void MessageOptions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageOptions*>(&to_msg);
  auto& from = static_cast<const MessageOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.MessageOptions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delivery_mode().empty()) {
    _this->_internal_set_delivery_mode(from._internal_delivery_mode());
  }
  if (from._internal_retry_attempts() != 0) {
    _this->_internal_set_retry_attempts(from._internal_retry_attempts());
  }
  if (from._internal_retry_delay_ms() != 0) {
    _this->_internal_set_retry_delay_ms(from._internal_retry_delay_ms());
  }
  if (from._internal_priority() != 0) {
    _this->_internal_set_priority(from._internal_priority());
  }
  if (from._internal_preserve_order() != 0) {
    _this->_internal_set_preserve_order(from._internal_preserve_order());
  }
  if (from._internal_expect_reply() != 0) {
    _this->_internal_set_expect_reply(from._internal_expect_reply());
  }
  if (from._internal_reply_timeout_ms() != 0) {
    _this->_internal_set_reply_timeout_ms(from._internal_reply_timeout_ms());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageOptions::CopyFrom(const MessageOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.MessageOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageOptions::IsInitialized() const {
  return true;
}

void MessageOptions::InternalSwap(MessageOptions* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.delivery_mode_, lhs_arena,
      &other->_impl_.delivery_mode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageOptions, _impl_.reply_timeout_ms_)
      + sizeof(MessageOptions::_impl_.reply_timeout_ms_)
      - PROTOBUF_FIELD_OFFSET(MessageOptions, _impl_.retry_attempts_)>(
          reinterpret_cast<char*>(&_impl_.retry_attempts_),
          reinterpret_cast<char*>(&other->_impl_.retry_attempts_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[1]);
}

// ===================================================================

class LLMMessage::_Internal {
 public:
  static const ::unhinged::messaging::LLMPromptRequest& prompt_request(const LLMMessage* msg);
  static const ::unhinged::messaging::LLMPromptResponse& prompt_response(const LLMMessage* msg);
  static const ::unhinged::messaging::LLMStreamChunk& stream_chunk(const LLMMessage* msg);
  static const ::unhinged::messaging::LLMError& llm_error(const LLMMessage* msg);
  static const ::unhinged::messaging::LLMCancel& cancel_request(const LLMMessage* msg);
};

const ::unhinged::messaging::LLMPromptRequest&
LLMMessage::_Internal::prompt_request(const LLMMessage* msg) {
  return *msg->_impl_.message_data_.prompt_request_;
}
const ::unhinged::messaging::LLMPromptResponse&
LLMMessage::_Internal::prompt_response(const LLMMessage* msg) {
  return *msg->_impl_.message_data_.prompt_response_;
}
const ::unhinged::messaging::LLMStreamChunk&
LLMMessage::_Internal::stream_chunk(const LLMMessage* msg) {
  return *msg->_impl_.message_data_.stream_chunk_;
}
const ::unhinged::messaging::LLMError&
LLMMessage::_Internal::llm_error(const LLMMessage* msg) {
  return *msg->_impl_.message_data_.llm_error_;
}
const ::unhinged::messaging::LLMCancel&
LLMMessage::_Internal::cancel_request(const LLMMessage* msg) {
  return *msg->_impl_.message_data_.cancel_request_;
}
void LLMMessage::set_allocated_prompt_request(::unhinged::messaging::LLMPromptRequest* prompt_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (prompt_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(prompt_request);
    if (message_arena != submessage_arena) {
      prompt_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, prompt_request, submessage_arena);
    }
    set_has_prompt_request();
    _impl_.message_data_.prompt_request_ = prompt_request;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.LLMMessage.prompt_request)
}
void LLMMessage::set_allocated_prompt_response(::unhinged::messaging::LLMPromptResponse* prompt_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (prompt_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(prompt_response);
    if (message_arena != submessage_arena) {
      prompt_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, prompt_response, submessage_arena);
    }
    set_has_prompt_response();
    _impl_.message_data_.prompt_response_ = prompt_response;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.LLMMessage.prompt_response)
}
void LLMMessage::set_allocated_stream_chunk(::unhinged::messaging::LLMStreamChunk* stream_chunk) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (stream_chunk) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(stream_chunk);
    if (message_arena != submessage_arena) {
      stream_chunk = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stream_chunk, submessage_arena);
    }
    set_has_stream_chunk();
    _impl_.message_data_.stream_chunk_ = stream_chunk;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.LLMMessage.stream_chunk)
}
void LLMMessage::set_allocated_llm_error(::unhinged::messaging::LLMError* llm_error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (llm_error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(llm_error);
    if (message_arena != submessage_arena) {
      llm_error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, llm_error, submessage_arena);
    }
    set_has_llm_error();
    _impl_.message_data_.llm_error_ = llm_error;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.LLMMessage.llm_error)
}
void LLMMessage::set_allocated_cancel_request(::unhinged::messaging::LLMCancel* cancel_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (cancel_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cancel_request);
    if (message_arena != submessage_arena) {
      cancel_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cancel_request, submessage_arena);
    }
    set_has_cancel_request();
    _impl_.message_data_.cancel_request_ = cancel_request;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.LLMMessage.cancel_request)
}
LLMMessage::LLMMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.LLMMessage)
}
LLMMessage::LLMMessage(const LLMMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LLMMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.interaction_id_){}
    , decltype(_impl_.message_type_){}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.interaction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_interaction_id().empty()) {
    _this->_impl_.interaction_id_.Set(from._internal_interaction_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.message_type_ = from._impl_.message_type_;
  clear_has_message_data();
  switch (from.message_data_case()) {
    case kPromptRequest: {
      _this->_internal_mutable_prompt_request()->::unhinged::messaging::LLMPromptRequest::MergeFrom(
          from._internal_prompt_request());
      break;
    }
    case kPromptResponse: {
      _this->_internal_mutable_prompt_response()->::unhinged::messaging::LLMPromptResponse::MergeFrom(
          from._internal_prompt_response());
      break;
    }
    case kStreamChunk: {
      _this->_internal_mutable_stream_chunk()->::unhinged::messaging::LLMStreamChunk::MergeFrom(
          from._internal_stream_chunk());
      break;
    }
    case kLlmError: {
      _this->_internal_mutable_llm_error()->::unhinged::messaging::LLMError::MergeFrom(
          from._internal_llm_error());
      break;
    }
    case kCancelRequest: {
      _this->_internal_mutable_cancel_request()->::unhinged::messaging::LLMCancel::MergeFrom(
          from._internal_cancel_request());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.LLMMessage)
}

inline void LLMMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.interaction_id_){}
    , decltype(_impl_.message_type_){0}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.interaction_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_message_data();
}

LLMMessage::~LLMMessage() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.LLMMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LLMMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.interaction_id_.Destroy();
  if (has_message_data()) {
    clear_message_data();
  }
}

void LLMMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LLMMessage::clear_message_data() {
// @@protoc_insertion_point(one_of_clear_start:unhinged.messaging.LLMMessage)
  switch (message_data_case()) {
    case kPromptRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.prompt_request_;
      }
      break;
    }
    case kPromptResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.prompt_response_;
      }
      break;
    }
    case kStreamChunk: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.stream_chunk_;
      }
      break;
    }
    case kLlmError: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.llm_error_;
      }
      break;
    }
    case kCancelRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.cancel_request_;
      }
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_DATA_NOT_SET;
}


void LLMMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.LLMMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interaction_id_.ClearToEmpty();
  _impl_.message_type_ = 0;
  clear_message_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LLMMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string interaction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_interaction_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMMessage.interaction_id"));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.LLMMessageType message_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_message_type(static_cast<::unhinged::messaging::LLMMessageType>(val));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.LLMPromptRequest prompt_request = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_prompt_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.LLMPromptResponse prompt_response = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_prompt_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.LLMStreamChunk stream_chunk = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_stream_chunk(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.LLMError llm_error = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_llm_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.LLMCancel cancel_request = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_cancel_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LLMMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.LLMMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string interaction_id = 1;
  if (!this->_internal_interaction_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_interaction_id().data(), static_cast<int>(this->_internal_interaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMMessage.interaction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_interaction_id(), target);
  }

  // .unhinged.messaging.LLMMessageType message_type = 2;
  if (this->_internal_message_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_message_type(), target);
  }

  // .unhinged.messaging.LLMPromptRequest prompt_request = 10;
  if (_internal_has_prompt_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::prompt_request(this),
        _Internal::prompt_request(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.LLMPromptResponse prompt_response = 11;
  if (_internal_has_prompt_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::prompt_response(this),
        _Internal::prompt_response(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.LLMStreamChunk stream_chunk = 12;
  if (_internal_has_stream_chunk()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::stream_chunk(this),
        _Internal::stream_chunk(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.LLMError llm_error = 13;
  if (_internal_has_llm_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::llm_error(this),
        _Internal::llm_error(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.LLMCancel cancel_request = 14;
  if (_internal_has_cancel_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::cancel_request(this),
        _Internal::cancel_request(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.LLMMessage)
  return target;
}

size_t LLMMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.LLMMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string interaction_id = 1;
  if (!this->_internal_interaction_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_interaction_id());
  }

  // .unhinged.messaging.LLMMessageType message_type = 2;
  if (this->_internal_message_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_message_type());
  }

  switch (message_data_case()) {
    // .unhinged.messaging.LLMPromptRequest prompt_request = 10;
    case kPromptRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.prompt_request_);
      break;
    }
    // .unhinged.messaging.LLMPromptResponse prompt_response = 11;
    case kPromptResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.prompt_response_);
      break;
    }
    // .unhinged.messaging.LLMStreamChunk stream_chunk = 12;
    case kStreamChunk: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.stream_chunk_);
      break;
    }
    // .unhinged.messaging.LLMError llm_error = 13;
    case kLlmError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.llm_error_);
      break;
    }
    // .unhinged.messaging.LLMCancel cancel_request = 14;
    case kCancelRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.cancel_request_);
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LLMMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LLMMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LLMMessage::GetClassData() const { return &_class_data_; }


void LLMMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LLMMessage*>(&to_msg);
  auto& from = static_cast<const LLMMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.LLMMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_interaction_id().empty()) {
    _this->_internal_set_interaction_id(from._internal_interaction_id());
  }
  if (from._internal_message_type() != 0) {
    _this->_internal_set_message_type(from._internal_message_type());
  }
  switch (from.message_data_case()) {
    case kPromptRequest: {
      _this->_internal_mutable_prompt_request()->::unhinged::messaging::LLMPromptRequest::MergeFrom(
          from._internal_prompt_request());
      break;
    }
    case kPromptResponse: {
      _this->_internal_mutable_prompt_response()->::unhinged::messaging::LLMPromptResponse::MergeFrom(
          from._internal_prompt_response());
      break;
    }
    case kStreamChunk: {
      _this->_internal_mutable_stream_chunk()->::unhinged::messaging::LLMStreamChunk::MergeFrom(
          from._internal_stream_chunk());
      break;
    }
    case kLlmError: {
      _this->_internal_mutable_llm_error()->::unhinged::messaging::LLMError::MergeFrom(
          from._internal_llm_error());
      break;
    }
    case kCancelRequest: {
      _this->_internal_mutable_cancel_request()->::unhinged::messaging::LLMCancel::MergeFrom(
          from._internal_cancel_request());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LLMMessage::CopyFrom(const LLMMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.LLMMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LLMMessage::IsInitialized() const {
  return true;
}

void LLMMessage::InternalSwap(LLMMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.interaction_id_, lhs_arena,
      &other->_impl_.interaction_id_, rhs_arena
  );
  swap(_impl_.message_type_, other->_impl_.message_type_);
  swap(_impl_.message_data_, other->_impl_.message_data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata LLMMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[2]);
}

// ===================================================================

class LLMPromptRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& prompt_metadata(const LLMPromptRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
LLMPromptRequest::_Internal::prompt_metadata(const LLMPromptRequest* msg) {
  return *msg->_impl_.prompt_metadata_;
}
void LLMPromptRequest::clear_prompt_metadata() {
  if (GetArenaForAllocation() == nullptr && _impl_.prompt_metadata_ != nullptr) {
    delete _impl_.prompt_metadata_;
  }
  _impl_.prompt_metadata_ = nullptr;
}
LLMPromptRequest::LLMPromptRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.LLMPromptRequest)
}
LLMPromptRequest::LLMPromptRequest(const LLMPromptRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LLMPromptRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.context_documents_){from._impl_.context_documents_}
    , decltype(_impl_.stop_sequences_){from._impl_.stop_sequences_}
    , decltype(_impl_.tools_available_){from._impl_.tools_available_}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.provider_){}
    , decltype(_impl_.system_prompt_){}
    , decltype(_impl_.user_prompt_){}
    , decltype(_impl_.stream_callback_url_){}
    , decltype(_impl_.prompt_metadata_){nullptr}
    , decltype(_impl_.max_tokens_){}
    , decltype(_impl_.temperature_){}
    , decltype(_impl_.top_p_){}
    , decltype(_impl_.stream_response_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.provider_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.provider_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_provider().empty()) {
    _this->_impl_.provider_.Set(from._internal_provider(), 
      _this->GetArenaForAllocation());
  }
  _impl_.system_prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.system_prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_system_prompt().empty()) {
    _this->_impl_.system_prompt_.Set(from._internal_system_prompt(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_prompt().empty()) {
    _this->_impl_.user_prompt_.Set(from._internal_user_prompt(), 
      _this->GetArenaForAllocation());
  }
  _impl_.stream_callback_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stream_callback_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stream_callback_url().empty()) {
    _this->_impl_.stream_callback_url_.Set(from._internal_stream_callback_url(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_prompt_metadata()) {
    _this->_impl_.prompt_metadata_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.prompt_metadata_);
  }
  ::memcpy(&_impl_.max_tokens_, &from._impl_.max_tokens_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.stream_response_) -
    reinterpret_cast<char*>(&_impl_.max_tokens_)) + sizeof(_impl_.stream_response_));
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.LLMPromptRequest)
}

inline void LLMPromptRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.context_documents_){arena}
    , decltype(_impl_.stop_sequences_){arena}
    , decltype(_impl_.tools_available_){arena}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.provider_){}
    , decltype(_impl_.system_prompt_){}
    , decltype(_impl_.user_prompt_){}
    , decltype(_impl_.stream_callback_url_){}
    , decltype(_impl_.prompt_metadata_){nullptr}
    , decltype(_impl_.max_tokens_){0}
    , decltype(_impl_.temperature_){0}
    , decltype(_impl_.top_p_){0}
    , decltype(_impl_.stream_response_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.provider_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.provider_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.system_prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.system_prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.stream_callback_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.stream_callback_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LLMPromptRequest::~LLMPromptRequest() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.LLMPromptRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LLMPromptRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.context_documents_.~RepeatedPtrField();
  _impl_.stop_sequences_.~RepeatedPtrField();
  _impl_.tools_available_.~RepeatedPtrField();
  _impl_.model_name_.Destroy();
  _impl_.provider_.Destroy();
  _impl_.system_prompt_.Destroy();
  _impl_.user_prompt_.Destroy();
  _impl_.stream_callback_url_.Destroy();
  if (this != internal_default_instance()) delete _impl_.prompt_metadata_;
}

void LLMPromptRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LLMPromptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.LLMPromptRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.context_documents_.Clear();
  _impl_.stop_sequences_.Clear();
  _impl_.tools_available_.Clear();
  _impl_.model_name_.ClearToEmpty();
  _impl_.provider_.ClearToEmpty();
  _impl_.system_prompt_.ClearToEmpty();
  _impl_.user_prompt_.ClearToEmpty();
  _impl_.stream_callback_url_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.prompt_metadata_ != nullptr) {
    delete _impl_.prompt_metadata_;
  }
  _impl_.prompt_metadata_ = nullptr;
  ::memset(&_impl_.max_tokens_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.stream_response_) -
      reinterpret_cast<char*>(&_impl_.max_tokens_)) + sizeof(_impl_.stream_response_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LLMPromptRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string model_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMPromptRequest.model_name"));
        } else
          goto handle_unusual;
        continue;
      // string provider = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_provider();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMPromptRequest.provider"));
        } else
          goto handle_unusual;
        continue;
      // string system_prompt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_system_prompt();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMPromptRequest.system_prompt"));
        } else
          goto handle_unusual;
        continue;
      // string user_prompt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_user_prompt();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMPromptRequest.user_prompt"));
        } else
          goto handle_unusual;
        continue;
      // repeated .unhinged.messaging.ContextDocument context_documents = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_context_documents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 max_tokens = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.max_tokens_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float temperature = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 61)) {
          _impl_.temperature_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float top_p = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 69)) {
          _impl_.top_p_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated string stop_sequences = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_stop_sequences();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMPromptRequest.stop_sequences"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool stream_response = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.stream_response_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string stream_callback_url = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_stream_callback_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMPromptRequest.stream_callback_url"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct prompt_metadata = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_prompt_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string tools_available = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tools_available();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMPromptRequest.tools_available"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LLMPromptRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.LLMPromptRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMPromptRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  // string provider = 2;
  if (!this->_internal_provider().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_provider().data(), static_cast<int>(this->_internal_provider().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMPromptRequest.provider");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_provider(), target);
  }

  // string system_prompt = 3;
  if (!this->_internal_system_prompt().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_system_prompt().data(), static_cast<int>(this->_internal_system_prompt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMPromptRequest.system_prompt");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_system_prompt(), target);
  }

  // string user_prompt = 4;
  if (!this->_internal_user_prompt().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_prompt().data(), static_cast<int>(this->_internal_user_prompt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMPromptRequest.user_prompt");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_user_prompt(), target);
  }

  // repeated .unhinged.messaging.ContextDocument context_documents = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_context_documents_size()); i < n; i++) {
    const auto& repfield = this->_internal_context_documents(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 max_tokens = 6;
  if (this->_internal_max_tokens() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_max_tokens(), target);
  }

  // float temperature = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_temperature = this->_internal_temperature();
  uint32_t raw_temperature;
  memcpy(&raw_temperature, &tmp_temperature, sizeof(tmp_temperature));
  if (raw_temperature != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(7, this->_internal_temperature(), target);
  }

  // float top_p = 8;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_p = this->_internal_top_p();
  uint32_t raw_top_p;
  memcpy(&raw_top_p, &tmp_top_p, sizeof(tmp_top_p));
  if (raw_top_p != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(8, this->_internal_top_p(), target);
  }

  // repeated string stop_sequences = 9;
  for (int i = 0, n = this->_internal_stop_sequences_size(); i < n; i++) {
    const auto& s = this->_internal_stop_sequences(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMPromptRequest.stop_sequences");
    target = stream->WriteString(9, s, target);
  }

  // bool stream_response = 10;
  if (this->_internal_stream_response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_stream_response(), target);
  }

  // string stream_callback_url = 11;
  if (!this->_internal_stream_callback_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stream_callback_url().data(), static_cast<int>(this->_internal_stream_callback_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMPromptRequest.stream_callback_url");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_stream_callback_url(), target);
  }

  // .google.protobuf.Struct prompt_metadata = 12;
  if (this->_internal_has_prompt_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::prompt_metadata(this),
        _Internal::prompt_metadata(this).GetCachedSize(), target, stream);
  }

  // repeated string tools_available = 13;
  for (int i = 0, n = this->_internal_tools_available_size(); i < n; i++) {
    const auto& s = this->_internal_tools_available(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMPromptRequest.tools_available");
    target = stream->WriteString(13, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.LLMPromptRequest)
  return target;
}

size_t LLMPromptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.LLMPromptRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .unhinged.messaging.ContextDocument context_documents = 5;
  total_size += 1UL * this->_internal_context_documents_size();
  for (const auto& msg : this->_impl_.context_documents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string stop_sequences = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.stop_sequences_.size());
  for (int i = 0, n = _impl_.stop_sequences_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.stop_sequences_.Get(i));
  }

  // repeated string tools_available = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.tools_available_.size());
  for (int i = 0, n = _impl_.tools_available_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.tools_available_.Get(i));
  }

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string provider = 2;
  if (!this->_internal_provider().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_provider());
  }

  // string system_prompt = 3;
  if (!this->_internal_system_prompt().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_system_prompt());
  }

  // string user_prompt = 4;
  if (!this->_internal_user_prompt().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_prompt());
  }

  // string stream_callback_url = 11;
  if (!this->_internal_stream_callback_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stream_callback_url());
  }

  // .google.protobuf.Struct prompt_metadata = 12;
  if (this->_internal_has_prompt_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.prompt_metadata_);
  }

  // int32 max_tokens = 6;
  if (this->_internal_max_tokens() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_max_tokens());
  }

  // float temperature = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_temperature = this->_internal_temperature();
  uint32_t raw_temperature;
  memcpy(&raw_temperature, &tmp_temperature, sizeof(tmp_temperature));
  if (raw_temperature != 0) {
    total_size += 1 + 4;
  }

  // float top_p = 8;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_p = this->_internal_top_p();
  uint32_t raw_top_p;
  memcpy(&raw_top_p, &tmp_top_p, sizeof(tmp_top_p));
  if (raw_top_p != 0) {
    total_size += 1 + 4;
  }

  // bool stream_response = 10;
  if (this->_internal_stream_response() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LLMPromptRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LLMPromptRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LLMPromptRequest::GetClassData() const { return &_class_data_; }


void LLMPromptRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LLMPromptRequest*>(&to_msg);
  auto& from = static_cast<const LLMPromptRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.LLMPromptRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.context_documents_.MergeFrom(from._impl_.context_documents_);
  _this->_impl_.stop_sequences_.MergeFrom(from._impl_.stop_sequences_);
  _this->_impl_.tools_available_.MergeFrom(from._impl_.tools_available_);
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_provider().empty()) {
    _this->_internal_set_provider(from._internal_provider());
  }
  if (!from._internal_system_prompt().empty()) {
    _this->_internal_set_system_prompt(from._internal_system_prompt());
  }
  if (!from._internal_user_prompt().empty()) {
    _this->_internal_set_user_prompt(from._internal_user_prompt());
  }
  if (!from._internal_stream_callback_url().empty()) {
    _this->_internal_set_stream_callback_url(from._internal_stream_callback_url());
  }
  if (from._internal_has_prompt_metadata()) {
    _this->_internal_mutable_prompt_metadata()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_prompt_metadata());
  }
  if (from._internal_max_tokens() != 0) {
    _this->_internal_set_max_tokens(from._internal_max_tokens());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_temperature = from._internal_temperature();
  uint32_t raw_temperature;
  memcpy(&raw_temperature, &tmp_temperature, sizeof(tmp_temperature));
  if (raw_temperature != 0) {
    _this->_internal_set_temperature(from._internal_temperature());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_p = from._internal_top_p();
  uint32_t raw_top_p;
  memcpy(&raw_top_p, &tmp_top_p, sizeof(tmp_top_p));
  if (raw_top_p != 0) {
    _this->_internal_set_top_p(from._internal_top_p());
  }
  if (from._internal_stream_response() != 0) {
    _this->_internal_set_stream_response(from._internal_stream_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LLMPromptRequest::CopyFrom(const LLMPromptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.LLMPromptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LLMPromptRequest::IsInitialized() const {
  return true;
}

void LLMPromptRequest::InternalSwap(LLMPromptRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.context_documents_.InternalSwap(&other->_impl_.context_documents_);
  _impl_.stop_sequences_.InternalSwap(&other->_impl_.stop_sequences_);
  _impl_.tools_available_.InternalSwap(&other->_impl_.tools_available_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.provider_, lhs_arena,
      &other->_impl_.provider_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.system_prompt_, lhs_arena,
      &other->_impl_.system_prompt_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_prompt_, lhs_arena,
      &other->_impl_.user_prompt_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.stream_callback_url_, lhs_arena,
      &other->_impl_.stream_callback_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LLMPromptRequest, _impl_.stream_response_)
      + sizeof(LLMPromptRequest::_impl_.stream_response_)
      - PROTOBUF_FIELD_OFFSET(LLMPromptRequest, _impl_.prompt_metadata_)>(
          reinterpret_cast<char*>(&_impl_.prompt_metadata_),
          reinterpret_cast<char*>(&other->_impl_.prompt_metadata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LLMPromptRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[3]);
}

// ===================================================================

class ContextDocument::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& metadata(const ContextDocument* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
ContextDocument::_Internal::metadata(const ContextDocument* msg) {
  return *msg->_impl_.metadata_;
}
void ContextDocument::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && _impl_.metadata_ != nullptr) {
    delete _impl_.metadata_;
  }
  _impl_.metadata_ = nullptr;
}
ContextDocument::ContextDocument(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ContextDocument)
}
ContextDocument::ContextDocument(const ContextDocument& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ContextDocument* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.document_id_){}
    , decltype(_impl_.document_type_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.metadata_){nullptr}
    , decltype(_impl_.relevance_score_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.document_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.document_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_document_id().empty()) {
    _this->_impl_.document_id_.Set(from._internal_document_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.document_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.document_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_document_type().empty()) {
    _this->_impl_.document_type_.Set(from._internal_document_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metadata()) {
    _this->_impl_.metadata_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.metadata_);
  }
  _this->_impl_.relevance_score_ = from._impl_.relevance_score_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ContextDocument)
}

inline void ContextDocument::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.document_id_){}
    , decltype(_impl_.document_type_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.metadata_){nullptr}
    , decltype(_impl_.relevance_score_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.document_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.document_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.document_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.document_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ContextDocument::~ContextDocument() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ContextDocument)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ContextDocument::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.document_id_.Destroy();
  _impl_.document_type_.Destroy();
  _impl_.content_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metadata_;
}

void ContextDocument::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ContextDocument::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ContextDocument)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.document_id_.ClearToEmpty();
  _impl_.document_type_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metadata_ != nullptr) {
    delete _impl_.metadata_;
  }
  _impl_.metadata_ = nullptr;
  _impl_.relevance_score_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ContextDocument::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string document_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_document_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ContextDocument.document_id"));
        } else
          goto handle_unusual;
        continue;
      // string document_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_document_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ContextDocument.document_type"));
        } else
          goto handle_unusual;
        continue;
      // string content = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ContextDocument.content"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float relevance_score = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _impl_.relevance_score_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ContextDocument::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ContextDocument)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string document_id = 1;
  if (!this->_internal_document_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_document_id().data(), static_cast<int>(this->_internal_document_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ContextDocument.document_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_document_id(), target);
  }

  // string document_type = 2;
  if (!this->_internal_document_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_document_type().data(), static_cast<int>(this->_internal_document_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ContextDocument.document_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_document_type(), target);
  }

  // string content = 3;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ContextDocument.content");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_content(), target);
  }

  // .google.protobuf.Struct metadata = 4;
  if (this->_internal_has_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  // float relevance_score = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_relevance_score = this->_internal_relevance_score();
  uint32_t raw_relevance_score;
  memcpy(&raw_relevance_score, &tmp_relevance_score, sizeof(tmp_relevance_score));
  if (raw_relevance_score != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_relevance_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ContextDocument)
  return target;
}

size_t ContextDocument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ContextDocument)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string document_id = 1;
  if (!this->_internal_document_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_document_id());
  }

  // string document_type = 2;
  if (!this->_internal_document_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_document_type());
  }

  // string content = 3;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // .google.protobuf.Struct metadata = 4;
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metadata_);
  }

  // float relevance_score = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_relevance_score = this->_internal_relevance_score();
  uint32_t raw_relevance_score;
  memcpy(&raw_relevance_score, &tmp_relevance_score, sizeof(tmp_relevance_score));
  if (raw_relevance_score != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ContextDocument::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ContextDocument::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ContextDocument::GetClassData() const { return &_class_data_; }


void ContextDocument::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ContextDocument*>(&to_msg);
  auto& from = static_cast<const ContextDocument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ContextDocument)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_document_id().empty()) {
    _this->_internal_set_document_id(from._internal_document_id());
  }
  if (!from._internal_document_type().empty()) {
    _this->_internal_set_document_type(from._internal_document_type());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_has_metadata()) {
    _this->_internal_mutable_metadata()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_metadata());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_relevance_score = from._internal_relevance_score();
  uint32_t raw_relevance_score;
  memcpy(&raw_relevance_score, &tmp_relevance_score, sizeof(tmp_relevance_score));
  if (raw_relevance_score != 0) {
    _this->_internal_set_relevance_score(from._internal_relevance_score());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ContextDocument::CopyFrom(const ContextDocument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ContextDocument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContextDocument::IsInitialized() const {
  return true;
}

void ContextDocument::InternalSwap(ContextDocument* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.document_id_, lhs_arena,
      &other->_impl_.document_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.document_type_, lhs_arena,
      &other->_impl_.document_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ContextDocument, _impl_.relevance_score_)
      + sizeof(ContextDocument::_impl_.relevance_score_)
      - PROTOBUF_FIELD_OFFSET(ContextDocument, _impl_.metadata_)>(
          reinterpret_cast<char*>(&_impl_.metadata_),
          reinterpret_cast<char*>(&other->_impl_.metadata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ContextDocument::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[4]);
}

// ===================================================================

class LLMPromptResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& response_metadata(const LLMPromptResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
LLMPromptResponse::_Internal::response_metadata(const LLMPromptResponse* msg) {
  return *msg->_impl_.response_metadata_;
}
void LLMPromptResponse::clear_response_metadata() {
  if (GetArenaForAllocation() == nullptr && _impl_.response_metadata_ != nullptr) {
    delete _impl_.response_metadata_;
  }
  _impl_.response_metadata_ = nullptr;
}
LLMPromptResponse::LLMPromptResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.LLMPromptResponse)
}
LLMPromptResponse::LLMPromptResponse(const LLMPromptResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LLMPromptResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tool_calls_){from._impl_.tool_calls_}
    , decltype(_impl_.response_text_){}
    , decltype(_impl_.finish_reason_){}
    , decltype(_impl_.response_metadata_){nullptr}
    , decltype(_impl_.prompt_tokens_){}
    , decltype(_impl_.completion_tokens_){}
    , decltype(_impl_.total_tokens_){}
    , decltype(_impl_.response_time_ms_){}
    , decltype(_impl_.tokens_per_second_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.response_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_response_text().empty()) {
    _this->_impl_.response_text_.Set(from._internal_response_text(), 
      _this->GetArenaForAllocation());
  }
  _impl_.finish_reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.finish_reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_finish_reason().empty()) {
    _this->_impl_.finish_reason_.Set(from._internal_finish_reason(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_response_metadata()) {
    _this->_impl_.response_metadata_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.response_metadata_);
  }
  ::memcpy(&_impl_.prompt_tokens_, &from._impl_.prompt_tokens_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.tokens_per_second_) -
    reinterpret_cast<char*>(&_impl_.prompt_tokens_)) + sizeof(_impl_.tokens_per_second_));
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.LLMPromptResponse)
}

inline void LLMPromptResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tool_calls_){arena}
    , decltype(_impl_.response_text_){}
    , decltype(_impl_.finish_reason_){}
    , decltype(_impl_.response_metadata_){nullptr}
    , decltype(_impl_.prompt_tokens_){0}
    , decltype(_impl_.completion_tokens_){0}
    , decltype(_impl_.total_tokens_){0}
    , decltype(_impl_.response_time_ms_){0}
    , decltype(_impl_.tokens_per_second_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.response_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.finish_reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.finish_reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LLMPromptResponse::~LLMPromptResponse() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.LLMPromptResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LLMPromptResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tool_calls_.~RepeatedPtrField();
  _impl_.response_text_.Destroy();
  _impl_.finish_reason_.Destroy();
  if (this != internal_default_instance()) delete _impl_.response_metadata_;
}

void LLMPromptResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LLMPromptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.LLMPromptResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tool_calls_.Clear();
  _impl_.response_text_.ClearToEmpty();
  _impl_.finish_reason_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.response_metadata_ != nullptr) {
    delete _impl_.response_metadata_;
  }
  _impl_.response_metadata_ = nullptr;
  ::memset(&_impl_.prompt_tokens_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.tokens_per_second_) -
      reinterpret_cast<char*>(&_impl_.prompt_tokens_)) + sizeof(_impl_.tokens_per_second_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LLMPromptResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string response_text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_response_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMPromptResponse.response_text"));
        } else
          goto handle_unusual;
        continue;
      // string finish_reason = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_finish_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMPromptResponse.finish_reason"));
        } else
          goto handle_unusual;
        continue;
      // int32 prompt_tokens = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.prompt_tokens_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 completion_tokens = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.completion_tokens_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 total_tokens = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.total_tokens_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float response_time_ms = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          _impl_.response_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float tokens_per_second = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 61)) {
          _impl_.tokens_per_second_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated .unhinged.messaging.ToolCall tool_calls = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tool_calls(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct response_metadata = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_response_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LLMPromptResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.LLMPromptResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_text = 1;
  if (!this->_internal_response_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_response_text().data(), static_cast<int>(this->_internal_response_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMPromptResponse.response_text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_response_text(), target);
  }

  // string finish_reason = 2;
  if (!this->_internal_finish_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_finish_reason().data(), static_cast<int>(this->_internal_finish_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMPromptResponse.finish_reason");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_finish_reason(), target);
  }

  // int32 prompt_tokens = 3;
  if (this->_internal_prompt_tokens() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_prompt_tokens(), target);
  }

  // int32 completion_tokens = 4;
  if (this->_internal_completion_tokens() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_completion_tokens(), target);
  }

  // int32 total_tokens = 5;
  if (this->_internal_total_tokens() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_total_tokens(), target);
  }

  // float response_time_ms = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_response_time_ms = this->_internal_response_time_ms();
  uint32_t raw_response_time_ms;
  memcpy(&raw_response_time_ms, &tmp_response_time_ms, sizeof(tmp_response_time_ms));
  if (raw_response_time_ms != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(6, this->_internal_response_time_ms(), target);
  }

  // float tokens_per_second = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_tokens_per_second = this->_internal_tokens_per_second();
  uint32_t raw_tokens_per_second;
  memcpy(&raw_tokens_per_second, &tmp_tokens_per_second, sizeof(tmp_tokens_per_second));
  if (raw_tokens_per_second != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(7, this->_internal_tokens_per_second(), target);
  }

  // repeated .unhinged.messaging.ToolCall tool_calls = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tool_calls_size()); i < n; i++) {
    const auto& repfield = this->_internal_tool_calls(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct response_metadata = 9;
  if (this->_internal_has_response_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::response_metadata(this),
        _Internal::response_metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.LLMPromptResponse)
  return target;
}

size_t LLMPromptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.LLMPromptResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .unhinged.messaging.ToolCall tool_calls = 8;
  total_size += 1UL * this->_internal_tool_calls_size();
  for (const auto& msg : this->_impl_.tool_calls_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string response_text = 1;
  if (!this->_internal_response_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_response_text());
  }

  // string finish_reason = 2;
  if (!this->_internal_finish_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_finish_reason());
  }

  // .google.protobuf.Struct response_metadata = 9;
  if (this->_internal_has_response_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.response_metadata_);
  }

  // int32 prompt_tokens = 3;
  if (this->_internal_prompt_tokens() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_prompt_tokens());
  }

  // int32 completion_tokens = 4;
  if (this->_internal_completion_tokens() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_completion_tokens());
  }

  // int32 total_tokens = 5;
  if (this->_internal_total_tokens() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_tokens());
  }

  // float response_time_ms = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_response_time_ms = this->_internal_response_time_ms();
  uint32_t raw_response_time_ms;
  memcpy(&raw_response_time_ms, &tmp_response_time_ms, sizeof(tmp_response_time_ms));
  if (raw_response_time_ms != 0) {
    total_size += 1 + 4;
  }

  // float tokens_per_second = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_tokens_per_second = this->_internal_tokens_per_second();
  uint32_t raw_tokens_per_second;
  memcpy(&raw_tokens_per_second, &tmp_tokens_per_second, sizeof(tmp_tokens_per_second));
  if (raw_tokens_per_second != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LLMPromptResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LLMPromptResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LLMPromptResponse::GetClassData() const { return &_class_data_; }


void LLMPromptResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LLMPromptResponse*>(&to_msg);
  auto& from = static_cast<const LLMPromptResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.LLMPromptResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tool_calls_.MergeFrom(from._impl_.tool_calls_);
  if (!from._internal_response_text().empty()) {
    _this->_internal_set_response_text(from._internal_response_text());
  }
  if (!from._internal_finish_reason().empty()) {
    _this->_internal_set_finish_reason(from._internal_finish_reason());
  }
  if (from._internal_has_response_metadata()) {
    _this->_internal_mutable_response_metadata()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_response_metadata());
  }
  if (from._internal_prompt_tokens() != 0) {
    _this->_internal_set_prompt_tokens(from._internal_prompt_tokens());
  }
  if (from._internal_completion_tokens() != 0) {
    _this->_internal_set_completion_tokens(from._internal_completion_tokens());
  }
  if (from._internal_total_tokens() != 0) {
    _this->_internal_set_total_tokens(from._internal_total_tokens());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_response_time_ms = from._internal_response_time_ms();
  uint32_t raw_response_time_ms;
  memcpy(&raw_response_time_ms, &tmp_response_time_ms, sizeof(tmp_response_time_ms));
  if (raw_response_time_ms != 0) {
    _this->_internal_set_response_time_ms(from._internal_response_time_ms());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_tokens_per_second = from._internal_tokens_per_second();
  uint32_t raw_tokens_per_second;
  memcpy(&raw_tokens_per_second, &tmp_tokens_per_second, sizeof(tmp_tokens_per_second));
  if (raw_tokens_per_second != 0) {
    _this->_internal_set_tokens_per_second(from._internal_tokens_per_second());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LLMPromptResponse::CopyFrom(const LLMPromptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.LLMPromptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LLMPromptResponse::IsInitialized() const {
  return true;
}

void LLMPromptResponse::InternalSwap(LLMPromptResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tool_calls_.InternalSwap(&other->_impl_.tool_calls_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.response_text_, lhs_arena,
      &other->_impl_.response_text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.finish_reason_, lhs_arena,
      &other->_impl_.finish_reason_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LLMPromptResponse, _impl_.tokens_per_second_)
      + sizeof(LLMPromptResponse::_impl_.tokens_per_second_)
      - PROTOBUF_FIELD_OFFSET(LLMPromptResponse, _impl_.response_metadata_)>(
          reinterpret_cast<char*>(&_impl_.response_metadata_),
          reinterpret_cast<char*>(&other->_impl_.response_metadata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LLMPromptResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[5]);
}

// ===================================================================

class LLMStreamChunk::_Internal {
 public:
};

LLMStreamChunk::LLMStreamChunk(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.LLMStreamChunk)
}
LLMStreamChunk::LLMStreamChunk(const LLMStreamChunk& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LLMStreamChunk* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.partial_tool_calls_){from._impl_.partial_tool_calls_}
    , decltype(_impl_.chunk_text_){}
    , decltype(_impl_.chunk_index_){}
    , decltype(_impl_.is_final_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.chunk_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chunk_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_chunk_text().empty()) {
    _this->_impl_.chunk_text_.Set(from._internal_chunk_text(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.chunk_index_, &from._impl_.chunk_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_final_) -
    reinterpret_cast<char*>(&_impl_.chunk_index_)) + sizeof(_impl_.is_final_));
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.LLMStreamChunk)
}

inline void LLMStreamChunk::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.partial_tool_calls_){arena}
    , decltype(_impl_.chunk_text_){}
    , decltype(_impl_.chunk_index_){0}
    , decltype(_impl_.is_final_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.chunk_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chunk_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LLMStreamChunk::~LLMStreamChunk() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.LLMStreamChunk)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LLMStreamChunk::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.partial_tool_calls_.~RepeatedPtrField();
  _impl_.chunk_text_.Destroy();
}

void LLMStreamChunk::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LLMStreamChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.LLMStreamChunk)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.partial_tool_calls_.Clear();
  _impl_.chunk_text_.ClearToEmpty();
  ::memset(&_impl_.chunk_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_final_) -
      reinterpret_cast<char*>(&_impl_.chunk_index_)) + sizeof(_impl_.is_final_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LLMStreamChunk::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string chunk_text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_chunk_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMStreamChunk.chunk_text"));
        } else
          goto handle_unusual;
        continue;
      // int32 chunk_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.chunk_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_final = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.is_final_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .unhinged.messaging.ToolCall partial_tool_calls = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_partial_tool_calls(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LLMStreamChunk::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.LLMStreamChunk)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string chunk_text = 1;
  if (!this->_internal_chunk_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chunk_text().data(), static_cast<int>(this->_internal_chunk_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMStreamChunk.chunk_text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_chunk_text(), target);
  }

  // int32 chunk_index = 2;
  if (this->_internal_chunk_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_chunk_index(), target);
  }

  // bool is_final = 3;
  if (this->_internal_is_final() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_is_final(), target);
  }

  // repeated .unhinged.messaging.ToolCall partial_tool_calls = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_partial_tool_calls_size()); i < n; i++) {
    const auto& repfield = this->_internal_partial_tool_calls(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.LLMStreamChunk)
  return target;
}

size_t LLMStreamChunk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.LLMStreamChunk)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .unhinged.messaging.ToolCall partial_tool_calls = 4;
  total_size += 1UL * this->_internal_partial_tool_calls_size();
  for (const auto& msg : this->_impl_.partial_tool_calls_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string chunk_text = 1;
  if (!this->_internal_chunk_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chunk_text());
  }

  // int32 chunk_index = 2;
  if (this->_internal_chunk_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_chunk_index());
  }

  // bool is_final = 3;
  if (this->_internal_is_final() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LLMStreamChunk::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LLMStreamChunk::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LLMStreamChunk::GetClassData() const { return &_class_data_; }


void LLMStreamChunk::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LLMStreamChunk*>(&to_msg);
  auto& from = static_cast<const LLMStreamChunk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.LLMStreamChunk)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.partial_tool_calls_.MergeFrom(from._impl_.partial_tool_calls_);
  if (!from._internal_chunk_text().empty()) {
    _this->_internal_set_chunk_text(from._internal_chunk_text());
  }
  if (from._internal_chunk_index() != 0) {
    _this->_internal_set_chunk_index(from._internal_chunk_index());
  }
  if (from._internal_is_final() != 0) {
    _this->_internal_set_is_final(from._internal_is_final());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LLMStreamChunk::CopyFrom(const LLMStreamChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.LLMStreamChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LLMStreamChunk::IsInitialized() const {
  return true;
}

void LLMStreamChunk::InternalSwap(LLMStreamChunk* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.partial_tool_calls_.InternalSwap(&other->_impl_.partial_tool_calls_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.chunk_text_, lhs_arena,
      &other->_impl_.chunk_text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LLMStreamChunk, _impl_.is_final_)
      + sizeof(LLMStreamChunk::_impl_.is_final_)
      - PROTOBUF_FIELD_OFFSET(LLMStreamChunk, _impl_.chunk_index_)>(
          reinterpret_cast<char*>(&_impl_.chunk_index_),
          reinterpret_cast<char*>(&other->_impl_.chunk_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LLMStreamChunk::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[6]);
}

// ===================================================================

class LLMError::_Internal {
 public:
};

LLMError::LLMError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.LLMError)
}
LLMError::LLMError(const LLMError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LLMError* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_code_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.error_type_){}
    , decltype(_impl_.is_retryable_){}
    , decltype(_impl_.retry_after_seconds_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_code().empty()) {
    _this->_impl_.error_code_.Set(from._internal_error_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_type().empty()) {
    _this->_impl_.error_type_.Set(from._internal_error_type(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.is_retryable_, &from._impl_.is_retryable_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.retry_after_seconds_) -
    reinterpret_cast<char*>(&_impl_.is_retryable_)) + sizeof(_impl_.retry_after_seconds_));
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.LLMError)
}

inline void LLMError::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_code_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.error_type_){}
    , decltype(_impl_.is_retryable_){false}
    , decltype(_impl_.retry_after_seconds_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LLMError::~LLMError() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.LLMError)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LLMError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_code_.Destroy();
  _impl_.error_message_.Destroy();
  _impl_.error_type_.Destroy();
}

void LLMError::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LLMError::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.LLMError)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_code_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.error_type_.ClearToEmpty();
  ::memset(&_impl_.is_retryable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.retry_after_seconds_) -
      reinterpret_cast<char*>(&_impl_.is_retryable_)) + sizeof(_impl_.retry_after_seconds_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LLMError::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_error_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMError.error_code"));
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMError.error_message"));
        } else
          goto handle_unusual;
        continue;
      // string error_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMError.error_type"));
        } else
          goto handle_unusual;
        continue;
      // bool is_retryable = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.is_retryable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 retry_after_seconds = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.retry_after_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LLMError::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.LLMError)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_code = 1;
  if (!this->_internal_error_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_code().data(), static_cast<int>(this->_internal_error_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMError.error_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error_code(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMError.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // string error_type = 3;
  if (!this->_internal_error_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_type().data(), static_cast<int>(this->_internal_error_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMError.error_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_type(), target);
  }

  // bool is_retryable = 4;
  if (this->_internal_is_retryable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_retryable(), target);
  }

  // int32 retry_after_seconds = 5;
  if (this->_internal_retry_after_seconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_retry_after_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.LLMError)
  return target;
}

size_t LLMError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.LLMError)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_code = 1;
  if (!this->_internal_error_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_code());
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // string error_type = 3;
  if (!this->_internal_error_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_type());
  }

  // bool is_retryable = 4;
  if (this->_internal_is_retryable() != 0) {
    total_size += 1 + 1;
  }

  // int32 retry_after_seconds = 5;
  if (this->_internal_retry_after_seconds() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_retry_after_seconds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LLMError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LLMError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LLMError::GetClassData() const { return &_class_data_; }


void LLMError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LLMError*>(&to_msg);
  auto& from = static_cast<const LLMError&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.LLMError)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_code().empty()) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (!from._internal_error_type().empty()) {
    _this->_internal_set_error_type(from._internal_error_type());
  }
  if (from._internal_is_retryable() != 0) {
    _this->_internal_set_is_retryable(from._internal_is_retryable());
  }
  if (from._internal_retry_after_seconds() != 0) {
    _this->_internal_set_retry_after_seconds(from._internal_retry_after_seconds());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LLMError::CopyFrom(const LLMError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.LLMError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LLMError::IsInitialized() const {
  return true;
}

void LLMError::InternalSwap(LLMError* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_code_, lhs_arena,
      &other->_impl_.error_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_type_, lhs_arena,
      &other->_impl_.error_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LLMError, _impl_.retry_after_seconds_)
      + sizeof(LLMError::_impl_.retry_after_seconds_)
      - PROTOBUF_FIELD_OFFSET(LLMError, _impl_.is_retryable_)>(
          reinterpret_cast<char*>(&_impl_.is_retryable_),
          reinterpret_cast<char*>(&other->_impl_.is_retryable_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LLMError::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[7]);
}

// ===================================================================

class LLMCancel::_Internal {
 public:
};

LLMCancel::LLMCancel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.LLMCancel)
}
LLMCancel::LLMCancel(const LLMCancel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LLMCancel* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reason_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reason().empty()) {
    _this->_impl_.reason_.Set(from._internal_reason(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.LLMCancel)
}

inline void LLMCancel::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reason_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LLMCancel::~LLMCancel() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.LLMCancel)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LLMCancel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reason_.Destroy();
}

void LLMCancel::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LLMCancel::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.LLMCancel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LLMCancel::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string reason = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.LLMCancel.reason"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LLMCancel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.LLMCancel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string reason = 1;
  if (!this->_internal_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.LLMCancel.reason");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.LLMCancel)
  return target;
}

size_t LLMCancel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.LLMCancel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reason = 1;
  if (!this->_internal_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LLMCancel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LLMCancel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LLMCancel::GetClassData() const { return &_class_data_; }


void LLMCancel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LLMCancel*>(&to_msg);
  auto& from = static_cast<const LLMCancel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.LLMCancel)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LLMCancel::CopyFrom(const LLMCancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.LLMCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LLMCancel::IsInitialized() const {
  return true;
}

void LLMCancel::InternalSwap(LLMCancel* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reason_, lhs_arena,
      &other->_impl_.reason_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LLMCancel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[8]);
}

// ===================================================================

class ToolCall::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& tool_arguments(const ToolCall* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
ToolCall::_Internal::tool_arguments(const ToolCall* msg) {
  return *msg->_impl_.tool_arguments_;
}
void ToolCall::clear_tool_arguments() {
  if (GetArenaForAllocation() == nullptr && _impl_.tool_arguments_ != nullptr) {
    delete _impl_.tool_arguments_;
  }
  _impl_.tool_arguments_ = nullptr;
}
ToolCall::ToolCall(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ToolCall)
}
ToolCall::ToolCall(const ToolCall& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ToolCall* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tool_id_){}
    , decltype(_impl_.tool_name_){}
    , decltype(_impl_.tool_arguments_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tool_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tool_id().empty()) {
    _this->_impl_.tool_id_.Set(from._internal_tool_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.tool_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tool_name().empty()) {
    _this->_impl_.tool_name_.Set(from._internal_tool_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_tool_arguments()) {
    _this->_impl_.tool_arguments_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.tool_arguments_);
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ToolCall)
}

inline void ToolCall::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tool_id_){}
    , decltype(_impl_.tool_name_){}
    , decltype(_impl_.tool_arguments_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tool_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.tool_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ToolCall::~ToolCall() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ToolCall)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ToolCall::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tool_id_.Destroy();
  _impl_.tool_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.tool_arguments_;
}

void ToolCall::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ToolCall::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ToolCall)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tool_id_.ClearToEmpty();
  _impl_.tool_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.tool_arguments_ != nullptr) {
    delete _impl_.tool_arguments_;
  }
  _impl_.tool_arguments_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ToolCall::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tool_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tool_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolCall.tool_id"));
        } else
          goto handle_unusual;
        continue;
      // string tool_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_tool_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolCall.tool_name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct tool_arguments = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_tool_arguments(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ToolCall::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ToolCall)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tool_id = 1;
  if (!this->_internal_tool_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tool_id().data(), static_cast<int>(this->_internal_tool_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolCall.tool_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tool_id(), target);
  }

  // string tool_name = 2;
  if (!this->_internal_tool_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tool_name().data(), static_cast<int>(this->_internal_tool_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolCall.tool_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tool_name(), target);
  }

  // .google.protobuf.Struct tool_arguments = 3;
  if (this->_internal_has_tool_arguments()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::tool_arguments(this),
        _Internal::tool_arguments(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ToolCall)
  return target;
}

size_t ToolCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ToolCall)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tool_id = 1;
  if (!this->_internal_tool_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tool_id());
  }

  // string tool_name = 2;
  if (!this->_internal_tool_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tool_name());
  }

  // .google.protobuf.Struct tool_arguments = 3;
  if (this->_internal_has_tool_arguments()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tool_arguments_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ToolCall::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ToolCall::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ToolCall::GetClassData() const { return &_class_data_; }


void ToolCall::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ToolCall*>(&to_msg);
  auto& from = static_cast<const ToolCall&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ToolCall)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tool_id().empty()) {
    _this->_internal_set_tool_id(from._internal_tool_id());
  }
  if (!from._internal_tool_name().empty()) {
    _this->_internal_set_tool_name(from._internal_tool_name());
  }
  if (from._internal_has_tool_arguments()) {
    _this->_internal_mutable_tool_arguments()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_tool_arguments());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ToolCall::CopyFrom(const ToolCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ToolCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToolCall::IsInitialized() const {
  return true;
}

void ToolCall::InternalSwap(ToolCall* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tool_id_, lhs_arena,
      &other->_impl_.tool_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tool_name_, lhs_arena,
      &other->_impl_.tool_name_, rhs_arena
  );
  swap(_impl_.tool_arguments_, other->_impl_.tool_arguments_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ToolCall::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[9]);
}

// ===================================================================

class AgentMessage::_Internal {
 public:
  static const ::unhinged::messaging::AgentTaskRequest& task_request(const AgentMessage* msg);
  static const ::unhinged::messaging::AgentTaskResponse& task_response(const AgentMessage* msg);
  static const ::unhinged::messaging::AgentStepUpdate& step_update(const AgentMessage* msg);
  static const ::unhinged::messaging::AgentCollaboration& collaboration(const AgentMessage* msg);
  static const ::unhinged::messaging::AgentError& agent_error(const AgentMessage* msg);
};

const ::unhinged::messaging::AgentTaskRequest&
AgentMessage::_Internal::task_request(const AgentMessage* msg) {
  return *msg->_impl_.message_data_.task_request_;
}
const ::unhinged::messaging::AgentTaskResponse&
AgentMessage::_Internal::task_response(const AgentMessage* msg) {
  return *msg->_impl_.message_data_.task_response_;
}
const ::unhinged::messaging::AgentStepUpdate&
AgentMessage::_Internal::step_update(const AgentMessage* msg) {
  return *msg->_impl_.message_data_.step_update_;
}
const ::unhinged::messaging::AgentCollaboration&
AgentMessage::_Internal::collaboration(const AgentMessage* msg) {
  return *msg->_impl_.message_data_.collaboration_;
}
const ::unhinged::messaging::AgentError&
AgentMessage::_Internal::agent_error(const AgentMessage* msg) {
  return *msg->_impl_.message_data_.agent_error_;
}
void AgentMessage::set_allocated_task_request(::unhinged::messaging::AgentTaskRequest* task_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (task_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(task_request);
    if (message_arena != submessage_arena) {
      task_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, task_request, submessage_arena);
    }
    set_has_task_request();
    _impl_.message_data_.task_request_ = task_request;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.AgentMessage.task_request)
}
void AgentMessage::set_allocated_task_response(::unhinged::messaging::AgentTaskResponse* task_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (task_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(task_response);
    if (message_arena != submessage_arena) {
      task_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, task_response, submessage_arena);
    }
    set_has_task_response();
    _impl_.message_data_.task_response_ = task_response;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.AgentMessage.task_response)
}
void AgentMessage::set_allocated_step_update(::unhinged::messaging::AgentStepUpdate* step_update) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (step_update) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(step_update);
    if (message_arena != submessage_arena) {
      step_update = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, step_update, submessage_arena);
    }
    set_has_step_update();
    _impl_.message_data_.step_update_ = step_update;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.AgentMessage.step_update)
}
void AgentMessage::set_allocated_collaboration(::unhinged::messaging::AgentCollaboration* collaboration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (collaboration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(collaboration);
    if (message_arena != submessage_arena) {
      collaboration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, collaboration, submessage_arena);
    }
    set_has_collaboration();
    _impl_.message_data_.collaboration_ = collaboration;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.AgentMessage.collaboration)
}
void AgentMessage::set_allocated_agent_error(::unhinged::messaging::AgentError* agent_error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (agent_error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(agent_error);
    if (message_arena != submessage_arena) {
      agent_error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent_error, submessage_arena);
    }
    set_has_agent_error();
    _impl_.message_data_.agent_error_ = agent_error;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.AgentMessage.agent_error)
}
AgentMessage::AgentMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.AgentMessage)
}
AgentMessage::AgentMessage(const AgentMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AgentMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){}
    , decltype(_impl_.execution_id_){}
    , decltype(_impl_.message_type_){}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_id().empty()) {
    _this->_impl_.agent_id_.Set(from._internal_agent_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.execution_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.execution_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_execution_id().empty()) {
    _this->_impl_.execution_id_.Set(from._internal_execution_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.message_type_ = from._impl_.message_type_;
  clear_has_message_data();
  switch (from.message_data_case()) {
    case kTaskRequest: {
      _this->_internal_mutable_task_request()->::unhinged::messaging::AgentTaskRequest::MergeFrom(
          from._internal_task_request());
      break;
    }
    case kTaskResponse: {
      _this->_internal_mutable_task_response()->::unhinged::messaging::AgentTaskResponse::MergeFrom(
          from._internal_task_response());
      break;
    }
    case kStepUpdate: {
      _this->_internal_mutable_step_update()->::unhinged::messaging::AgentStepUpdate::MergeFrom(
          from._internal_step_update());
      break;
    }
    case kCollaboration: {
      _this->_internal_mutable_collaboration()->::unhinged::messaging::AgentCollaboration::MergeFrom(
          from._internal_collaboration());
      break;
    }
    case kAgentError: {
      _this->_internal_mutable_agent_error()->::unhinged::messaging::AgentError::MergeFrom(
          from._internal_agent_error());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.AgentMessage)
}

inline void AgentMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){}
    , decltype(_impl_.execution_id_){}
    , decltype(_impl_.message_type_){0}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.execution_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.execution_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_message_data();
}

AgentMessage::~AgentMessage() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.AgentMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_id_.Destroy();
  _impl_.execution_id_.Destroy();
  if (has_message_data()) {
    clear_message_data();
  }
}

void AgentMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AgentMessage::clear_message_data() {
// @@protoc_insertion_point(one_of_clear_start:unhinged.messaging.AgentMessage)
  switch (message_data_case()) {
    case kTaskRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.task_request_;
      }
      break;
    }
    case kTaskResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.task_response_;
      }
      break;
    }
    case kStepUpdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.step_update_;
      }
      break;
    }
    case kCollaboration: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.collaboration_;
      }
      break;
    }
    case kAgentError: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.agent_error_;
      }
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_DATA_NOT_SET;
}


void AgentMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.AgentMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_id_.ClearToEmpty();
  _impl_.execution_id_.ClearToEmpty();
  _impl_.message_type_ = 0;
  clear_message_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string agent_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_agent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentMessage.agent_id"));
        } else
          goto handle_unusual;
        continue;
      // string execution_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_execution_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentMessage.execution_id"));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.AgentMessageType message_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_message_type(static_cast<::unhinged::messaging::AgentMessageType>(val));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.AgentTaskRequest task_request = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_task_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.AgentTaskResponse task_response = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_task_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.AgentStepUpdate step_update = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_step_update(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.AgentCollaboration collaboration = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_collaboration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.AgentError agent_error = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_agent_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.AgentMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string agent_id = 1;
  if (!this->_internal_agent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_id().data(), static_cast<int>(this->_internal_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentMessage.agent_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_agent_id(), target);
  }

  // string execution_id = 2;
  if (!this->_internal_execution_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_execution_id().data(), static_cast<int>(this->_internal_execution_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentMessage.execution_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_execution_id(), target);
  }

  // .unhinged.messaging.AgentMessageType message_type = 3;
  if (this->_internal_message_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_message_type(), target);
  }

  // .unhinged.messaging.AgentTaskRequest task_request = 10;
  if (_internal_has_task_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::task_request(this),
        _Internal::task_request(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.AgentTaskResponse task_response = 11;
  if (_internal_has_task_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::task_response(this),
        _Internal::task_response(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.AgentStepUpdate step_update = 12;
  if (_internal_has_step_update()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::step_update(this),
        _Internal::step_update(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.AgentCollaboration collaboration = 13;
  if (_internal_has_collaboration()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::collaboration(this),
        _Internal::collaboration(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.AgentError agent_error = 14;
  if (_internal_has_agent_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::agent_error(this),
        _Internal::agent_error(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.AgentMessage)
  return target;
}

size_t AgentMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.AgentMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string agent_id = 1;
  if (!this->_internal_agent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_id());
  }

  // string execution_id = 2;
  if (!this->_internal_execution_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_execution_id());
  }

  // .unhinged.messaging.AgentMessageType message_type = 3;
  if (this->_internal_message_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_message_type());
  }

  switch (message_data_case()) {
    // .unhinged.messaging.AgentTaskRequest task_request = 10;
    case kTaskRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.task_request_);
      break;
    }
    // .unhinged.messaging.AgentTaskResponse task_response = 11;
    case kTaskResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.task_response_);
      break;
    }
    // .unhinged.messaging.AgentStepUpdate step_update = 12;
    case kStepUpdate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.step_update_);
      break;
    }
    // .unhinged.messaging.AgentCollaboration collaboration = 13;
    case kCollaboration: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.collaboration_);
      break;
    }
    // .unhinged.messaging.AgentError agent_error = 14;
    case kAgentError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.agent_error_);
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AgentMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentMessage::GetClassData() const { return &_class_data_; }


void AgentMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AgentMessage*>(&to_msg);
  auto& from = static_cast<const AgentMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.AgentMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_agent_id().empty()) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  if (!from._internal_execution_id().empty()) {
    _this->_internal_set_execution_id(from._internal_execution_id());
  }
  if (from._internal_message_type() != 0) {
    _this->_internal_set_message_type(from._internal_message_type());
  }
  switch (from.message_data_case()) {
    case kTaskRequest: {
      _this->_internal_mutable_task_request()->::unhinged::messaging::AgentTaskRequest::MergeFrom(
          from._internal_task_request());
      break;
    }
    case kTaskResponse: {
      _this->_internal_mutable_task_response()->::unhinged::messaging::AgentTaskResponse::MergeFrom(
          from._internal_task_response());
      break;
    }
    case kStepUpdate: {
      _this->_internal_mutable_step_update()->::unhinged::messaging::AgentStepUpdate::MergeFrom(
          from._internal_step_update());
      break;
    }
    case kCollaboration: {
      _this->_internal_mutable_collaboration()->::unhinged::messaging::AgentCollaboration::MergeFrom(
          from._internal_collaboration());
      break;
    }
    case kAgentError: {
      _this->_internal_mutable_agent_error()->::unhinged::messaging::AgentError::MergeFrom(
          from._internal_agent_error());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentMessage::CopyFrom(const AgentMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.AgentMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentMessage::IsInitialized() const {
  return true;
}

void AgentMessage::InternalSwap(AgentMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_id_, lhs_arena,
      &other->_impl_.agent_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.execution_id_, lhs_arena,
      &other->_impl_.execution_id_, rhs_arena
  );
  swap(_impl_.message_type_, other->_impl_.message_type_);
  swap(_impl_.message_data_, other->_impl_.message_data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[10]);
}

// ===================================================================

class AgentTaskRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& task_parameters(const AgentTaskRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& context(const AgentTaskRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& deadline(const AgentTaskRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
AgentTaskRequest::_Internal::task_parameters(const AgentTaskRequest* msg) {
  return *msg->_impl_.task_parameters_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
AgentTaskRequest::_Internal::context(const AgentTaskRequest* msg) {
  return *msg->_impl_.context_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
AgentTaskRequest::_Internal::deadline(const AgentTaskRequest* msg) {
  return *msg->_impl_.deadline_;
}
void AgentTaskRequest::clear_task_parameters() {
  if (GetArenaForAllocation() == nullptr && _impl_.task_parameters_ != nullptr) {
    delete _impl_.task_parameters_;
  }
  _impl_.task_parameters_ = nullptr;
}
void AgentTaskRequest::clear_context() {
  if (GetArenaForAllocation() == nullptr && _impl_.context_ != nullptr) {
    delete _impl_.context_;
  }
  _impl_.context_ = nullptr;
}
void AgentTaskRequest::clear_deadline() {
  if (GetArenaForAllocation() == nullptr && _impl_.deadline_ != nullptr) {
    delete _impl_.deadline_;
  }
  _impl_.deadline_ = nullptr;
}
AgentTaskRequest::AgentTaskRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.AgentTaskRequest)
}
AgentTaskRequest::AgentTaskRequest(const AgentTaskRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AgentTaskRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.required_capabilities_){from._impl_.required_capabilities_}
    , decltype(_impl_.task_description_){}
    , decltype(_impl_.task_type_){}
    , decltype(_impl_.task_parameters_){nullptr}
    , decltype(_impl_.context_){nullptr}
    , decltype(_impl_.deadline_){nullptr}
    , decltype(_impl_.priority_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.task_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_task_description().empty()) {
    _this->_impl_.task_description_.Set(from._internal_task_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.task_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_task_type().empty()) {
    _this->_impl_.task_type_.Set(from._internal_task_type(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_task_parameters()) {
    _this->_impl_.task_parameters_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.task_parameters_);
  }
  if (from._internal_has_context()) {
    _this->_impl_.context_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.context_);
  }
  if (from._internal_has_deadline()) {
    _this->_impl_.deadline_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.deadline_);
  }
  _this->_impl_.priority_ = from._impl_.priority_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.AgentTaskRequest)
}

inline void AgentTaskRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.required_capabilities_){arena}
    , decltype(_impl_.task_description_){}
    , decltype(_impl_.task_type_){}
    , decltype(_impl_.task_parameters_){nullptr}
    , decltype(_impl_.context_){nullptr}
    , decltype(_impl_.deadline_){nullptr}
    , decltype(_impl_.priority_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.task_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.task_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AgentTaskRequest::~AgentTaskRequest() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.AgentTaskRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentTaskRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.required_capabilities_.~RepeatedPtrField();
  _impl_.task_description_.Destroy();
  _impl_.task_type_.Destroy();
  if (this != internal_default_instance()) delete _impl_.task_parameters_;
  if (this != internal_default_instance()) delete _impl_.context_;
  if (this != internal_default_instance()) delete _impl_.deadline_;
}

void AgentTaskRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AgentTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.AgentTaskRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.required_capabilities_.Clear();
  _impl_.task_description_.ClearToEmpty();
  _impl_.task_type_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.task_parameters_ != nullptr) {
    delete _impl_.task_parameters_;
  }
  _impl_.task_parameters_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.context_ != nullptr) {
    delete _impl_.context_;
  }
  _impl_.context_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.deadline_ != nullptr) {
    delete _impl_.deadline_;
  }
  _impl_.deadline_ = nullptr;
  _impl_.priority_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentTaskRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string task_description = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_task_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentTaskRequest.task_description"));
        } else
          goto handle_unusual;
        continue;
      // string task_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_task_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentTaskRequest.task_type"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct task_parameters = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_task_parameters(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string required_capabilities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_required_capabilities();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentTaskRequest.required_capabilities"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct context = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_context(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 priority = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp deadline = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_deadline(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentTaskRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.AgentTaskRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string task_description = 1;
  if (!this->_internal_task_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task_description().data(), static_cast<int>(this->_internal_task_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentTaskRequest.task_description");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_task_description(), target);
  }

  // string task_type = 2;
  if (!this->_internal_task_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task_type().data(), static_cast<int>(this->_internal_task_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentTaskRequest.task_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_task_type(), target);
  }

  // .google.protobuf.Struct task_parameters = 3;
  if (this->_internal_has_task_parameters()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::task_parameters(this),
        _Internal::task_parameters(this).GetCachedSize(), target, stream);
  }

  // repeated string required_capabilities = 4;
  for (int i = 0, n = this->_internal_required_capabilities_size(); i < n; i++) {
    const auto& s = this->_internal_required_capabilities(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentTaskRequest.required_capabilities");
    target = stream->WriteString(4, s, target);
  }

  // .google.protobuf.Struct context = 5;
  if (this->_internal_has_context()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::context(this),
        _Internal::context(this).GetCachedSize(), target, stream);
  }

  // int32 priority = 6;
  if (this->_internal_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_priority(), target);
  }

  // .google.protobuf.Timestamp deadline = 7;
  if (this->_internal_has_deadline()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::deadline(this),
        _Internal::deadline(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.AgentTaskRequest)
  return target;
}

size_t AgentTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.AgentTaskRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string required_capabilities = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.required_capabilities_.size());
  for (int i = 0, n = _impl_.required_capabilities_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.required_capabilities_.Get(i));
  }

  // string task_description = 1;
  if (!this->_internal_task_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_task_description());
  }

  // string task_type = 2;
  if (!this->_internal_task_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_task_type());
  }

  // .google.protobuf.Struct task_parameters = 3;
  if (this->_internal_has_task_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.task_parameters_);
  }

  // .google.protobuf.Struct context = 5;
  if (this->_internal_has_context()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.context_);
  }

  // .google.protobuf.Timestamp deadline = 7;
  if (this->_internal_has_deadline()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.deadline_);
  }

  // int32 priority = 6;
  if (this->_internal_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_priority());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentTaskRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AgentTaskRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentTaskRequest::GetClassData() const { return &_class_data_; }


void AgentTaskRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AgentTaskRequest*>(&to_msg);
  auto& from = static_cast<const AgentTaskRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.AgentTaskRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.required_capabilities_.MergeFrom(from._impl_.required_capabilities_);
  if (!from._internal_task_description().empty()) {
    _this->_internal_set_task_description(from._internal_task_description());
  }
  if (!from._internal_task_type().empty()) {
    _this->_internal_set_task_type(from._internal_task_type());
  }
  if (from._internal_has_task_parameters()) {
    _this->_internal_mutable_task_parameters()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_task_parameters());
  }
  if (from._internal_has_context()) {
    _this->_internal_mutable_context()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_context());
  }
  if (from._internal_has_deadline()) {
    _this->_internal_mutable_deadline()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_deadline());
  }
  if (from._internal_priority() != 0) {
    _this->_internal_set_priority(from._internal_priority());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentTaskRequest::CopyFrom(const AgentTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.AgentTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentTaskRequest::IsInitialized() const {
  return true;
}

void AgentTaskRequest::InternalSwap(AgentTaskRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.required_capabilities_.InternalSwap(&other->_impl_.required_capabilities_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.task_description_, lhs_arena,
      &other->_impl_.task_description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.task_type_, lhs_arena,
      &other->_impl_.task_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgentTaskRequest, _impl_.priority_)
      + sizeof(AgentTaskRequest::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(AgentTaskRequest, _impl_.task_parameters_)>(
          reinterpret_cast<char*>(&_impl_.task_parameters_),
          reinterpret_cast<char*>(&other->_impl_.task_parameters_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentTaskRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[11]);
}

// ===================================================================

class AgentTaskResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& result(const AgentTaskResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
AgentTaskResponse::_Internal::result(const AgentTaskResponse* msg) {
  return *msg->_impl_.result_;
}
void AgentTaskResponse::clear_result() {
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
}
AgentTaskResponse::AgentTaskResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.AgentTaskResponse)
}
AgentTaskResponse::AgentTaskResponse(const AgentTaskResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AgentTaskResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.artifacts_created_){from._impl_.artifacts_created_}
    , decltype(_impl_.status_){}
    , decltype(_impl_.completion_message_){}
    , decltype(_impl_.result_){nullptr}
    , decltype(_impl_.execution_time_ms_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), 
      _this->GetArenaForAllocation());
  }
  _impl_.completion_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.completion_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_completion_message().empty()) {
    _this->_impl_.completion_message_.Set(from._internal_completion_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.result_);
  }
  _this->_impl_.execution_time_ms_ = from._impl_.execution_time_ms_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.AgentTaskResponse)
}

inline void AgentTaskResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.artifacts_created_){arena}
    , decltype(_impl_.status_){}
    , decltype(_impl_.completion_message_){}
    , decltype(_impl_.result_){nullptr}
    , decltype(_impl_.execution_time_ms_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.completion_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.completion_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AgentTaskResponse::~AgentTaskResponse() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.AgentTaskResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentTaskResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifacts_created_.~RepeatedPtrField();
  _impl_.status_.Destroy();
  _impl_.completion_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.result_;
}

void AgentTaskResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AgentTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.AgentTaskResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifacts_created_.Clear();
  _impl_.status_.ClearToEmpty();
  _impl_.completion_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _impl_.execution_time_ms_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentTaskResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentTaskResponse.status"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string completion_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_completion_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentTaskResponse.completion_message"));
        } else
          goto handle_unusual;
        continue;
      // repeated string artifacts_created = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_artifacts_created();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentTaskResponse.artifacts_created"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // float execution_time_ms = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _impl_.execution_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentTaskResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.AgentTaskResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentTaskResponse.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  // .google.protobuf.Struct result = 2;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  // string completion_message = 3;
  if (!this->_internal_completion_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_completion_message().data(), static_cast<int>(this->_internal_completion_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentTaskResponse.completion_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_completion_message(), target);
  }

  // repeated string artifacts_created = 4;
  for (int i = 0, n = this->_internal_artifacts_created_size(); i < n; i++) {
    const auto& s = this->_internal_artifacts_created(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentTaskResponse.artifacts_created");
    target = stream->WriteString(4, s, target);
  }

  // float execution_time_ms = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_execution_time_ms = this->_internal_execution_time_ms();
  uint32_t raw_execution_time_ms;
  memcpy(&raw_execution_time_ms, &tmp_execution_time_ms, sizeof(tmp_execution_time_ms));
  if (raw_execution_time_ms != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_execution_time_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.AgentTaskResponse)
  return target;
}

size_t AgentTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.AgentTaskResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string artifacts_created = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.artifacts_created_.size());
  for (int i = 0, n = _impl_.artifacts_created_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.artifacts_created_.Get(i));
  }

  // string status = 1;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string completion_message = 3;
  if (!this->_internal_completion_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_completion_message());
  }

  // .google.protobuf.Struct result = 2;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  // float execution_time_ms = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_execution_time_ms = this->_internal_execution_time_ms();
  uint32_t raw_execution_time_ms;
  memcpy(&raw_execution_time_ms, &tmp_execution_time_ms, sizeof(tmp_execution_time_ms));
  if (raw_execution_time_ms != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentTaskResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AgentTaskResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentTaskResponse::GetClassData() const { return &_class_data_; }


void AgentTaskResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AgentTaskResponse*>(&to_msg);
  auto& from = static_cast<const AgentTaskResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.AgentTaskResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifacts_created_.MergeFrom(from._impl_.artifacts_created_);
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_completion_message().empty()) {
    _this->_internal_set_completion_message(from._internal_completion_message());
  }
  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_result());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_execution_time_ms = from._internal_execution_time_ms();
  uint32_t raw_execution_time_ms;
  memcpy(&raw_execution_time_ms, &tmp_execution_time_ms, sizeof(tmp_execution_time_ms));
  if (raw_execution_time_ms != 0) {
    _this->_internal_set_execution_time_ms(from._internal_execution_time_ms());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentTaskResponse::CopyFrom(const AgentTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.AgentTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentTaskResponse::IsInitialized() const {
  return true;
}

void AgentTaskResponse::InternalSwap(AgentTaskResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.artifacts_created_.InternalSwap(&other->_impl_.artifacts_created_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.status_, lhs_arena,
      &other->_impl_.status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.completion_message_, lhs_arena,
      &other->_impl_.completion_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgentTaskResponse, _impl_.execution_time_ms_)
      + sizeof(AgentTaskResponse::_impl_.execution_time_ms_)
      - PROTOBUF_FIELD_OFFSET(AgentTaskResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentTaskResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[12]);
}

// ===================================================================

class AgentStepUpdate::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& step_data(const AgentStepUpdate* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
AgentStepUpdate::_Internal::step_data(const AgentStepUpdate* msg) {
  return *msg->_impl_.step_data_;
}
void AgentStepUpdate::clear_step_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.step_data_ != nullptr) {
    delete _impl_.step_data_;
  }
  _impl_.step_data_ = nullptr;
}
AgentStepUpdate::AgentStepUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.AgentStepUpdate)
}
AgentStepUpdate::AgentStepUpdate(const AgentStepUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AgentStepUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.step_description_){}
    , decltype(_impl_.step_status_){}
    , decltype(_impl_.step_data_){nullptr}
    , decltype(_impl_.step_number_){}
    , decltype(_impl_.progress_percentage_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.step_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.step_description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_step_description().empty()) {
    _this->_impl_.step_description_.Set(from._internal_step_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.step_status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.step_status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_step_status().empty()) {
    _this->_impl_.step_status_.Set(from._internal_step_status(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_step_data()) {
    _this->_impl_.step_data_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.step_data_);
  }
  ::memcpy(&_impl_.step_number_, &from._impl_.step_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.progress_percentage_) -
    reinterpret_cast<char*>(&_impl_.step_number_)) + sizeof(_impl_.progress_percentage_));
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.AgentStepUpdate)
}

inline void AgentStepUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.step_description_){}
    , decltype(_impl_.step_status_){}
    , decltype(_impl_.step_data_){nullptr}
    , decltype(_impl_.step_number_){0}
    , decltype(_impl_.progress_percentage_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.step_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.step_description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.step_status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.step_status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AgentStepUpdate::~AgentStepUpdate() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.AgentStepUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentStepUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.step_description_.Destroy();
  _impl_.step_status_.Destroy();
  if (this != internal_default_instance()) delete _impl_.step_data_;
}

void AgentStepUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AgentStepUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.AgentStepUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.step_description_.ClearToEmpty();
  _impl_.step_status_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.step_data_ != nullptr) {
    delete _impl_.step_data_;
  }
  _impl_.step_data_ = nullptr;
  ::memset(&_impl_.step_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.progress_percentage_) -
      reinterpret_cast<char*>(&_impl_.step_number_)) + sizeof(_impl_.progress_percentage_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentStepUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 step_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.step_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string step_description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_step_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentStepUpdate.step_description"));
        } else
          goto handle_unusual;
        continue;
      // string step_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_step_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentStepUpdate.step_status"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct step_data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_step_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float progress_percentage = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _impl_.progress_percentage_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentStepUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.AgentStepUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 step_number = 1;
  if (this->_internal_step_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_step_number(), target);
  }

  // string step_description = 2;
  if (!this->_internal_step_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_step_description().data(), static_cast<int>(this->_internal_step_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentStepUpdate.step_description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_step_description(), target);
  }

  // string step_status = 3;
  if (!this->_internal_step_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_step_status().data(), static_cast<int>(this->_internal_step_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentStepUpdate.step_status");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_step_status(), target);
  }

  // .google.protobuf.Struct step_data = 4;
  if (this->_internal_has_step_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::step_data(this),
        _Internal::step_data(this).GetCachedSize(), target, stream);
  }

  // float progress_percentage = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_progress_percentage = this->_internal_progress_percentage();
  uint32_t raw_progress_percentage;
  memcpy(&raw_progress_percentage, &tmp_progress_percentage, sizeof(tmp_progress_percentage));
  if (raw_progress_percentage != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_progress_percentage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.AgentStepUpdate)
  return target;
}

size_t AgentStepUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.AgentStepUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string step_description = 2;
  if (!this->_internal_step_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_step_description());
  }

  // string step_status = 3;
  if (!this->_internal_step_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_step_status());
  }

  // .google.protobuf.Struct step_data = 4;
  if (this->_internal_has_step_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.step_data_);
  }

  // int32 step_number = 1;
  if (this->_internal_step_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_step_number());
  }

  // float progress_percentage = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_progress_percentage = this->_internal_progress_percentage();
  uint32_t raw_progress_percentage;
  memcpy(&raw_progress_percentage, &tmp_progress_percentage, sizeof(tmp_progress_percentage));
  if (raw_progress_percentage != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentStepUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AgentStepUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentStepUpdate::GetClassData() const { return &_class_data_; }


void AgentStepUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AgentStepUpdate*>(&to_msg);
  auto& from = static_cast<const AgentStepUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.AgentStepUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_step_description().empty()) {
    _this->_internal_set_step_description(from._internal_step_description());
  }
  if (!from._internal_step_status().empty()) {
    _this->_internal_set_step_status(from._internal_step_status());
  }
  if (from._internal_has_step_data()) {
    _this->_internal_mutable_step_data()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_step_data());
  }
  if (from._internal_step_number() != 0) {
    _this->_internal_set_step_number(from._internal_step_number());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_progress_percentage = from._internal_progress_percentage();
  uint32_t raw_progress_percentage;
  memcpy(&raw_progress_percentage, &tmp_progress_percentage, sizeof(tmp_progress_percentage));
  if (raw_progress_percentage != 0) {
    _this->_internal_set_progress_percentage(from._internal_progress_percentage());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentStepUpdate::CopyFrom(const AgentStepUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.AgentStepUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentStepUpdate::IsInitialized() const {
  return true;
}

void AgentStepUpdate::InternalSwap(AgentStepUpdate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.step_description_, lhs_arena,
      &other->_impl_.step_description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.step_status_, lhs_arena,
      &other->_impl_.step_status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgentStepUpdate, _impl_.progress_percentage_)
      + sizeof(AgentStepUpdate::_impl_.progress_percentage_)
      - PROTOBUF_FIELD_OFFSET(AgentStepUpdate, _impl_.step_data_)>(
          reinterpret_cast<char*>(&_impl_.step_data_),
          reinterpret_cast<char*>(&other->_impl_.step_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentStepUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[13]);
}

// ===================================================================

class AgentCollaboration::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& collaboration_data(const AgentCollaboration* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
AgentCollaboration::_Internal::collaboration_data(const AgentCollaboration* msg) {
  return *msg->_impl_.collaboration_data_;
}
void AgentCollaboration::clear_collaboration_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.collaboration_data_ != nullptr) {
    delete _impl_.collaboration_data_;
  }
  _impl_.collaboration_data_ = nullptr;
}
AgentCollaboration::AgentCollaboration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.AgentCollaboration)
}
AgentCollaboration::AgentCollaboration(const AgentCollaboration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AgentCollaboration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.collaboration_type_){}
    , decltype(_impl_.target_agent_id_){}
    , decltype(_impl_.collaboration_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.collaboration_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.collaboration_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_collaboration_type().empty()) {
    _this->_impl_.collaboration_type_.Set(from._internal_collaboration_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.target_agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.target_agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_target_agent_id().empty()) {
    _this->_impl_.target_agent_id_.Set(from._internal_target_agent_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_collaboration_data()) {
    _this->_impl_.collaboration_data_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.collaboration_data_);
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.AgentCollaboration)
}

inline void AgentCollaboration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.collaboration_type_){}
    , decltype(_impl_.target_agent_id_){}
    , decltype(_impl_.collaboration_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.collaboration_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.collaboration_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.target_agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.target_agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AgentCollaboration::~AgentCollaboration() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.AgentCollaboration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentCollaboration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.collaboration_type_.Destroy();
  _impl_.target_agent_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.collaboration_data_;
}

void AgentCollaboration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AgentCollaboration::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.AgentCollaboration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.collaboration_type_.ClearToEmpty();
  _impl_.target_agent_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.collaboration_data_ != nullptr) {
    delete _impl_.collaboration_data_;
  }
  _impl_.collaboration_data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentCollaboration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string collaboration_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_collaboration_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentCollaboration.collaboration_type"));
        } else
          goto handle_unusual;
        continue;
      // string target_agent_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_target_agent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentCollaboration.target_agent_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct collaboration_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_collaboration_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentCollaboration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.AgentCollaboration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string collaboration_type = 1;
  if (!this->_internal_collaboration_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collaboration_type().data(), static_cast<int>(this->_internal_collaboration_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentCollaboration.collaboration_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_collaboration_type(), target);
  }

  // string target_agent_id = 2;
  if (!this->_internal_target_agent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_agent_id().data(), static_cast<int>(this->_internal_target_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentCollaboration.target_agent_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_target_agent_id(), target);
  }

  // .google.protobuf.Struct collaboration_data = 3;
  if (this->_internal_has_collaboration_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::collaboration_data(this),
        _Internal::collaboration_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.AgentCollaboration)
  return target;
}

size_t AgentCollaboration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.AgentCollaboration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string collaboration_type = 1;
  if (!this->_internal_collaboration_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collaboration_type());
  }

  // string target_agent_id = 2;
  if (!this->_internal_target_agent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_agent_id());
  }

  // .google.protobuf.Struct collaboration_data = 3;
  if (this->_internal_has_collaboration_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.collaboration_data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentCollaboration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AgentCollaboration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentCollaboration::GetClassData() const { return &_class_data_; }


void AgentCollaboration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AgentCollaboration*>(&to_msg);
  auto& from = static_cast<const AgentCollaboration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.AgentCollaboration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_collaboration_type().empty()) {
    _this->_internal_set_collaboration_type(from._internal_collaboration_type());
  }
  if (!from._internal_target_agent_id().empty()) {
    _this->_internal_set_target_agent_id(from._internal_target_agent_id());
  }
  if (from._internal_has_collaboration_data()) {
    _this->_internal_mutable_collaboration_data()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_collaboration_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentCollaboration::CopyFrom(const AgentCollaboration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.AgentCollaboration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentCollaboration::IsInitialized() const {
  return true;
}

void AgentCollaboration::InternalSwap(AgentCollaboration* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.collaboration_type_, lhs_arena,
      &other->_impl_.collaboration_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.target_agent_id_, lhs_arena,
      &other->_impl_.target_agent_id_, rhs_arena
  );
  swap(_impl_.collaboration_data_, other->_impl_.collaboration_data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentCollaboration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[14]);
}

// ===================================================================

class AgentError::_Internal {
 public:
};

AgentError::AgentError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.AgentError)
}
AgentError::AgentError(const AgentError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AgentError* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_code_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.error_context_){}
    , decltype(_impl_.is_recoverable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_code().empty()) {
    _this->_impl_.error_code_.Set(from._internal_error_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_context_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_context_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_context().empty()) {
    _this->_impl_.error_context_.Set(from._internal_error_context(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.is_recoverable_ = from._impl_.is_recoverable_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.AgentError)
}

inline void AgentError::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_code_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.error_context_){}
    , decltype(_impl_.is_recoverable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_context_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_context_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AgentError::~AgentError() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.AgentError)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_code_.Destroy();
  _impl_.error_message_.Destroy();
  _impl_.error_context_.Destroy();
}

void AgentError::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AgentError::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.AgentError)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_code_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.error_context_.ClearToEmpty();
  _impl_.is_recoverable_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentError::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_error_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentError.error_code"));
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentError.error_message"));
        } else
          goto handle_unusual;
        continue;
      // string error_context = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_context();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AgentError.error_context"));
        } else
          goto handle_unusual;
        continue;
      // bool is_recoverable = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.is_recoverable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentError::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.AgentError)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_code = 1;
  if (!this->_internal_error_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_code().data(), static_cast<int>(this->_internal_error_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentError.error_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error_code(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentError.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // string error_context = 3;
  if (!this->_internal_error_context().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_context().data(), static_cast<int>(this->_internal_error_context().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AgentError.error_context");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_context(), target);
  }

  // bool is_recoverable = 4;
  if (this->_internal_is_recoverable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_recoverable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.AgentError)
  return target;
}

size_t AgentError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.AgentError)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_code = 1;
  if (!this->_internal_error_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_code());
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // string error_context = 3;
  if (!this->_internal_error_context().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_context());
  }

  // bool is_recoverable = 4;
  if (this->_internal_is_recoverable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AgentError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentError::GetClassData() const { return &_class_data_; }


void AgentError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AgentError*>(&to_msg);
  auto& from = static_cast<const AgentError&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.AgentError)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_code().empty()) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (!from._internal_error_context().empty()) {
    _this->_internal_set_error_context(from._internal_error_context());
  }
  if (from._internal_is_recoverable() != 0) {
    _this->_internal_set_is_recoverable(from._internal_is_recoverable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentError::CopyFrom(const AgentError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.AgentError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentError::IsInitialized() const {
  return true;
}

void AgentError::InternalSwap(AgentError* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_code_, lhs_arena,
      &other->_impl_.error_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_context_, lhs_arena,
      &other->_impl_.error_context_, rhs_arena
  );
  swap(_impl_.is_recoverable_, other->_impl_.is_recoverable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentError::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[15]);
}

// ===================================================================

class ToolMessage::_Internal {
 public:
  static const ::unhinged::messaging::ToolInvocation& invocation(const ToolMessage* msg);
  static const ::unhinged::messaging::ToolResult& result(const ToolMessage* msg);
  static const ::unhinged::messaging::ToolError& tool_error(const ToolMessage* msg);
  static const ::unhinged::messaging::ToolRegistration& registration(const ToolMessage* msg);
};

const ::unhinged::messaging::ToolInvocation&
ToolMessage::_Internal::invocation(const ToolMessage* msg) {
  return *msg->_impl_.message_data_.invocation_;
}
const ::unhinged::messaging::ToolResult&
ToolMessage::_Internal::result(const ToolMessage* msg) {
  return *msg->_impl_.message_data_.result_;
}
const ::unhinged::messaging::ToolError&
ToolMessage::_Internal::tool_error(const ToolMessage* msg) {
  return *msg->_impl_.message_data_.tool_error_;
}
const ::unhinged::messaging::ToolRegistration&
ToolMessage::_Internal::registration(const ToolMessage* msg) {
  return *msg->_impl_.message_data_.registration_;
}
void ToolMessage::set_allocated_invocation(::unhinged::messaging::ToolInvocation* invocation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (invocation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(invocation);
    if (message_arena != submessage_arena) {
      invocation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, invocation, submessage_arena);
    }
    set_has_invocation();
    _impl_.message_data_.invocation_ = invocation;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.ToolMessage.invocation)
}
void ToolMessage::set_allocated_result(::unhinged::messaging::ToolResult* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    set_has_result();
    _impl_.message_data_.result_ = result;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.ToolMessage.result)
}
void ToolMessage::set_allocated_tool_error(::unhinged::messaging::ToolError* tool_error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (tool_error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(tool_error);
    if (message_arena != submessage_arena) {
      tool_error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tool_error, submessage_arena);
    }
    set_has_tool_error();
    _impl_.message_data_.tool_error_ = tool_error;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.ToolMessage.tool_error)
}
void ToolMessage::set_allocated_registration(::unhinged::messaging::ToolRegistration* registration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (registration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(registration);
    if (message_arena != submessage_arena) {
      registration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, registration, submessage_arena);
    }
    set_has_registration();
    _impl_.message_data_.registration_ = registration;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.ToolMessage.registration)
}
ToolMessage::ToolMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ToolMessage)
}
ToolMessage::ToolMessage(const ToolMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ToolMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tool_id_){}
    , decltype(_impl_.tool_name_){}
    , decltype(_impl_.tool_version_){}
    , decltype(_impl_.message_type_){}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tool_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tool_id().empty()) {
    _this->_impl_.tool_id_.Set(from._internal_tool_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.tool_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tool_name().empty()) {
    _this->_impl_.tool_name_.Set(from._internal_tool_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.tool_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tool_version().empty()) {
    _this->_impl_.tool_version_.Set(from._internal_tool_version(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.message_type_ = from._impl_.message_type_;
  clear_has_message_data();
  switch (from.message_data_case()) {
    case kInvocation: {
      _this->_internal_mutable_invocation()->::unhinged::messaging::ToolInvocation::MergeFrom(
          from._internal_invocation());
      break;
    }
    case kResult: {
      _this->_internal_mutable_result()->::unhinged::messaging::ToolResult::MergeFrom(
          from._internal_result());
      break;
    }
    case kToolError: {
      _this->_internal_mutable_tool_error()->::unhinged::messaging::ToolError::MergeFrom(
          from._internal_tool_error());
      break;
    }
    case kRegistration: {
      _this->_internal_mutable_registration()->::unhinged::messaging::ToolRegistration::MergeFrom(
          from._internal_registration());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ToolMessage)
}

inline void ToolMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tool_id_){}
    , decltype(_impl_.tool_name_){}
    , decltype(_impl_.tool_version_){}
    , decltype(_impl_.message_type_){0}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.tool_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.tool_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.tool_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_message_data();
}

ToolMessage::~ToolMessage() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ToolMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ToolMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tool_id_.Destroy();
  _impl_.tool_name_.Destroy();
  _impl_.tool_version_.Destroy();
  if (has_message_data()) {
    clear_message_data();
  }
}

void ToolMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ToolMessage::clear_message_data() {
// @@protoc_insertion_point(one_of_clear_start:unhinged.messaging.ToolMessage)
  switch (message_data_case()) {
    case kInvocation: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.invocation_;
      }
      break;
    }
    case kResult: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.result_;
      }
      break;
    }
    case kToolError: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.tool_error_;
      }
      break;
    }
    case kRegistration: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.registration_;
      }
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_DATA_NOT_SET;
}


void ToolMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ToolMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tool_id_.ClearToEmpty();
  _impl_.tool_name_.ClearToEmpty();
  _impl_.tool_version_.ClearToEmpty();
  _impl_.message_type_ = 0;
  clear_message_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ToolMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tool_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tool_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolMessage.tool_id"));
        } else
          goto handle_unusual;
        continue;
      // string tool_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_tool_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolMessage.tool_name"));
        } else
          goto handle_unusual;
        continue;
      // string tool_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_tool_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolMessage.tool_version"));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.ToolMessageType message_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_message_type(static_cast<::unhinged::messaging::ToolMessageType>(val));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.ToolInvocation invocation = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_invocation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.ToolResult result = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.ToolError tool_error = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_tool_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.ToolRegistration registration = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_registration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ToolMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ToolMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tool_id = 1;
  if (!this->_internal_tool_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tool_id().data(), static_cast<int>(this->_internal_tool_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolMessage.tool_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tool_id(), target);
  }

  // string tool_name = 2;
  if (!this->_internal_tool_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tool_name().data(), static_cast<int>(this->_internal_tool_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolMessage.tool_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tool_name(), target);
  }

  // string tool_version = 3;
  if (!this->_internal_tool_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tool_version().data(), static_cast<int>(this->_internal_tool_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolMessage.tool_version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_tool_version(), target);
  }

  // .unhinged.messaging.ToolMessageType message_type = 4;
  if (this->_internal_message_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_message_type(), target);
  }

  // .unhinged.messaging.ToolInvocation invocation = 10;
  if (_internal_has_invocation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::invocation(this),
        _Internal::invocation(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.ToolResult result = 11;
  if (_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.ToolError tool_error = 12;
  if (_internal_has_tool_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::tool_error(this),
        _Internal::tool_error(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.ToolRegistration registration = 13;
  if (_internal_has_registration()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::registration(this),
        _Internal::registration(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ToolMessage)
  return target;
}

size_t ToolMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ToolMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tool_id = 1;
  if (!this->_internal_tool_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tool_id());
  }

  // string tool_name = 2;
  if (!this->_internal_tool_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tool_name());
  }

  // string tool_version = 3;
  if (!this->_internal_tool_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tool_version());
  }

  // .unhinged.messaging.ToolMessageType message_type = 4;
  if (this->_internal_message_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_message_type());
  }

  switch (message_data_case()) {
    // .unhinged.messaging.ToolInvocation invocation = 10;
    case kInvocation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.invocation_);
      break;
    }
    // .unhinged.messaging.ToolResult result = 11;
    case kResult: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.result_);
      break;
    }
    // .unhinged.messaging.ToolError tool_error = 12;
    case kToolError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.tool_error_);
      break;
    }
    // .unhinged.messaging.ToolRegistration registration = 13;
    case kRegistration: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.registration_);
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ToolMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ToolMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ToolMessage::GetClassData() const { return &_class_data_; }


void ToolMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ToolMessage*>(&to_msg);
  auto& from = static_cast<const ToolMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ToolMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tool_id().empty()) {
    _this->_internal_set_tool_id(from._internal_tool_id());
  }
  if (!from._internal_tool_name().empty()) {
    _this->_internal_set_tool_name(from._internal_tool_name());
  }
  if (!from._internal_tool_version().empty()) {
    _this->_internal_set_tool_version(from._internal_tool_version());
  }
  if (from._internal_message_type() != 0) {
    _this->_internal_set_message_type(from._internal_message_type());
  }
  switch (from.message_data_case()) {
    case kInvocation: {
      _this->_internal_mutable_invocation()->::unhinged::messaging::ToolInvocation::MergeFrom(
          from._internal_invocation());
      break;
    }
    case kResult: {
      _this->_internal_mutable_result()->::unhinged::messaging::ToolResult::MergeFrom(
          from._internal_result());
      break;
    }
    case kToolError: {
      _this->_internal_mutable_tool_error()->::unhinged::messaging::ToolError::MergeFrom(
          from._internal_tool_error());
      break;
    }
    case kRegistration: {
      _this->_internal_mutable_registration()->::unhinged::messaging::ToolRegistration::MergeFrom(
          from._internal_registration());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ToolMessage::CopyFrom(const ToolMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ToolMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToolMessage::IsInitialized() const {
  return true;
}

void ToolMessage::InternalSwap(ToolMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tool_id_, lhs_arena,
      &other->_impl_.tool_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tool_name_, lhs_arena,
      &other->_impl_.tool_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tool_version_, lhs_arena,
      &other->_impl_.tool_version_, rhs_arena
  );
  swap(_impl_.message_type_, other->_impl_.message_type_);
  swap(_impl_.message_data_, other->_impl_.message_data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ToolMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[16]);
}

// ===================================================================

class ToolInvocation::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& arguments(const ToolInvocation* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& context(const ToolInvocation* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
ToolInvocation::_Internal::arguments(const ToolInvocation* msg) {
  return *msg->_impl_.arguments_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
ToolInvocation::_Internal::context(const ToolInvocation* msg) {
  return *msg->_impl_.context_;
}
void ToolInvocation::clear_arguments() {
  if (GetArenaForAllocation() == nullptr && _impl_.arguments_ != nullptr) {
    delete _impl_.arguments_;
  }
  _impl_.arguments_ = nullptr;
}
void ToolInvocation::clear_context() {
  if (GetArenaForAllocation() == nullptr && _impl_.context_ != nullptr) {
    delete _impl_.context_;
  }
  _impl_.context_ = nullptr;
}
ToolInvocation::ToolInvocation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ToolInvocation)
}
ToolInvocation::ToolInvocation(const ToolInvocation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ToolInvocation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invocation_id_){}
    , decltype(_impl_.arguments_){nullptr}
    , decltype(_impl_.context_){nullptr}
    , decltype(_impl_.timeout_seconds_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.invocation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.invocation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_invocation_id().empty()) {
    _this->_impl_.invocation_id_.Set(from._internal_invocation_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_arguments()) {
    _this->_impl_.arguments_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.arguments_);
  }
  if (from._internal_has_context()) {
    _this->_impl_.context_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.context_);
  }
  _this->_impl_.timeout_seconds_ = from._impl_.timeout_seconds_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ToolInvocation)
}

inline void ToolInvocation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invocation_id_){}
    , decltype(_impl_.arguments_){nullptr}
    , decltype(_impl_.context_){nullptr}
    , decltype(_impl_.timeout_seconds_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.invocation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.invocation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ToolInvocation::~ToolInvocation() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ToolInvocation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ToolInvocation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.invocation_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.arguments_;
  if (this != internal_default_instance()) delete _impl_.context_;
}

void ToolInvocation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ToolInvocation::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ToolInvocation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.invocation_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.arguments_ != nullptr) {
    delete _impl_.arguments_;
  }
  _impl_.arguments_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.context_ != nullptr) {
    delete _impl_.context_;
  }
  _impl_.context_ = nullptr;
  _impl_.timeout_seconds_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ToolInvocation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string invocation_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_invocation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolInvocation.invocation_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct arguments = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_arguments(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct context = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_context(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 timeout_seconds = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.timeout_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ToolInvocation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ToolInvocation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string invocation_id = 1;
  if (!this->_internal_invocation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invocation_id().data(), static_cast<int>(this->_internal_invocation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolInvocation.invocation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_invocation_id(), target);
  }

  // .google.protobuf.Struct arguments = 2;
  if (this->_internal_has_arguments()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::arguments(this),
        _Internal::arguments(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct context = 3;
  if (this->_internal_has_context()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::context(this),
        _Internal::context(this).GetCachedSize(), target, stream);
  }

  // int32 timeout_seconds = 4;
  if (this->_internal_timeout_seconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_timeout_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ToolInvocation)
  return target;
}

size_t ToolInvocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ToolInvocation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invocation_id = 1;
  if (!this->_internal_invocation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invocation_id());
  }

  // .google.protobuf.Struct arguments = 2;
  if (this->_internal_has_arguments()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.arguments_);
  }

  // .google.protobuf.Struct context = 3;
  if (this->_internal_has_context()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.context_);
  }

  // int32 timeout_seconds = 4;
  if (this->_internal_timeout_seconds() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_timeout_seconds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ToolInvocation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ToolInvocation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ToolInvocation::GetClassData() const { return &_class_data_; }


void ToolInvocation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ToolInvocation*>(&to_msg);
  auto& from = static_cast<const ToolInvocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ToolInvocation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_invocation_id().empty()) {
    _this->_internal_set_invocation_id(from._internal_invocation_id());
  }
  if (from._internal_has_arguments()) {
    _this->_internal_mutable_arguments()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_arguments());
  }
  if (from._internal_has_context()) {
    _this->_internal_mutable_context()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_context());
  }
  if (from._internal_timeout_seconds() != 0) {
    _this->_internal_set_timeout_seconds(from._internal_timeout_seconds());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ToolInvocation::CopyFrom(const ToolInvocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ToolInvocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToolInvocation::IsInitialized() const {
  return true;
}

void ToolInvocation::InternalSwap(ToolInvocation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.invocation_id_, lhs_arena,
      &other->_impl_.invocation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ToolInvocation, _impl_.timeout_seconds_)
      + sizeof(ToolInvocation::_impl_.timeout_seconds_)
      - PROTOBUF_FIELD_OFFSET(ToolInvocation, _impl_.arguments_)>(
          reinterpret_cast<char*>(&_impl_.arguments_),
          reinterpret_cast<char*>(&other->_impl_.arguments_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ToolInvocation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[17]);
}

// ===================================================================

class ToolResult::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& result_data(const ToolResult* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
ToolResult::_Internal::result_data(const ToolResult* msg) {
  return *msg->_impl_.result_data_;
}
void ToolResult::clear_result_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.result_data_ != nullptr) {
    delete _impl_.result_data_;
  }
  _impl_.result_data_ = nullptr;
}
ToolResult::ToolResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ToolResult)
}
ToolResult::ToolResult(const ToolResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ToolResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.artifacts_){from._impl_.artifacts_}
    , decltype(_impl_.invocation_id_){}
    , decltype(_impl_.result_text_){}
    , decltype(_impl_.result_data_){nullptr}
    , decltype(_impl_.success_){}
    , decltype(_impl_.execution_time_ms_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.invocation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.invocation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_invocation_id().empty()) {
    _this->_impl_.invocation_id_.Set(from._internal_invocation_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.result_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result_text().empty()) {
    _this->_impl_.result_text_.Set(from._internal_result_text(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_result_data()) {
    _this->_impl_.result_data_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.result_data_);
  }
  ::memcpy(&_impl_.success_, &from._impl_.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.execution_time_ms_) -
    reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.execution_time_ms_));
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ToolResult)
}

inline void ToolResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.artifacts_){arena}
    , decltype(_impl_.invocation_id_){}
    , decltype(_impl_.result_text_){}
    , decltype(_impl_.result_data_){nullptr}
    , decltype(_impl_.success_){false}
    , decltype(_impl_.execution_time_ms_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.invocation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.invocation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.result_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ToolResult::~ToolResult() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ToolResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ToolResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifacts_.~RepeatedPtrField();
  _impl_.invocation_id_.Destroy();
  _impl_.result_text_.Destroy();
  if (this != internal_default_instance()) delete _impl_.result_data_;
}

void ToolResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ToolResult::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ToolResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifacts_.Clear();
  _impl_.invocation_id_.ClearToEmpty();
  _impl_.result_text_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.result_data_ != nullptr) {
    delete _impl_.result_data_;
  }
  _impl_.result_data_ = nullptr;
  ::memset(&_impl_.success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.execution_time_ms_) -
      reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.execution_time_ms_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ToolResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string invocation_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_invocation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolResult.invocation_id"));
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Any result_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string result_text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_result_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolResult.result_text"));
        } else
          goto handle_unusual;
        continue;
      // repeated string artifacts = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_artifacts();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolResult.artifacts"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // float execution_time_ms = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          _impl_.execution_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ToolResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ToolResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string invocation_id = 1;
  if (!this->_internal_invocation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invocation_id().data(), static_cast<int>(this->_internal_invocation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolResult.invocation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_invocation_id(), target);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  // .google.protobuf.Any result_data = 3;
  if (this->_internal_has_result_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::result_data(this),
        _Internal::result_data(this).GetCachedSize(), target, stream);
  }

  // string result_text = 4;
  if (!this->_internal_result_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result_text().data(), static_cast<int>(this->_internal_result_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolResult.result_text");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_result_text(), target);
  }

  // repeated string artifacts = 5;
  for (int i = 0, n = this->_internal_artifacts_size(); i < n; i++) {
    const auto& s = this->_internal_artifacts(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolResult.artifacts");
    target = stream->WriteString(5, s, target);
  }

  // float execution_time_ms = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_execution_time_ms = this->_internal_execution_time_ms();
  uint32_t raw_execution_time_ms;
  memcpy(&raw_execution_time_ms, &tmp_execution_time_ms, sizeof(tmp_execution_time_ms));
  if (raw_execution_time_ms != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(6, this->_internal_execution_time_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ToolResult)
  return target;
}

size_t ToolResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ToolResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string artifacts = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.artifacts_.size());
  for (int i = 0, n = _impl_.artifacts_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.artifacts_.Get(i));
  }

  // string invocation_id = 1;
  if (!this->_internal_invocation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invocation_id());
  }

  // string result_text = 4;
  if (!this->_internal_result_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result_text());
  }

  // .google.protobuf.Any result_data = 3;
  if (this->_internal_has_result_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_data_);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  // float execution_time_ms = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_execution_time_ms = this->_internal_execution_time_ms();
  uint32_t raw_execution_time_ms;
  memcpy(&raw_execution_time_ms, &tmp_execution_time_ms, sizeof(tmp_execution_time_ms));
  if (raw_execution_time_ms != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ToolResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ToolResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ToolResult::GetClassData() const { return &_class_data_; }


void ToolResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ToolResult*>(&to_msg);
  auto& from = static_cast<const ToolResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ToolResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifacts_.MergeFrom(from._impl_.artifacts_);
  if (!from._internal_invocation_id().empty()) {
    _this->_internal_set_invocation_id(from._internal_invocation_id());
  }
  if (!from._internal_result_text().empty()) {
    _this->_internal_set_result_text(from._internal_result_text());
  }
  if (from._internal_has_result_data()) {
    _this->_internal_mutable_result_data()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_result_data());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_execution_time_ms = from._internal_execution_time_ms();
  uint32_t raw_execution_time_ms;
  memcpy(&raw_execution_time_ms, &tmp_execution_time_ms, sizeof(tmp_execution_time_ms));
  if (raw_execution_time_ms != 0) {
    _this->_internal_set_execution_time_ms(from._internal_execution_time_ms());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ToolResult::CopyFrom(const ToolResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ToolResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToolResult::IsInitialized() const {
  return true;
}

void ToolResult::InternalSwap(ToolResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.artifacts_.InternalSwap(&other->_impl_.artifacts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.invocation_id_, lhs_arena,
      &other->_impl_.invocation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_text_, lhs_arena,
      &other->_impl_.result_text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ToolResult, _impl_.execution_time_ms_)
      + sizeof(ToolResult::_impl_.execution_time_ms_)
      - PROTOBUF_FIELD_OFFSET(ToolResult, _impl_.result_data_)>(
          reinterpret_cast<char*>(&_impl_.result_data_),
          reinterpret_cast<char*>(&other->_impl_.result_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ToolResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[18]);
}

// ===================================================================

class ToolError::_Internal {
 public:
};

ToolError::ToolError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ToolError)
}
ToolError::ToolError(const ToolError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ToolError* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invocation_id_){}
    , decltype(_impl_.error_code_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.is_retryable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.invocation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.invocation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_invocation_id().empty()) {
    _this->_impl_.invocation_id_.Set(from._internal_invocation_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_code().empty()) {
    _this->_impl_.error_code_.Set(from._internal_error_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.is_retryable_ = from._impl_.is_retryable_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ToolError)
}

inline void ToolError::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invocation_id_){}
    , decltype(_impl_.error_code_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.is_retryable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.invocation_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.invocation_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ToolError::~ToolError() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ToolError)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ToolError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.invocation_id_.Destroy();
  _impl_.error_code_.Destroy();
  _impl_.error_message_.Destroy();
}

void ToolError::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ToolError::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ToolError)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.invocation_id_.ClearToEmpty();
  _impl_.error_code_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.is_retryable_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ToolError::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string invocation_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_invocation_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolError.invocation_id"));
        } else
          goto handle_unusual;
        continue;
      // string error_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolError.error_code"));
        } else
          goto handle_unusual;
        continue;
      // string error_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolError.error_message"));
        } else
          goto handle_unusual;
        continue;
      // bool is_retryable = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.is_retryable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ToolError::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ToolError)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string invocation_id = 1;
  if (!this->_internal_invocation_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invocation_id().data(), static_cast<int>(this->_internal_invocation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolError.invocation_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_invocation_id(), target);
  }

  // string error_code = 2;
  if (!this->_internal_error_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_code().data(), static_cast<int>(this->_internal_error_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolError.error_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_code(), target);
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolError.error_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_message(), target);
  }

  // bool is_retryable = 4;
  if (this->_internal_is_retryable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_retryable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ToolError)
  return target;
}

size_t ToolError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ToolError)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invocation_id = 1;
  if (!this->_internal_invocation_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invocation_id());
  }

  // string error_code = 2;
  if (!this->_internal_error_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_code());
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool is_retryable = 4;
  if (this->_internal_is_retryable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ToolError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ToolError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ToolError::GetClassData() const { return &_class_data_; }


void ToolError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ToolError*>(&to_msg);
  auto& from = static_cast<const ToolError&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ToolError)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_invocation_id().empty()) {
    _this->_internal_set_invocation_id(from._internal_invocation_id());
  }
  if (!from._internal_error_code().empty()) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_is_retryable() != 0) {
    _this->_internal_set_is_retryable(from._internal_is_retryable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ToolError::CopyFrom(const ToolError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ToolError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToolError::IsInitialized() const {
  return true;
}

void ToolError::InternalSwap(ToolError* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.invocation_id_, lhs_arena,
      &other->_impl_.invocation_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_code_, lhs_arena,
      &other->_impl_.error_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.is_retryable_, other->_impl_.is_retryable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ToolError::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[19]);
}

// ===================================================================

class ToolRegistration::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& schema(const ToolRegistration* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
ToolRegistration::_Internal::schema(const ToolRegistration* msg) {
  return *msg->_impl_.schema_;
}
void ToolRegistration::clear_schema() {
  if (GetArenaForAllocation() == nullptr && _impl_.schema_ != nullptr) {
    delete _impl_.schema_;
  }
  _impl_.schema_ = nullptr;
}
ToolRegistration::ToolRegistration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ToolRegistration)
}
ToolRegistration::ToolRegistration(const ToolRegistration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ToolRegistration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.capabilities_){from._impl_.capabilities_}
    , decltype(_impl_.tool_name_){}
    , decltype(_impl_.tool_version_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.endpoint_url_){}
    , decltype(_impl_.schema_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tool_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tool_name().empty()) {
    _this->_impl_.tool_name_.Set(from._internal_tool_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.tool_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tool_version().empty()) {
    _this->_impl_.tool_version_.Set(from._internal_tool_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.endpoint_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.endpoint_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_endpoint_url().empty()) {
    _this->_impl_.endpoint_url_.Set(from._internal_endpoint_url(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_schema()) {
    _this->_impl_.schema_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.schema_);
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ToolRegistration)
}

inline void ToolRegistration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.capabilities_){arena}
    , decltype(_impl_.tool_name_){}
    , decltype(_impl_.tool_version_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.endpoint_url_){}
    , decltype(_impl_.schema_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tool_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.tool_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tool_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.endpoint_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.endpoint_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ToolRegistration::~ToolRegistration() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ToolRegistration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ToolRegistration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.capabilities_.~RepeatedPtrField();
  _impl_.tool_name_.Destroy();
  _impl_.tool_version_.Destroy();
  _impl_.description_.Destroy();
  _impl_.endpoint_url_.Destroy();
  if (this != internal_default_instance()) delete _impl_.schema_;
}

void ToolRegistration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ToolRegistration::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ToolRegistration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capabilities_.Clear();
  _impl_.tool_name_.ClearToEmpty();
  _impl_.tool_version_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.endpoint_url_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.schema_ != nullptr) {
    delete _impl_.schema_;
  }
  _impl_.schema_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ToolRegistration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tool_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tool_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolRegistration.tool_name"));
        } else
          goto handle_unusual;
        continue;
      // string tool_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_tool_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolRegistration.tool_version"));
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolRegistration.description"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct schema = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_schema(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string capabilities = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_capabilities();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolRegistration.capabilities"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string endpoint_url = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_endpoint_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ToolRegistration.endpoint_url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ToolRegistration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ToolRegistration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tool_name = 1;
  if (!this->_internal_tool_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tool_name().data(), static_cast<int>(this->_internal_tool_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolRegistration.tool_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tool_name(), target);
  }

  // string tool_version = 2;
  if (!this->_internal_tool_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tool_version().data(), static_cast<int>(this->_internal_tool_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolRegistration.tool_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tool_version(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolRegistration.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // .google.protobuf.Struct schema = 4;
  if (this->_internal_has_schema()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::schema(this),
        _Internal::schema(this).GetCachedSize(), target, stream);
  }

  // repeated string capabilities = 5;
  for (int i = 0, n = this->_internal_capabilities_size(); i < n; i++) {
    const auto& s = this->_internal_capabilities(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolRegistration.capabilities");
    target = stream->WriteString(5, s, target);
  }

  // string endpoint_url = 6;
  if (!this->_internal_endpoint_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endpoint_url().data(), static_cast<int>(this->_internal_endpoint_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ToolRegistration.endpoint_url");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_endpoint_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ToolRegistration)
  return target;
}

size_t ToolRegistration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ToolRegistration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string capabilities = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.capabilities_.size());
  for (int i = 0, n = _impl_.capabilities_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.capabilities_.Get(i));
  }

  // string tool_name = 1;
  if (!this->_internal_tool_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tool_name());
  }

  // string tool_version = 2;
  if (!this->_internal_tool_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tool_version());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string endpoint_url = 6;
  if (!this->_internal_endpoint_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endpoint_url());
  }

  // .google.protobuf.Struct schema = 4;
  if (this->_internal_has_schema()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.schema_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ToolRegistration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ToolRegistration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ToolRegistration::GetClassData() const { return &_class_data_; }


void ToolRegistration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ToolRegistration*>(&to_msg);
  auto& from = static_cast<const ToolRegistration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ToolRegistration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.capabilities_.MergeFrom(from._impl_.capabilities_);
  if (!from._internal_tool_name().empty()) {
    _this->_internal_set_tool_name(from._internal_tool_name());
  }
  if (!from._internal_tool_version().empty()) {
    _this->_internal_set_tool_version(from._internal_tool_version());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_endpoint_url().empty()) {
    _this->_internal_set_endpoint_url(from._internal_endpoint_url());
  }
  if (from._internal_has_schema()) {
    _this->_internal_mutable_schema()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_schema());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ToolRegistration::CopyFrom(const ToolRegistration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ToolRegistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToolRegistration::IsInitialized() const {
  return true;
}

void ToolRegistration::InternalSwap(ToolRegistration* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.capabilities_.InternalSwap(&other->_impl_.capabilities_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tool_name_, lhs_arena,
      &other->_impl_.tool_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tool_version_, lhs_arena,
      &other->_impl_.tool_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.endpoint_url_, lhs_arena,
      &other->_impl_.endpoint_url_, rhs_arena
  );
  swap(_impl_.schema_, other->_impl_.schema_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ToolRegistration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[20]);
}

// ===================================================================

class WorkflowMessage::_Internal {
 public:
  static const ::unhinged::messaging::WorkflowTrigger& trigger(const WorkflowMessage* msg);
  static const ::unhinged::messaging::WorkflowStepExecution& step_execution(const WorkflowMessage* msg);
  static const ::unhinged::messaging::WorkflowCompletion& completion(const WorkflowMessage* msg);
  static const ::unhinged::messaging::WorkflowControl& control(const WorkflowMessage* msg);
};

const ::unhinged::messaging::WorkflowTrigger&
WorkflowMessage::_Internal::trigger(const WorkflowMessage* msg) {
  return *msg->_impl_.message_data_.trigger_;
}
const ::unhinged::messaging::WorkflowStepExecution&
WorkflowMessage::_Internal::step_execution(const WorkflowMessage* msg) {
  return *msg->_impl_.message_data_.step_execution_;
}
const ::unhinged::messaging::WorkflowCompletion&
WorkflowMessage::_Internal::completion(const WorkflowMessage* msg) {
  return *msg->_impl_.message_data_.completion_;
}
const ::unhinged::messaging::WorkflowControl&
WorkflowMessage::_Internal::control(const WorkflowMessage* msg) {
  return *msg->_impl_.message_data_.control_;
}
void WorkflowMessage::set_allocated_trigger(::unhinged::messaging::WorkflowTrigger* trigger) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (trigger) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(trigger);
    if (message_arena != submessage_arena) {
      trigger = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, trigger, submessage_arena);
    }
    set_has_trigger();
    _impl_.message_data_.trigger_ = trigger;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.WorkflowMessage.trigger)
}
void WorkflowMessage::set_allocated_step_execution(::unhinged::messaging::WorkflowStepExecution* step_execution) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (step_execution) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(step_execution);
    if (message_arena != submessage_arena) {
      step_execution = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, step_execution, submessage_arena);
    }
    set_has_step_execution();
    _impl_.message_data_.step_execution_ = step_execution;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.WorkflowMessage.step_execution)
}
void WorkflowMessage::set_allocated_completion(::unhinged::messaging::WorkflowCompletion* completion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (completion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(completion);
    if (message_arena != submessage_arena) {
      completion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, completion, submessage_arena);
    }
    set_has_completion();
    _impl_.message_data_.completion_ = completion;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.WorkflowMessage.completion)
}
void WorkflowMessage::set_allocated_control(::unhinged::messaging::WorkflowControl* control) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (control) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(control);
    if (message_arena != submessage_arena) {
      control = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, control, submessage_arena);
    }
    set_has_control();
    _impl_.message_data_.control_ = control;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.WorkflowMessage.control)
}
WorkflowMessage::WorkflowMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.WorkflowMessage)
}
WorkflowMessage::WorkflowMessage(const WorkflowMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WorkflowMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.workflow_id_){}
    , decltype(_impl_.execution_id_){}
    , decltype(_impl_.message_type_){}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.workflow_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.workflow_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_workflow_id().empty()) {
    _this->_impl_.workflow_id_.Set(from._internal_workflow_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.execution_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.execution_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_execution_id().empty()) {
    _this->_impl_.execution_id_.Set(from._internal_execution_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.message_type_ = from._impl_.message_type_;
  clear_has_message_data();
  switch (from.message_data_case()) {
    case kTrigger: {
      _this->_internal_mutable_trigger()->::unhinged::messaging::WorkflowTrigger::MergeFrom(
          from._internal_trigger());
      break;
    }
    case kStepExecution: {
      _this->_internal_mutable_step_execution()->::unhinged::messaging::WorkflowStepExecution::MergeFrom(
          from._internal_step_execution());
      break;
    }
    case kCompletion: {
      _this->_internal_mutable_completion()->::unhinged::messaging::WorkflowCompletion::MergeFrom(
          from._internal_completion());
      break;
    }
    case kControl: {
      _this->_internal_mutable_control()->::unhinged::messaging::WorkflowControl::MergeFrom(
          from._internal_control());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.WorkflowMessage)
}

inline void WorkflowMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.workflow_id_){}
    , decltype(_impl_.execution_id_){}
    , decltype(_impl_.message_type_){0}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.workflow_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.workflow_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.execution_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.execution_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_message_data();
}

WorkflowMessage::~WorkflowMessage() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.WorkflowMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WorkflowMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.workflow_id_.Destroy();
  _impl_.execution_id_.Destroy();
  if (has_message_data()) {
    clear_message_data();
  }
}

void WorkflowMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WorkflowMessage::clear_message_data() {
// @@protoc_insertion_point(one_of_clear_start:unhinged.messaging.WorkflowMessage)
  switch (message_data_case()) {
    case kTrigger: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.trigger_;
      }
      break;
    }
    case kStepExecution: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.step_execution_;
      }
      break;
    }
    case kCompletion: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.completion_;
      }
      break;
    }
    case kControl: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.control_;
      }
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_DATA_NOT_SET;
}


void WorkflowMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.WorkflowMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.workflow_id_.ClearToEmpty();
  _impl_.execution_id_.ClearToEmpty();
  _impl_.message_type_ = 0;
  clear_message_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkflowMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string workflow_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_workflow_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowMessage.workflow_id"));
        } else
          goto handle_unusual;
        continue;
      // string execution_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_execution_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowMessage.execution_id"));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.WorkflowMessageType message_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_message_type(static_cast<::unhinged::messaging::WorkflowMessageType>(val));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.WorkflowTrigger trigger = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_trigger(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.WorkflowStepExecution step_execution = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_step_execution(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.WorkflowCompletion completion = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_completion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.WorkflowControl control = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_control(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WorkflowMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.WorkflowMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string workflow_id = 1;
  if (!this->_internal_workflow_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow_id().data(), static_cast<int>(this->_internal_workflow_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowMessage.workflow_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_workflow_id(), target);
  }

  // string execution_id = 2;
  if (!this->_internal_execution_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_execution_id().data(), static_cast<int>(this->_internal_execution_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowMessage.execution_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_execution_id(), target);
  }

  // .unhinged.messaging.WorkflowMessageType message_type = 3;
  if (this->_internal_message_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_message_type(), target);
  }

  // .unhinged.messaging.WorkflowTrigger trigger = 10;
  if (_internal_has_trigger()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::trigger(this),
        _Internal::trigger(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.WorkflowStepExecution step_execution = 11;
  if (_internal_has_step_execution()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::step_execution(this),
        _Internal::step_execution(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.WorkflowCompletion completion = 12;
  if (_internal_has_completion()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::completion(this),
        _Internal::completion(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.WorkflowControl control = 13;
  if (_internal_has_control()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::control(this),
        _Internal::control(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.WorkflowMessage)
  return target;
}

size_t WorkflowMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.WorkflowMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string workflow_id = 1;
  if (!this->_internal_workflow_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow_id());
  }

  // string execution_id = 2;
  if (!this->_internal_execution_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_execution_id());
  }

  // .unhinged.messaging.WorkflowMessageType message_type = 3;
  if (this->_internal_message_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_message_type());
  }

  switch (message_data_case()) {
    // .unhinged.messaging.WorkflowTrigger trigger = 10;
    case kTrigger: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.trigger_);
      break;
    }
    // .unhinged.messaging.WorkflowStepExecution step_execution = 11;
    case kStepExecution: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.step_execution_);
      break;
    }
    // .unhinged.messaging.WorkflowCompletion completion = 12;
    case kCompletion: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.completion_);
      break;
    }
    // .unhinged.messaging.WorkflowControl control = 13;
    case kControl: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.control_);
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WorkflowMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WorkflowMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WorkflowMessage::GetClassData() const { return &_class_data_; }


void WorkflowMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WorkflowMessage*>(&to_msg);
  auto& from = static_cast<const WorkflowMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.WorkflowMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_workflow_id().empty()) {
    _this->_internal_set_workflow_id(from._internal_workflow_id());
  }
  if (!from._internal_execution_id().empty()) {
    _this->_internal_set_execution_id(from._internal_execution_id());
  }
  if (from._internal_message_type() != 0) {
    _this->_internal_set_message_type(from._internal_message_type());
  }
  switch (from.message_data_case()) {
    case kTrigger: {
      _this->_internal_mutable_trigger()->::unhinged::messaging::WorkflowTrigger::MergeFrom(
          from._internal_trigger());
      break;
    }
    case kStepExecution: {
      _this->_internal_mutable_step_execution()->::unhinged::messaging::WorkflowStepExecution::MergeFrom(
          from._internal_step_execution());
      break;
    }
    case kCompletion: {
      _this->_internal_mutable_completion()->::unhinged::messaging::WorkflowCompletion::MergeFrom(
          from._internal_completion());
      break;
    }
    case kControl: {
      _this->_internal_mutable_control()->::unhinged::messaging::WorkflowControl::MergeFrom(
          from._internal_control());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WorkflowMessage::CopyFrom(const WorkflowMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.WorkflowMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowMessage::IsInitialized() const {
  return true;
}

void WorkflowMessage::InternalSwap(WorkflowMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.workflow_id_, lhs_arena,
      &other->_impl_.workflow_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.execution_id_, lhs_arena,
      &other->_impl_.execution_id_, rhs_arena
  );
  swap(_impl_.message_type_, other->_impl_.message_type_);
  swap(_impl_.message_data_, other->_impl_.message_data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkflowMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[21]);
}

// ===================================================================

class WorkflowTrigger::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& trigger_data(const WorkflowTrigger* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& initial_context(const WorkflowTrigger* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
WorkflowTrigger::_Internal::trigger_data(const WorkflowTrigger* msg) {
  return *msg->_impl_.trigger_data_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
WorkflowTrigger::_Internal::initial_context(const WorkflowTrigger* msg) {
  return *msg->_impl_.initial_context_;
}
void WorkflowTrigger::clear_trigger_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.trigger_data_ != nullptr) {
    delete _impl_.trigger_data_;
  }
  _impl_.trigger_data_ = nullptr;
}
void WorkflowTrigger::clear_initial_context() {
  if (GetArenaForAllocation() == nullptr && _impl_.initial_context_ != nullptr) {
    delete _impl_.initial_context_;
  }
  _impl_.initial_context_ = nullptr;
}
WorkflowTrigger::WorkflowTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.WorkflowTrigger)
}
WorkflowTrigger::WorkflowTrigger(const WorkflowTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WorkflowTrigger* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trigger_type_){}
    , decltype(_impl_.trigger_source_){}
    , decltype(_impl_.trigger_data_){nullptr}
    , decltype(_impl_.initial_context_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.trigger_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trigger_type().empty()) {
    _this->_impl_.trigger_type_.Set(from._internal_trigger_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.trigger_source_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_source_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trigger_source().empty()) {
    _this->_impl_.trigger_source_.Set(from._internal_trigger_source(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_trigger_data()) {
    _this->_impl_.trigger_data_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.trigger_data_);
  }
  if (from._internal_has_initial_context()) {
    _this->_impl_.initial_context_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.initial_context_);
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.WorkflowTrigger)
}

inline void WorkflowTrigger::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.trigger_type_){}
    , decltype(_impl_.trigger_source_){}
    , decltype(_impl_.trigger_data_){nullptr}
    , decltype(_impl_.initial_context_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.trigger_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trigger_source_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_source_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WorkflowTrigger::~WorkflowTrigger() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.WorkflowTrigger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WorkflowTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trigger_type_.Destroy();
  _impl_.trigger_source_.Destroy();
  if (this != internal_default_instance()) delete _impl_.trigger_data_;
  if (this != internal_default_instance()) delete _impl_.initial_context_;
}

void WorkflowTrigger::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WorkflowTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.WorkflowTrigger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trigger_type_.ClearToEmpty();
  _impl_.trigger_source_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.trigger_data_ != nullptr) {
    delete _impl_.trigger_data_;
  }
  _impl_.trigger_data_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.initial_context_ != nullptr) {
    delete _impl_.initial_context_;
  }
  _impl_.initial_context_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkflowTrigger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string trigger_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_trigger_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowTrigger.trigger_type"));
        } else
          goto handle_unusual;
        continue;
      // string trigger_source = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_trigger_source();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowTrigger.trigger_source"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct trigger_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_trigger_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct initial_context = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_context(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WorkflowTrigger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.WorkflowTrigger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string trigger_type = 1;
  if (!this->_internal_trigger_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger_type().data(), static_cast<int>(this->_internal_trigger_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowTrigger.trigger_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_trigger_type(), target);
  }

  // string trigger_source = 2;
  if (!this->_internal_trigger_source().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger_source().data(), static_cast<int>(this->_internal_trigger_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowTrigger.trigger_source");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_trigger_source(), target);
  }

  // .google.protobuf.Struct trigger_data = 3;
  if (this->_internal_has_trigger_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::trigger_data(this),
        _Internal::trigger_data(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct initial_context = 4;
  if (this->_internal_has_initial_context()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::initial_context(this),
        _Internal::initial_context(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.WorkflowTrigger)
  return target;
}

size_t WorkflowTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.WorkflowTrigger)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trigger_type = 1;
  if (!this->_internal_trigger_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trigger_type());
  }

  // string trigger_source = 2;
  if (!this->_internal_trigger_source().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trigger_source());
  }

  // .google.protobuf.Struct trigger_data = 3;
  if (this->_internal_has_trigger_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.trigger_data_);
  }

  // .google.protobuf.Struct initial_context = 4;
  if (this->_internal_has_initial_context()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.initial_context_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WorkflowTrigger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WorkflowTrigger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WorkflowTrigger::GetClassData() const { return &_class_data_; }


void WorkflowTrigger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WorkflowTrigger*>(&to_msg);
  auto& from = static_cast<const WorkflowTrigger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.WorkflowTrigger)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trigger_type().empty()) {
    _this->_internal_set_trigger_type(from._internal_trigger_type());
  }
  if (!from._internal_trigger_source().empty()) {
    _this->_internal_set_trigger_source(from._internal_trigger_source());
  }
  if (from._internal_has_trigger_data()) {
    _this->_internal_mutable_trigger_data()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_trigger_data());
  }
  if (from._internal_has_initial_context()) {
    _this->_internal_mutable_initial_context()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_initial_context());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WorkflowTrigger::CopyFrom(const WorkflowTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.WorkflowTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowTrigger::IsInitialized() const {
  return true;
}

void WorkflowTrigger::InternalSwap(WorkflowTrigger* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_type_, lhs_arena,
      &other->_impl_.trigger_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_source_, lhs_arena,
      &other->_impl_.trigger_source_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkflowTrigger, _impl_.initial_context_)
      + sizeof(WorkflowTrigger::_impl_.initial_context_)
      - PROTOBUF_FIELD_OFFSET(WorkflowTrigger, _impl_.trigger_data_)>(
          reinterpret_cast<char*>(&_impl_.trigger_data_),
          reinterpret_cast<char*>(&other->_impl_.trigger_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkflowTrigger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[22]);
}

// ===================================================================

class WorkflowStepExecution::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& step_input(const WorkflowStepExecution* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& step_output(const WorkflowStepExecution* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
WorkflowStepExecution::_Internal::step_input(const WorkflowStepExecution* msg) {
  return *msg->_impl_.step_input_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
WorkflowStepExecution::_Internal::step_output(const WorkflowStepExecution* msg) {
  return *msg->_impl_.step_output_;
}
void WorkflowStepExecution::clear_step_input() {
  if (GetArenaForAllocation() == nullptr && _impl_.step_input_ != nullptr) {
    delete _impl_.step_input_;
  }
  _impl_.step_input_ = nullptr;
}
void WorkflowStepExecution::clear_step_output() {
  if (GetArenaForAllocation() == nullptr && _impl_.step_output_ != nullptr) {
    delete _impl_.step_output_;
  }
  _impl_.step_output_ = nullptr;
}
WorkflowStepExecution::WorkflowStepExecution(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.WorkflowStepExecution)
}
WorkflowStepExecution::WorkflowStepExecution(const WorkflowStepExecution& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WorkflowStepExecution* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.step_id_){}
    , decltype(_impl_.step_type_){}
    , decltype(_impl_.step_status_){}
    , decltype(_impl_.next_step_id_){}
    , decltype(_impl_.step_input_){nullptr}
    , decltype(_impl_.step_output_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.step_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.step_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_step_id().empty()) {
    _this->_impl_.step_id_.Set(from._internal_step_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.step_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.step_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_step_type().empty()) {
    _this->_impl_.step_type_.Set(from._internal_step_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.step_status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.step_status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_step_status().empty()) {
    _this->_impl_.step_status_.Set(from._internal_step_status(), 
      _this->GetArenaForAllocation());
  }
  _impl_.next_step_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_step_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_step_id().empty()) {
    _this->_impl_.next_step_id_.Set(from._internal_next_step_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_step_input()) {
    _this->_impl_.step_input_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.step_input_);
  }
  if (from._internal_has_step_output()) {
    _this->_impl_.step_output_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.step_output_);
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.WorkflowStepExecution)
}

inline void WorkflowStepExecution::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.step_id_){}
    , decltype(_impl_.step_type_){}
    , decltype(_impl_.step_status_){}
    , decltype(_impl_.next_step_id_){}
    , decltype(_impl_.step_input_){nullptr}
    , decltype(_impl_.step_output_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.step_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.step_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.step_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.step_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.step_status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.step_status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.next_step_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_step_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WorkflowStepExecution::~WorkflowStepExecution() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.WorkflowStepExecution)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WorkflowStepExecution::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.step_id_.Destroy();
  _impl_.step_type_.Destroy();
  _impl_.step_status_.Destroy();
  _impl_.next_step_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.step_input_;
  if (this != internal_default_instance()) delete _impl_.step_output_;
}

void WorkflowStepExecution::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WorkflowStepExecution::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.WorkflowStepExecution)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.step_id_.ClearToEmpty();
  _impl_.step_type_.ClearToEmpty();
  _impl_.step_status_.ClearToEmpty();
  _impl_.next_step_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.step_input_ != nullptr) {
    delete _impl_.step_input_;
  }
  _impl_.step_input_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.step_output_ != nullptr) {
    delete _impl_.step_output_;
  }
  _impl_.step_output_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkflowStepExecution::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string step_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_step_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowStepExecution.step_id"));
        } else
          goto handle_unusual;
        continue;
      // string step_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_step_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowStepExecution.step_type"));
        } else
          goto handle_unusual;
        continue;
      // string step_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_step_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowStepExecution.step_status"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct step_input = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_step_input(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct step_output = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_step_output(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string next_step_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_next_step_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowStepExecution.next_step_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WorkflowStepExecution::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.WorkflowStepExecution)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string step_id = 1;
  if (!this->_internal_step_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_step_id().data(), static_cast<int>(this->_internal_step_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowStepExecution.step_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_step_id(), target);
  }

  // string step_type = 2;
  if (!this->_internal_step_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_step_type().data(), static_cast<int>(this->_internal_step_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowStepExecution.step_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_step_type(), target);
  }

  // string step_status = 3;
  if (!this->_internal_step_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_step_status().data(), static_cast<int>(this->_internal_step_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowStepExecution.step_status");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_step_status(), target);
  }

  // .google.protobuf.Struct step_input = 4;
  if (this->_internal_has_step_input()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::step_input(this),
        _Internal::step_input(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct step_output = 5;
  if (this->_internal_has_step_output()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::step_output(this),
        _Internal::step_output(this).GetCachedSize(), target, stream);
  }

  // string next_step_id = 6;
  if (!this->_internal_next_step_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_step_id().data(), static_cast<int>(this->_internal_next_step_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowStepExecution.next_step_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_next_step_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.WorkflowStepExecution)
  return target;
}

size_t WorkflowStepExecution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.WorkflowStepExecution)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string step_id = 1;
  if (!this->_internal_step_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_step_id());
  }

  // string step_type = 2;
  if (!this->_internal_step_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_step_type());
  }

  // string step_status = 3;
  if (!this->_internal_step_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_step_status());
  }

  // string next_step_id = 6;
  if (!this->_internal_next_step_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_step_id());
  }

  // .google.protobuf.Struct step_input = 4;
  if (this->_internal_has_step_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.step_input_);
  }

  // .google.protobuf.Struct step_output = 5;
  if (this->_internal_has_step_output()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.step_output_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WorkflowStepExecution::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WorkflowStepExecution::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WorkflowStepExecution::GetClassData() const { return &_class_data_; }


void WorkflowStepExecution::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WorkflowStepExecution*>(&to_msg);
  auto& from = static_cast<const WorkflowStepExecution&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.WorkflowStepExecution)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_step_id().empty()) {
    _this->_internal_set_step_id(from._internal_step_id());
  }
  if (!from._internal_step_type().empty()) {
    _this->_internal_set_step_type(from._internal_step_type());
  }
  if (!from._internal_step_status().empty()) {
    _this->_internal_set_step_status(from._internal_step_status());
  }
  if (!from._internal_next_step_id().empty()) {
    _this->_internal_set_next_step_id(from._internal_next_step_id());
  }
  if (from._internal_has_step_input()) {
    _this->_internal_mutable_step_input()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_step_input());
  }
  if (from._internal_has_step_output()) {
    _this->_internal_mutable_step_output()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_step_output());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WorkflowStepExecution::CopyFrom(const WorkflowStepExecution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.WorkflowStepExecution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowStepExecution::IsInitialized() const {
  return true;
}

void WorkflowStepExecution::InternalSwap(WorkflowStepExecution* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.step_id_, lhs_arena,
      &other->_impl_.step_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.step_type_, lhs_arena,
      &other->_impl_.step_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.step_status_, lhs_arena,
      &other->_impl_.step_status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_step_id_, lhs_arena,
      &other->_impl_.next_step_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkflowStepExecution, _impl_.step_output_)
      + sizeof(WorkflowStepExecution::_impl_.step_output_)
      - PROTOBUF_FIELD_OFFSET(WorkflowStepExecution, _impl_.step_input_)>(
          reinterpret_cast<char*>(&_impl_.step_input_),
          reinterpret_cast<char*>(&other->_impl_.step_input_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkflowStepExecution::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[23]);
}

// ===================================================================

class WorkflowCompletion::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& final_output(const WorkflowCompletion* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
WorkflowCompletion::_Internal::final_output(const WorkflowCompletion* msg) {
  return *msg->_impl_.final_output_;
}
void WorkflowCompletion::clear_final_output() {
  if (GetArenaForAllocation() == nullptr && _impl_.final_output_ != nullptr) {
    delete _impl_.final_output_;
  }
  _impl_.final_output_ = nullptr;
}
WorkflowCompletion::WorkflowCompletion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.WorkflowCompletion)
}
WorkflowCompletion::WorkflowCompletion(const WorkflowCompletion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WorkflowCompletion* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.completion_status_){}
    , decltype(_impl_.completion_message_){}
    , decltype(_impl_.final_output_){nullptr}
    , decltype(_impl_.total_steps_executed_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.completion_status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.completion_status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_completion_status().empty()) {
    _this->_impl_.completion_status_.Set(from._internal_completion_status(), 
      _this->GetArenaForAllocation());
  }
  _impl_.completion_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.completion_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_completion_message().empty()) {
    _this->_impl_.completion_message_.Set(from._internal_completion_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_final_output()) {
    _this->_impl_.final_output_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.final_output_);
  }
  _this->_impl_.total_steps_executed_ = from._impl_.total_steps_executed_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.WorkflowCompletion)
}

inline void WorkflowCompletion::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.completion_status_){}
    , decltype(_impl_.completion_message_){}
    , decltype(_impl_.final_output_){nullptr}
    , decltype(_impl_.total_steps_executed_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.completion_status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.completion_status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.completion_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.completion_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WorkflowCompletion::~WorkflowCompletion() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.WorkflowCompletion)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WorkflowCompletion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.completion_status_.Destroy();
  _impl_.completion_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.final_output_;
}

void WorkflowCompletion::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WorkflowCompletion::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.WorkflowCompletion)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.completion_status_.ClearToEmpty();
  _impl_.completion_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.final_output_ != nullptr) {
    delete _impl_.final_output_;
  }
  _impl_.final_output_ = nullptr;
  _impl_.total_steps_executed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkflowCompletion::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string completion_status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_completion_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowCompletion.completion_status"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct final_output = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_final_output(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string completion_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_completion_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowCompletion.completion_message"));
        } else
          goto handle_unusual;
        continue;
      // int32 total_steps_executed = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.total_steps_executed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WorkflowCompletion::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.WorkflowCompletion)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string completion_status = 1;
  if (!this->_internal_completion_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_completion_status().data(), static_cast<int>(this->_internal_completion_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowCompletion.completion_status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_completion_status(), target);
  }

  // .google.protobuf.Struct final_output = 2;
  if (this->_internal_has_final_output()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::final_output(this),
        _Internal::final_output(this).GetCachedSize(), target, stream);
  }

  // string completion_message = 3;
  if (!this->_internal_completion_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_completion_message().data(), static_cast<int>(this->_internal_completion_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowCompletion.completion_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_completion_message(), target);
  }

  // int32 total_steps_executed = 4;
  if (this->_internal_total_steps_executed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_total_steps_executed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.WorkflowCompletion)
  return target;
}

size_t WorkflowCompletion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.WorkflowCompletion)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string completion_status = 1;
  if (!this->_internal_completion_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_completion_status());
  }

  // string completion_message = 3;
  if (!this->_internal_completion_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_completion_message());
  }

  // .google.protobuf.Struct final_output = 2;
  if (this->_internal_has_final_output()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.final_output_);
  }

  // int32 total_steps_executed = 4;
  if (this->_internal_total_steps_executed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_steps_executed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WorkflowCompletion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WorkflowCompletion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WorkflowCompletion::GetClassData() const { return &_class_data_; }


void WorkflowCompletion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WorkflowCompletion*>(&to_msg);
  auto& from = static_cast<const WorkflowCompletion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.WorkflowCompletion)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_completion_status().empty()) {
    _this->_internal_set_completion_status(from._internal_completion_status());
  }
  if (!from._internal_completion_message().empty()) {
    _this->_internal_set_completion_message(from._internal_completion_message());
  }
  if (from._internal_has_final_output()) {
    _this->_internal_mutable_final_output()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_final_output());
  }
  if (from._internal_total_steps_executed() != 0) {
    _this->_internal_set_total_steps_executed(from._internal_total_steps_executed());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WorkflowCompletion::CopyFrom(const WorkflowCompletion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.WorkflowCompletion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowCompletion::IsInitialized() const {
  return true;
}

void WorkflowCompletion::InternalSwap(WorkflowCompletion* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.completion_status_, lhs_arena,
      &other->_impl_.completion_status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.completion_message_, lhs_arena,
      &other->_impl_.completion_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkflowCompletion, _impl_.total_steps_executed_)
      + sizeof(WorkflowCompletion::_impl_.total_steps_executed_)
      - PROTOBUF_FIELD_OFFSET(WorkflowCompletion, _impl_.final_output_)>(
          reinterpret_cast<char*>(&_impl_.final_output_),
          reinterpret_cast<char*>(&other->_impl_.final_output_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkflowCompletion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[24]);
}

// ===================================================================

class WorkflowControl::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& control_parameters(const WorkflowControl* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
WorkflowControl::_Internal::control_parameters(const WorkflowControl* msg) {
  return *msg->_impl_.control_parameters_;
}
void WorkflowControl::clear_control_parameters() {
  if (GetArenaForAllocation() == nullptr && _impl_.control_parameters_ != nullptr) {
    delete _impl_.control_parameters_;
  }
  _impl_.control_parameters_ = nullptr;
}
WorkflowControl::WorkflowControl(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.WorkflowControl)
}
WorkflowControl::WorkflowControl(const WorkflowControl& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WorkflowControl* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.control_action_){}
    , decltype(_impl_.control_reason_){}
    , decltype(_impl_.control_parameters_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.control_action_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.control_action_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_control_action().empty()) {
    _this->_impl_.control_action_.Set(from._internal_control_action(), 
      _this->GetArenaForAllocation());
  }
  _impl_.control_reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.control_reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_control_reason().empty()) {
    _this->_impl_.control_reason_.Set(from._internal_control_reason(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_control_parameters()) {
    _this->_impl_.control_parameters_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.control_parameters_);
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.WorkflowControl)
}

inline void WorkflowControl::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.control_action_){}
    , decltype(_impl_.control_reason_){}
    , decltype(_impl_.control_parameters_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.control_action_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.control_action_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.control_reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.control_reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WorkflowControl::~WorkflowControl() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.WorkflowControl)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WorkflowControl::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.control_action_.Destroy();
  _impl_.control_reason_.Destroy();
  if (this != internal_default_instance()) delete _impl_.control_parameters_;
}

void WorkflowControl::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WorkflowControl::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.WorkflowControl)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.control_action_.ClearToEmpty();
  _impl_.control_reason_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.control_parameters_ != nullptr) {
    delete _impl_.control_parameters_;
  }
  _impl_.control_parameters_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkflowControl::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string control_action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_control_action();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowControl.control_action"));
        } else
          goto handle_unusual;
        continue;
      // string control_reason = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_control_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.WorkflowControl.control_reason"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct control_parameters = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_control_parameters(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WorkflowControl::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.WorkflowControl)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string control_action = 1;
  if (!this->_internal_control_action().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_control_action().data(), static_cast<int>(this->_internal_control_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowControl.control_action");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_control_action(), target);
  }

  // string control_reason = 2;
  if (!this->_internal_control_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_control_reason().data(), static_cast<int>(this->_internal_control_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.WorkflowControl.control_reason");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_control_reason(), target);
  }

  // .google.protobuf.Struct control_parameters = 3;
  if (this->_internal_has_control_parameters()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::control_parameters(this),
        _Internal::control_parameters(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.WorkflowControl)
  return target;
}

size_t WorkflowControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.WorkflowControl)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string control_action = 1;
  if (!this->_internal_control_action().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_control_action());
  }

  // string control_reason = 2;
  if (!this->_internal_control_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_control_reason());
  }

  // .google.protobuf.Struct control_parameters = 3;
  if (this->_internal_has_control_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.control_parameters_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WorkflowControl::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WorkflowControl::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WorkflowControl::GetClassData() const { return &_class_data_; }


void WorkflowControl::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WorkflowControl*>(&to_msg);
  auto& from = static_cast<const WorkflowControl&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.WorkflowControl)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_control_action().empty()) {
    _this->_internal_set_control_action(from._internal_control_action());
  }
  if (!from._internal_control_reason().empty()) {
    _this->_internal_set_control_reason(from._internal_control_reason());
  }
  if (from._internal_has_control_parameters()) {
    _this->_internal_mutable_control_parameters()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_control_parameters());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WorkflowControl::CopyFrom(const WorkflowControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.WorkflowControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowControl::IsInitialized() const {
  return true;
}

void WorkflowControl::InternalSwap(WorkflowControl* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.control_action_, lhs_arena,
      &other->_impl_.control_action_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.control_reason_, lhs_arena,
      &other->_impl_.control_reason_, rhs_arena
  );
  swap(_impl_.control_parameters_, other->_impl_.control_parameters_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkflowControl::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[25]);
}

// ===================================================================

class UIMessage::_Internal {
 public:
  static const ::unhinged::messaging::UIUpdate& update(const UIMessage* msg);
  static const ::unhinged::messaging::UINotification& notification(const UIMessage* msg);
  static const ::unhinged::messaging::UICommand& command(const UIMessage* msg);
};

const ::unhinged::messaging::UIUpdate&
UIMessage::_Internal::update(const UIMessage* msg) {
  return *msg->_impl_.message_data_.update_;
}
const ::unhinged::messaging::UINotification&
UIMessage::_Internal::notification(const UIMessage* msg) {
  return *msg->_impl_.message_data_.notification_;
}
const ::unhinged::messaging::UICommand&
UIMessage::_Internal::command(const UIMessage* msg) {
  return *msg->_impl_.message_data_.command_;
}
void UIMessage::set_allocated_update(::unhinged::messaging::UIUpdate* update) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (update) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(update);
    if (message_arena != submessage_arena) {
      update = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update, submessage_arena);
    }
    set_has_update();
    _impl_.message_data_.update_ = update;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.UIMessage.update)
}
void UIMessage::set_allocated_notification(::unhinged::messaging::UINotification* notification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (notification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(notification);
    if (message_arena != submessage_arena) {
      notification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notification, submessage_arena);
    }
    set_has_notification();
    _impl_.message_data_.notification_ = notification;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.UIMessage.notification)
}
void UIMessage::set_allocated_command(::unhinged::messaging::UICommand* command) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (command) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(command);
    if (message_arena != submessage_arena) {
      command = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, command, submessage_arena);
    }
    set_has_command();
    _impl_.message_data_.command_ = command;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.UIMessage.command)
}
UIMessage::UIMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.UIMessage)
}
UIMessage::UIMessage(const UIMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UIMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.component_id_){}
    , decltype(_impl_.message_type_){}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.component_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.component_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_component_id().empty()) {
    _this->_impl_.component_id_.Set(from._internal_component_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.message_type_ = from._impl_.message_type_;
  clear_has_message_data();
  switch (from.message_data_case()) {
    case kUpdate: {
      _this->_internal_mutable_update()->::unhinged::messaging::UIUpdate::MergeFrom(
          from._internal_update());
      break;
    }
    case kNotification: {
      _this->_internal_mutable_notification()->::unhinged::messaging::UINotification::MergeFrom(
          from._internal_notification());
      break;
    }
    case kCommand: {
      _this->_internal_mutable_command()->::unhinged::messaging::UICommand::MergeFrom(
          from._internal_command());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.UIMessage)
}

inline void UIMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.component_id_){}
    , decltype(_impl_.message_type_){0}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.component_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.component_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_message_data();
}

UIMessage::~UIMessage() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.UIMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UIMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.component_id_.Destroy();
  if (has_message_data()) {
    clear_message_data();
  }
}

void UIMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UIMessage::clear_message_data() {
// @@protoc_insertion_point(one_of_clear_start:unhinged.messaging.UIMessage)
  switch (message_data_case()) {
    case kUpdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.update_;
      }
      break;
    }
    case kNotification: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.notification_;
      }
      break;
    }
    case kCommand: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.command_;
      }
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_DATA_NOT_SET;
}


void UIMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.UIMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_.ClearToEmpty();
  _impl_.message_type_ = 0;
  clear_message_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UIMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string component_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_component_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.UIMessage.component_id"));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.UIMessageType message_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_message_type(static_cast<::unhinged::messaging::UIMessageType>(val));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.UIUpdate update = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_update(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.UINotification notification = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_notification(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.UICommand command = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_command(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UIMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.UIMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string component_id = 1;
  if (!this->_internal_component_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_id().data(), static_cast<int>(this->_internal_component_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.UIMessage.component_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_component_id(), target);
  }

  // .unhinged.messaging.UIMessageType message_type = 2;
  if (this->_internal_message_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_message_type(), target);
  }

  // .unhinged.messaging.UIUpdate update = 10;
  if (_internal_has_update()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::update(this),
        _Internal::update(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.UINotification notification = 11;
  if (_internal_has_notification()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::notification(this),
        _Internal::notification(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.UICommand command = 12;
  if (_internal_has_command()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::command(this),
        _Internal::command(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.UIMessage)
  return target;
}

size_t UIMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.UIMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_id = 1;
  if (!this->_internal_component_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_id());
  }

  // .unhinged.messaging.UIMessageType message_type = 2;
  if (this->_internal_message_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_message_type());
  }

  switch (message_data_case()) {
    // .unhinged.messaging.UIUpdate update = 10;
    case kUpdate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.update_);
      break;
    }
    // .unhinged.messaging.UINotification notification = 11;
    case kNotification: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.notification_);
      break;
    }
    // .unhinged.messaging.UICommand command = 12;
    case kCommand: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.command_);
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UIMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UIMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UIMessage::GetClassData() const { return &_class_data_; }


void UIMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UIMessage*>(&to_msg);
  auto& from = static_cast<const UIMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.UIMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_component_id().empty()) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  if (from._internal_message_type() != 0) {
    _this->_internal_set_message_type(from._internal_message_type());
  }
  switch (from.message_data_case()) {
    case kUpdate: {
      _this->_internal_mutable_update()->::unhinged::messaging::UIUpdate::MergeFrom(
          from._internal_update());
      break;
    }
    case kNotification: {
      _this->_internal_mutable_notification()->::unhinged::messaging::UINotification::MergeFrom(
          from._internal_notification());
      break;
    }
    case kCommand: {
      _this->_internal_mutable_command()->::unhinged::messaging::UICommand::MergeFrom(
          from._internal_command());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UIMessage::CopyFrom(const UIMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.UIMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIMessage::IsInitialized() const {
  return true;
}

void UIMessage::InternalSwap(UIMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.component_id_, lhs_arena,
      &other->_impl_.component_id_, rhs_arena
  );
  swap(_impl_.message_type_, other->_impl_.message_type_);
  swap(_impl_.message_data_, other->_impl_.message_data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata UIMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[26]);
}

// ===================================================================

class UIUpdate::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& update_data(const UIUpdate* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
UIUpdate::_Internal::update_data(const UIUpdate* msg) {
  return *msg->_impl_.update_data_;
}
void UIUpdate::clear_update_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_data_ != nullptr) {
    delete _impl_.update_data_;
  }
  _impl_.update_data_ = nullptr;
}
UIUpdate::UIUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.UIUpdate)
}
UIUpdate::UIUpdate(const UIUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UIUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.update_type_){}
    , decltype(_impl_.update_data_){nullptr}
    , decltype(_impl_.force_refresh_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.update_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.update_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_update_type().empty()) {
    _this->_impl_.update_type_.Set(from._internal_update_type(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_update_data()) {
    _this->_impl_.update_data_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.update_data_);
  }
  _this->_impl_.force_refresh_ = from._impl_.force_refresh_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.UIUpdate)
}

inline void UIUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.update_type_){}
    , decltype(_impl_.update_data_){nullptr}
    , decltype(_impl_.force_refresh_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.update_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.update_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UIUpdate::~UIUpdate() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.UIUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UIUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.update_type_.Destroy();
  if (this != internal_default_instance()) delete _impl_.update_data_;
}

void UIUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UIUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.UIUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.update_type_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.update_data_ != nullptr) {
    delete _impl_.update_data_;
  }
  _impl_.update_data_ = nullptr;
  _impl_.force_refresh_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UIUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string update_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_update_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.UIUpdate.update_type"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct update_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool force_refresh = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.force_refresh_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UIUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.UIUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string update_type = 1;
  if (!this->_internal_update_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_update_type().data(), static_cast<int>(this->_internal_update_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.UIUpdate.update_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_update_type(), target);
  }

  // .google.protobuf.Struct update_data = 2;
  if (this->_internal_has_update_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::update_data(this),
        _Internal::update_data(this).GetCachedSize(), target, stream);
  }

  // bool force_refresh = 3;
  if (this->_internal_force_refresh() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_force_refresh(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.UIUpdate)
  return target;
}

size_t UIUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.UIUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string update_type = 1;
  if (!this->_internal_update_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_update_type());
  }

  // .google.protobuf.Struct update_data = 2;
  if (this->_internal_has_update_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.update_data_);
  }

  // bool force_refresh = 3;
  if (this->_internal_force_refresh() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UIUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UIUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UIUpdate::GetClassData() const { return &_class_data_; }


void UIUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UIUpdate*>(&to_msg);
  auto& from = static_cast<const UIUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.UIUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_update_type().empty()) {
    _this->_internal_set_update_type(from._internal_update_type());
  }
  if (from._internal_has_update_data()) {
    _this->_internal_mutable_update_data()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_update_data());
  }
  if (from._internal_force_refresh() != 0) {
    _this->_internal_set_force_refresh(from._internal_force_refresh());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UIUpdate::CopyFrom(const UIUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.UIUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIUpdate::IsInitialized() const {
  return true;
}

void UIUpdate::InternalSwap(UIUpdate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.update_type_, lhs_arena,
      &other->_impl_.update_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UIUpdate, _impl_.force_refresh_)
      + sizeof(UIUpdate::_impl_.force_refresh_)
      - PROTOBUF_FIELD_OFFSET(UIUpdate, _impl_.update_data_)>(
          reinterpret_cast<char*>(&_impl_.update_data_),
          reinterpret_cast<char*>(&other->_impl_.update_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UIUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[27]);
}

// ===================================================================

class UINotification::_Internal {
 public:
};

UINotification::UINotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.UINotification)
}
UINotification::UINotification(const UINotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UINotification* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.notification_type_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.duration_ms_){}
    , decltype(_impl_.dismissible_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.notification_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.notification_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_notification_type().empty()) {
    _this->_impl_.notification_type_.Set(from._internal_notification_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.duration_ms_, &from._impl_.duration_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.dismissible_) -
    reinterpret_cast<char*>(&_impl_.duration_ms_)) + sizeof(_impl_.dismissible_));
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.UINotification)
}

inline void UINotification::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.notification_type_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.duration_ms_){0}
    , decltype(_impl_.dismissible_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.notification_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.notification_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UINotification::~UINotification() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.UINotification)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UINotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.notification_type_.Destroy();
  _impl_.title_.Destroy();
  _impl_.message_.Destroy();
}

void UINotification::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UINotification::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.UINotification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.notification_type_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.duration_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.dismissible_) -
      reinterpret_cast<char*>(&_impl_.duration_ms_)) + sizeof(_impl_.dismissible_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UINotification::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string notification_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_notification_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.UINotification.notification_type"));
        } else
          goto handle_unusual;
        continue;
      // string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.UINotification.title"));
        } else
          goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.UINotification.message"));
        } else
          goto handle_unusual;
        continue;
      // int32 duration_ms = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.duration_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool dismissible = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.dismissible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UINotification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.UINotification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string notification_type = 1;
  if (!this->_internal_notification_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_notification_type().data(), static_cast<int>(this->_internal_notification_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.UINotification.notification_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_notification_type(), target);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.UINotification.title");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_title(), target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.UINotification.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  // int32 duration_ms = 4;
  if (this->_internal_duration_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_duration_ms(), target);
  }

  // bool dismissible = 5;
  if (this->_internal_dismissible() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_dismissible(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.UINotification)
  return target;
}

size_t UINotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.UINotification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string notification_type = 1;
  if (!this->_internal_notification_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_notification_type());
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 duration_ms = 4;
  if (this->_internal_duration_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_duration_ms());
  }

  // bool dismissible = 5;
  if (this->_internal_dismissible() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UINotification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UINotification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UINotification::GetClassData() const { return &_class_data_; }


void UINotification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UINotification*>(&to_msg);
  auto& from = static_cast<const UINotification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.UINotification)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_notification_type().empty()) {
    _this->_internal_set_notification_type(from._internal_notification_type());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_duration_ms() != 0) {
    _this->_internal_set_duration_ms(from._internal_duration_ms());
  }
  if (from._internal_dismissible() != 0) {
    _this->_internal_set_dismissible(from._internal_dismissible());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UINotification::CopyFrom(const UINotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.UINotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UINotification::IsInitialized() const {
  return true;
}

void UINotification::InternalSwap(UINotification* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.notification_type_, lhs_arena,
      &other->_impl_.notification_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.title_, lhs_arena,
      &other->_impl_.title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UINotification, _impl_.dismissible_)
      + sizeof(UINotification::_impl_.dismissible_)
      - PROTOBUF_FIELD_OFFSET(UINotification, _impl_.duration_ms_)>(
          reinterpret_cast<char*>(&_impl_.duration_ms_),
          reinterpret_cast<char*>(&other->_impl_.duration_ms_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UINotification::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[28]);
}

// ===================================================================

class UICommand::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& command_parameters(const UICommand* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
UICommand::_Internal::command_parameters(const UICommand* msg) {
  return *msg->_impl_.command_parameters_;
}
void UICommand::clear_command_parameters() {
  if (GetArenaForAllocation() == nullptr && _impl_.command_parameters_ != nullptr) {
    delete _impl_.command_parameters_;
  }
  _impl_.command_parameters_ = nullptr;
}
UICommand::UICommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.UICommand)
}
UICommand::UICommand(const UICommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UICommand* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.command_){}
    , decltype(_impl_.command_parameters_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_command().empty()) {
    _this->_impl_.command_.Set(from._internal_command(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_command_parameters()) {
    _this->_impl_.command_parameters_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.command_parameters_);
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.UICommand)
}

inline void UICommand::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.command_){}
    , decltype(_impl_.command_parameters_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UICommand::~UICommand() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.UICommand)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UICommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.command_.Destroy();
  if (this != internal_default_instance()) delete _impl_.command_parameters_;
}

void UICommand::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UICommand::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.UICommand)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.command_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.command_parameters_ != nullptr) {
    delete _impl_.command_parameters_;
  }
  _impl_.command_parameters_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UICommand::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.UICommand.command"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct command_parameters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_command_parameters(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UICommand::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.UICommand)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (!this->_internal_command().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.UICommand.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // .google.protobuf.Struct command_parameters = 2;
  if (this->_internal_has_command_parameters()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::command_parameters(this),
        _Internal::command_parameters(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.UICommand)
  return target;
}

size_t UICommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.UICommand)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (!this->_internal_command().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // .google.protobuf.Struct command_parameters = 2;
  if (this->_internal_has_command_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.command_parameters_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UICommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UICommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UICommand::GetClassData() const { return &_class_data_; }


void UICommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UICommand*>(&to_msg);
  auto& from = static_cast<const UICommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.UICommand)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_command().empty()) {
    _this->_internal_set_command(from._internal_command());
  }
  if (from._internal_has_command_parameters()) {
    _this->_internal_mutable_command_parameters()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_command_parameters());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UICommand::CopyFrom(const UICommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.UICommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UICommand::IsInitialized() const {
  return true;
}

void UICommand::InternalSwap(UICommand* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.command_, lhs_arena,
      &other->_impl_.command_, rhs_arena
  );
  swap(_impl_.command_parameters_, other->_impl_.command_parameters_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UICommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[29]);
}

// ===================================================================

class SystemMessage::_Internal {
 public:
  static const ::unhinged::messaging::ServiceDiscovery& service_discovery(const SystemMessage* msg);
  static const ::unhinged::messaging::HealthCheck& health_check(const SystemMessage* msg);
  static const ::unhinged::messaging::ConfigUpdate& config_update(const SystemMessage* msg);
  static const ::unhinged::messaging::ShutdownNotice& shutdown_notice(const SystemMessage* msg);
};

const ::unhinged::messaging::ServiceDiscovery&
SystemMessage::_Internal::service_discovery(const SystemMessage* msg) {
  return *msg->_impl_.message_data_.service_discovery_;
}
const ::unhinged::messaging::HealthCheck&
SystemMessage::_Internal::health_check(const SystemMessage* msg) {
  return *msg->_impl_.message_data_.health_check_;
}
const ::unhinged::messaging::ConfigUpdate&
SystemMessage::_Internal::config_update(const SystemMessage* msg) {
  return *msg->_impl_.message_data_.config_update_;
}
const ::unhinged::messaging::ShutdownNotice&
SystemMessage::_Internal::shutdown_notice(const SystemMessage* msg) {
  return *msg->_impl_.message_data_.shutdown_notice_;
}
void SystemMessage::set_allocated_service_discovery(::unhinged::messaging::ServiceDiscovery* service_discovery) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (service_discovery) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(service_discovery);
    if (message_arena != submessage_arena) {
      service_discovery = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, service_discovery, submessage_arena);
    }
    set_has_service_discovery();
    _impl_.message_data_.service_discovery_ = service_discovery;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.SystemMessage.service_discovery)
}
void SystemMessage::set_allocated_health_check(::unhinged::messaging::HealthCheck* health_check) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (health_check) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(health_check);
    if (message_arena != submessage_arena) {
      health_check = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, health_check, submessage_arena);
    }
    set_has_health_check();
    _impl_.message_data_.health_check_ = health_check;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.SystemMessage.health_check)
}
void SystemMessage::set_allocated_config_update(::unhinged::messaging::ConfigUpdate* config_update) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (config_update) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(config_update);
    if (message_arena != submessage_arena) {
      config_update = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config_update, submessage_arena);
    }
    set_has_config_update();
    _impl_.message_data_.config_update_ = config_update;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.SystemMessage.config_update)
}
void SystemMessage::set_allocated_shutdown_notice(::unhinged::messaging::ShutdownNotice* shutdown_notice) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message_data();
  if (shutdown_notice) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(shutdown_notice);
    if (message_arena != submessage_arena) {
      shutdown_notice = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shutdown_notice, submessage_arena);
    }
    set_has_shutdown_notice();
    _impl_.message_data_.shutdown_notice_ = shutdown_notice;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.SystemMessage.shutdown_notice)
}
SystemMessage::SystemMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.SystemMessage)
}
SystemMessage::SystemMessage(const SystemMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SystemMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_type_){}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.message_type_ = from._impl_.message_type_;
  clear_has_message_data();
  switch (from.message_data_case()) {
    case kServiceDiscovery: {
      _this->_internal_mutable_service_discovery()->::unhinged::messaging::ServiceDiscovery::MergeFrom(
          from._internal_service_discovery());
      break;
    }
    case kHealthCheck: {
      _this->_internal_mutable_health_check()->::unhinged::messaging::HealthCheck::MergeFrom(
          from._internal_health_check());
      break;
    }
    case kConfigUpdate: {
      _this->_internal_mutable_config_update()->::unhinged::messaging::ConfigUpdate::MergeFrom(
          from._internal_config_update());
      break;
    }
    case kShutdownNotice: {
      _this->_internal_mutable_shutdown_notice()->::unhinged::messaging::ShutdownNotice::MergeFrom(
          from._internal_shutdown_notice());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.SystemMessage)
}

inline void SystemMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_type_){0}
    , decltype(_impl_.message_data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_message_data();
}

SystemMessage::~SystemMessage() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.SystemMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SystemMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_message_data()) {
    clear_message_data();
  }
}

void SystemMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SystemMessage::clear_message_data() {
// @@protoc_insertion_point(one_of_clear_start:unhinged.messaging.SystemMessage)
  switch (message_data_case()) {
    case kServiceDiscovery: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.service_discovery_;
      }
      break;
    }
    case kHealthCheck: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.health_check_;
      }
      break;
    }
    case kConfigUpdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.config_update_;
      }
      break;
    }
    case kShutdownNotice: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.message_data_.shutdown_notice_;
      }
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_DATA_NOT_SET;
}


void SystemMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.SystemMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_type_ = 0;
  clear_message_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .unhinged.messaging.SystemMessageType message_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_message_type(static_cast<::unhinged::messaging::SystemMessageType>(val));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.ServiceDiscovery service_discovery = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_discovery(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.HealthCheck health_check = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_health_check(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.ConfigUpdate config_update = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_config_update(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.ShutdownNotice shutdown_notice = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_shutdown_notice(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.SystemMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .unhinged.messaging.SystemMessageType message_type = 1;
  if (this->_internal_message_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_message_type(), target);
  }

  // .unhinged.messaging.ServiceDiscovery service_discovery = 10;
  if (_internal_has_service_discovery()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::service_discovery(this),
        _Internal::service_discovery(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.HealthCheck health_check = 11;
  if (_internal_has_health_check()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::health_check(this),
        _Internal::health_check(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.ConfigUpdate config_update = 12;
  if (_internal_has_config_update()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::config_update(this),
        _Internal::config_update(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.ShutdownNotice shutdown_notice = 13;
  if (_internal_has_shutdown_notice()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::shutdown_notice(this),
        _Internal::shutdown_notice(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.SystemMessage)
  return target;
}

size_t SystemMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.SystemMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .unhinged.messaging.SystemMessageType message_type = 1;
  if (this->_internal_message_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_message_type());
  }

  switch (message_data_case()) {
    // .unhinged.messaging.ServiceDiscovery service_discovery = 10;
    case kServiceDiscovery: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.service_discovery_);
      break;
    }
    // .unhinged.messaging.HealthCheck health_check = 11;
    case kHealthCheck: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.health_check_);
      break;
    }
    // .unhinged.messaging.ConfigUpdate config_update = 12;
    case kConfigUpdate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.config_update_);
      break;
    }
    // .unhinged.messaging.ShutdownNotice shutdown_notice = 13;
    case kShutdownNotice: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.message_data_.shutdown_notice_);
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SystemMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemMessage::GetClassData() const { return &_class_data_; }


void SystemMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SystemMessage*>(&to_msg);
  auto& from = static_cast<const SystemMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.SystemMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message_type() != 0) {
    _this->_internal_set_message_type(from._internal_message_type());
  }
  switch (from.message_data_case()) {
    case kServiceDiscovery: {
      _this->_internal_mutable_service_discovery()->::unhinged::messaging::ServiceDiscovery::MergeFrom(
          from._internal_service_discovery());
      break;
    }
    case kHealthCheck: {
      _this->_internal_mutable_health_check()->::unhinged::messaging::HealthCheck::MergeFrom(
          from._internal_health_check());
      break;
    }
    case kConfigUpdate: {
      _this->_internal_mutable_config_update()->::unhinged::messaging::ConfigUpdate::MergeFrom(
          from._internal_config_update());
      break;
    }
    case kShutdownNotice: {
      _this->_internal_mutable_shutdown_notice()->::unhinged::messaging::ShutdownNotice::MergeFrom(
          from._internal_shutdown_notice());
      break;
    }
    case MESSAGE_DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemMessage::CopyFrom(const SystemMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.SystemMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemMessage::IsInitialized() const {
  return true;
}

void SystemMessage::InternalSwap(SystemMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_type_, other->_impl_.message_type_);
  swap(_impl_.message_data_, other->_impl_.message_data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[30]);
}

// ===================================================================

class ServiceDiscovery::_Internal {
 public:
};

ServiceDiscovery::ServiceDiscovery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ServiceDiscovery)
}
ServiceDiscovery::ServiceDiscovery(const ServiceDiscovery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServiceDiscovery* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.capabilities_){from._impl_.capabilities_}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.service_version_){}
    , decltype(_impl_.endpoint_url_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.service_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_version().empty()) {
    _this->_impl_.service_version_.Set(from._internal_service_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.endpoint_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.endpoint_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_endpoint_url().empty()) {
    _this->_impl_.endpoint_url_.Set(from._internal_endpoint_url(), 
      _this->GetArenaForAllocation());
  }
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ServiceDiscovery)
}

inline void ServiceDiscovery::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.capabilities_){arena}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.service_version_){}
    , decltype(_impl_.endpoint_url_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.service_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.endpoint_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.endpoint_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ServiceDiscovery::~ServiceDiscovery() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ServiceDiscovery)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServiceDiscovery::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.capabilities_.~RepeatedPtrField();
  _impl_.service_name_.Destroy();
  _impl_.service_version_.Destroy();
  _impl_.endpoint_url_.Destroy();
  _impl_.status_.Destroy();
}

void ServiceDiscovery::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServiceDiscovery::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ServiceDiscovery)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capabilities_.Clear();
  _impl_.service_name_.ClearToEmpty();
  _impl_.service_version_.ClearToEmpty();
  _impl_.endpoint_url_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceDiscovery::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ServiceDiscovery.service_name"));
        } else
          goto handle_unusual;
        continue;
      // string service_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_service_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ServiceDiscovery.service_version"));
        } else
          goto handle_unusual;
        continue;
      // string endpoint_url = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_endpoint_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ServiceDiscovery.endpoint_url"));
        } else
          goto handle_unusual;
        continue;
      // repeated string capabilities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_capabilities();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ServiceDiscovery.capabilities"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ServiceDiscovery.status"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServiceDiscovery::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ServiceDiscovery)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ServiceDiscovery.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string service_version = 2;
  if (!this->_internal_service_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_version().data(), static_cast<int>(this->_internal_service_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ServiceDiscovery.service_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_service_version(), target);
  }

  // string endpoint_url = 3;
  if (!this->_internal_endpoint_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endpoint_url().data(), static_cast<int>(this->_internal_endpoint_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ServiceDiscovery.endpoint_url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_endpoint_url(), target);
  }

  // repeated string capabilities = 4;
  for (int i = 0, n = this->_internal_capabilities_size(); i < n; i++) {
    const auto& s = this->_internal_capabilities(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ServiceDiscovery.capabilities");
    target = stream->WriteString(4, s, target);
  }

  // string status = 5;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ServiceDiscovery.status");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ServiceDiscovery)
  return target;
}

size_t ServiceDiscovery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ServiceDiscovery)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string capabilities = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.capabilities_.size());
  for (int i = 0, n = _impl_.capabilities_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.capabilities_.Get(i));
  }

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string service_version = 2;
  if (!this->_internal_service_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_version());
  }

  // string endpoint_url = 3;
  if (!this->_internal_endpoint_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endpoint_url());
  }

  // string status = 5;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServiceDiscovery::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServiceDiscovery::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServiceDiscovery::GetClassData() const { return &_class_data_; }


void ServiceDiscovery::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServiceDiscovery*>(&to_msg);
  auto& from = static_cast<const ServiceDiscovery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ServiceDiscovery)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.capabilities_.MergeFrom(from._impl_.capabilities_);
  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_service_version().empty()) {
    _this->_internal_set_service_version(from._internal_service_version());
  }
  if (!from._internal_endpoint_url().empty()) {
    _this->_internal_set_endpoint_url(from._internal_endpoint_url());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceDiscovery::CopyFrom(const ServiceDiscovery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ServiceDiscovery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceDiscovery::IsInitialized() const {
  return true;
}

void ServiceDiscovery::InternalSwap(ServiceDiscovery* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.capabilities_.InternalSwap(&other->_impl_.capabilities_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_version_, lhs_arena,
      &other->_impl_.service_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.endpoint_url_, lhs_arena,
      &other->_impl_.endpoint_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.status_, lhs_arena,
      &other->_impl_.status_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceDiscovery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[31]);
}

// ===================================================================

class HealthCheck::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& health_details(const HealthCheck* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
HealthCheck::_Internal::health_details(const HealthCheck* msg) {
  return *msg->_impl_.health_details_;
}
void HealthCheck::clear_health_details() {
  if (GetArenaForAllocation() == nullptr && _impl_.health_details_ != nullptr) {
    delete _impl_.health_details_;
  }
  _impl_.health_details_ = nullptr;
}
HealthCheck::HealthCheck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.HealthCheck)
}
HealthCheck::HealthCheck(const HealthCheck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HealthCheck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.status_message_){}
    , decltype(_impl_.health_details_){nullptr}
    , decltype(_impl_.is_healthy_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.status_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status_message().empty()) {
    _this->_impl_.status_message_.Set(from._internal_status_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_health_details()) {
    _this->_impl_.health_details_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.health_details_);
  }
  _this->_impl_.is_healthy_ = from._impl_.is_healthy_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.HealthCheck)
}

inline void HealthCheck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.status_message_){}
    , decltype(_impl_.health_details_){nullptr}
    , decltype(_impl_.is_healthy_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.status_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HealthCheck::~HealthCheck() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.HealthCheck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HealthCheck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.status_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.health_details_;
}

void HealthCheck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HealthCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.HealthCheck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _impl_.status_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.health_details_ != nullptr) {
    delete _impl_.health_details_;
  }
  _impl_.health_details_ = nullptr;
  _impl_.is_healthy_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HealthCheck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.HealthCheck.service_name"));
        } else
          goto handle_unusual;
        continue;
      // bool is_healthy = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.is_healthy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string status_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_status_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.HealthCheck.status_message"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct health_details = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_health_details(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HealthCheck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.HealthCheck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.HealthCheck.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // bool is_healthy = 2;
  if (this->_internal_is_healthy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_is_healthy(), target);
  }

  // string status_message = 3;
  if (!this->_internal_status_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status_message().data(), static_cast<int>(this->_internal_status_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.HealthCheck.status_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_status_message(), target);
  }

  // .google.protobuf.Struct health_details = 4;
  if (this->_internal_has_health_details()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::health_details(this),
        _Internal::health_details(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.HealthCheck)
  return target;
}

size_t HealthCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.HealthCheck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string status_message = 3;
  if (!this->_internal_status_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status_message());
  }

  // .google.protobuf.Struct health_details = 4;
  if (this->_internal_has_health_details()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.health_details_);
  }

  // bool is_healthy = 2;
  if (this->_internal_is_healthy() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HealthCheck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HealthCheck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HealthCheck::GetClassData() const { return &_class_data_; }


void HealthCheck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HealthCheck*>(&to_msg);
  auto& from = static_cast<const HealthCheck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.HealthCheck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_status_message().empty()) {
    _this->_internal_set_status_message(from._internal_status_message());
  }
  if (from._internal_has_health_details()) {
    _this->_internal_mutable_health_details()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_health_details());
  }
  if (from._internal_is_healthy() != 0) {
    _this->_internal_set_is_healthy(from._internal_is_healthy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HealthCheck::CopyFrom(const HealthCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.HealthCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HealthCheck::IsInitialized() const {
  return true;
}

void HealthCheck::InternalSwap(HealthCheck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.status_message_, lhs_arena,
      &other->_impl_.status_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HealthCheck, _impl_.is_healthy_)
      + sizeof(HealthCheck::_impl_.is_healthy_)
      - PROTOBUF_FIELD_OFFSET(HealthCheck, _impl_.health_details_)>(
          reinterpret_cast<char*>(&_impl_.health_details_),
          reinterpret_cast<char*>(&other->_impl_.health_details_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HealthCheck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[32]);
}

// ===================================================================

class ConfigUpdate::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& config_value(const ConfigUpdate* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
ConfigUpdate::_Internal::config_value(const ConfigUpdate* msg) {
  return *msg->_impl_.config_value_;
}
void ConfigUpdate::clear_config_value() {
  if (GetArenaForAllocation() == nullptr && _impl_.config_value_ != nullptr) {
    delete _impl_.config_value_;
  }
  _impl_.config_value_ = nullptr;
}
ConfigUpdate::ConfigUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ConfigUpdate)
}
ConfigUpdate::ConfigUpdate(const ConfigUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConfigUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_key_){}
    , decltype(_impl_.update_reason_){}
    , decltype(_impl_.config_value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.config_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_key().empty()) {
    _this->_impl_.config_key_.Set(from._internal_config_key(), 
      _this->GetArenaForAllocation());
  }
  _impl_.update_reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.update_reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_update_reason().empty()) {
    _this->_impl_.update_reason_.Set(from._internal_update_reason(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_config_value()) {
    _this->_impl_.config_value_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.config_value_);
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ConfigUpdate)
}

inline void ConfigUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_key_){}
    , decltype(_impl_.update_reason_){}
    , decltype(_impl_.config_value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.config_key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.update_reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.update_reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConfigUpdate::~ConfigUpdate() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ConfigUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConfigUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.config_key_.Destroy();
  _impl_.update_reason_.Destroy();
  if (this != internal_default_instance()) delete _impl_.config_value_;
}

void ConfigUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConfigUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ConfigUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_key_.ClearToEmpty();
  _impl_.update_reason_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.config_value_ != nullptr) {
    delete _impl_.config_value_;
  }
  _impl_.config_value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string config_key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_config_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ConfigUpdate.config_key"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Any config_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string update_reason = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_update_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ConfigUpdate.update_reason"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ConfigUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_key = 1;
  if (!this->_internal_config_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_key().data(), static_cast<int>(this->_internal_config_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ConfigUpdate.config_key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_config_key(), target);
  }

  // .google.protobuf.Any config_value = 2;
  if (this->_internal_has_config_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::config_value(this),
        _Internal::config_value(this).GetCachedSize(), target, stream);
  }

  // string update_reason = 3;
  if (!this->_internal_update_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_update_reason().data(), static_cast<int>(this->_internal_update_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ConfigUpdate.update_reason");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_update_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ConfigUpdate)
  return target;
}

size_t ConfigUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ConfigUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string config_key = 1;
  if (!this->_internal_config_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_key());
  }

  // string update_reason = 3;
  if (!this->_internal_update_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_update_reason());
  }

  // .google.protobuf.Any config_value = 2;
  if (this->_internal_has_config_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_value_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConfigUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigUpdate::GetClassData() const { return &_class_data_; }


void ConfigUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConfigUpdate*>(&to_msg);
  auto& from = static_cast<const ConfigUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ConfigUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_config_key().empty()) {
    _this->_internal_set_config_key(from._internal_config_key());
  }
  if (!from._internal_update_reason().empty()) {
    _this->_internal_set_update_reason(from._internal_update_reason());
  }
  if (from._internal_has_config_value()) {
    _this->_internal_mutable_config_value()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_config_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigUpdate::CopyFrom(const ConfigUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ConfigUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigUpdate::IsInitialized() const {
  return true;
}

void ConfigUpdate::InternalSwap(ConfigUpdate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.config_key_, lhs_arena,
      &other->_impl_.config_key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.update_reason_, lhs_arena,
      &other->_impl_.update_reason_, rhs_arena
  );
  swap(_impl_.config_value_, other->_impl_.config_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[33]);
}

// ===================================================================

class ShutdownNotice::_Internal {
 public:
};

ShutdownNotice::ShutdownNotice(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ShutdownNotice)
}
ShutdownNotice::ShutdownNotice(const ShutdownNotice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShutdownNotice* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.shutdown_reason_){}
    , decltype(_impl_.graceful_shutdown_seconds_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.shutdown_reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.shutdown_reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_shutdown_reason().empty()) {
    _this->_impl_.shutdown_reason_.Set(from._internal_shutdown_reason(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.graceful_shutdown_seconds_ = from._impl_.graceful_shutdown_seconds_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ShutdownNotice)
}

inline void ShutdownNotice::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_name_){}
    , decltype(_impl_.shutdown_reason_){}
    , decltype(_impl_.graceful_shutdown_seconds_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.shutdown_reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.shutdown_reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ShutdownNotice::~ShutdownNotice() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ShutdownNotice)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShutdownNotice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
  _impl_.shutdown_reason_.Destroy();
}

void ShutdownNotice::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShutdownNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ShutdownNotice)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_name_.ClearToEmpty();
  _impl_.shutdown_reason_.ClearToEmpty();
  _impl_.graceful_shutdown_seconds_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShutdownNotice::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ShutdownNotice.service_name"));
        } else
          goto handle_unusual;
        continue;
      // string shutdown_reason = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_shutdown_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ShutdownNotice.shutdown_reason"));
        } else
          goto handle_unusual;
        continue;
      // int32 graceful_shutdown_seconds = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.graceful_shutdown_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShutdownNotice::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ShutdownNotice)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ShutdownNotice.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string shutdown_reason = 2;
  if (!this->_internal_shutdown_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_shutdown_reason().data(), static_cast<int>(this->_internal_shutdown_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ShutdownNotice.shutdown_reason");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_shutdown_reason(), target);
  }

  // int32 graceful_shutdown_seconds = 3;
  if (this->_internal_graceful_shutdown_seconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_graceful_shutdown_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ShutdownNotice)
  return target;
}

size_t ShutdownNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ShutdownNotice)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string shutdown_reason = 2;
  if (!this->_internal_shutdown_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_shutdown_reason());
  }

  // int32 graceful_shutdown_seconds = 3;
  if (this->_internal_graceful_shutdown_seconds() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_graceful_shutdown_seconds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShutdownNotice::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShutdownNotice::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShutdownNotice::GetClassData() const { return &_class_data_; }


void ShutdownNotice::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShutdownNotice*>(&to_msg);
  auto& from = static_cast<const ShutdownNotice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ShutdownNotice)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_shutdown_reason().empty()) {
    _this->_internal_set_shutdown_reason(from._internal_shutdown_reason());
  }
  if (from._internal_graceful_shutdown_seconds() != 0) {
    _this->_internal_set_graceful_shutdown_seconds(from._internal_graceful_shutdown_seconds());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShutdownNotice::CopyFrom(const ShutdownNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ShutdownNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutdownNotice::IsInitialized() const {
  return true;
}

void ShutdownNotice::InternalSwap(ShutdownNotice* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.shutdown_reason_, lhs_arena,
      &other->_impl_.shutdown_reason_, rhs_arena
  );
  swap(_impl_.graceful_shutdown_seconds_, other->_impl_.graceful_shutdown_seconds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShutdownNotice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[34]);
}

// ===================================================================

class SendMessageRequest::_Internal {
 public:
  static const ::unhinged::messaging::Message& message(const SendMessageRequest* msg);
};

const ::unhinged::messaging::Message&
SendMessageRequest::_Internal::message(const SendMessageRequest* msg) {
  return *msg->_impl_.message_;
}
SendMessageRequest::SendMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.SendMessageRequest)
}
SendMessageRequest::SendMessageRequest(const SendMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendMessageRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_message()) {
    _this->_impl_.message_ = new ::unhinged::messaging::Message(*from._impl_.message_);
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.SendMessageRequest)
}

inline void SendMessageRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendMessageRequest::~SendMessageRequest() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.SendMessageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.message_;
}

void SendMessageRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.SendMessageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.message_ != nullptr) {
    delete _impl_.message_;
  }
  _impl_.message_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendMessageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .unhinged.messaging.Message message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendMessageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.SendMessageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .unhinged.messaging.Message message = 1;
  if (this->_internal_has_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::message(this),
        _Internal::message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.SendMessageRequest)
  return target;
}

size_t SendMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.SendMessageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .unhinged.messaging.Message message = 1;
  if (this->_internal_has_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendMessageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendMessageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendMessageRequest::GetClassData() const { return &_class_data_; }


void SendMessageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendMessageRequest*>(&to_msg);
  auto& from = static_cast<const SendMessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.SendMessageRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_message()) {
    _this->_internal_mutable_message()->::unhinged::messaging::Message::MergeFrom(
        from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageRequest::CopyFrom(const SendMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.SendMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessageRequest::IsInitialized() const {
  return true;
}

void SendMessageRequest::InternalSwap(SendMessageRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_, other->_impl_.message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendMessageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[35]);
}

// ===================================================================

class SendMessageResponse::_Internal {
 public:
};

SendMessageResponse::SendMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.SendMessageResponse)
}
SendMessageResponse::SendMessageResponse(const SendMessageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendMessageResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , decltype(_impl_.status_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message_id().empty()) {
    _this->_impl_.message_id_.Set(from._internal_message_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.SendMessageResponse)
}

inline void SendMessageResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , decltype(_impl_.status_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendMessageResponse::~SendMessageResponse() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.SendMessageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendMessageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_id_.Destroy();
  _impl_.status_.Destroy();
  _impl_.error_message_.Destroy();
}

void SendMessageResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.SendMessageResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendMessageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.SendMessageResponse.message_id"));
        } else
          goto handle_unusual;
        continue;
      // string status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.SendMessageResponse.status"));
        } else
          goto handle_unusual;
        continue;
      // string error_message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.SendMessageResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendMessageResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.SendMessageResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string message_id = 2;
  if (!this->_internal_message_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_id().data(), static_cast<int>(this->_internal_message_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.SendMessageResponse.message_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message_id(), target);
  }

  // string status = 3;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.SendMessageResponse.status");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_status(), target);
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.SendMessageResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.SendMessageResponse)
  return target;
}

size_t SendMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.SendMessageResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message_id = 2;
  if (!this->_internal_message_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_id());
  }

  // string status = 3;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendMessageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendMessageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendMessageResponse::GetClassData() const { return &_class_data_; }


void SendMessageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendMessageResponse*>(&to_msg);
  auto& from = static_cast<const SendMessageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.SendMessageResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_id().empty()) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageResponse::CopyFrom(const SendMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.SendMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessageResponse::IsInitialized() const {
  return true;
}

void SendMessageResponse::InternalSwap(SendMessageResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_id_, lhs_arena,
      &other->_impl_.message_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.status_, lhs_arena,
      &other->_impl_.status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendMessageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[36]);
}

// ===================================================================

class SendMessagesRequest::_Internal {
 public:
};

SendMessagesRequest::SendMessagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.SendMessagesRequest)
}
SendMessagesRequest::SendMessagesRequest(const SendMessagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendMessagesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , decltype(_impl_.atomic_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.atomic_ = from._impl_.atomic_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.SendMessagesRequest)
}

inline void SendMessagesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , decltype(_impl_.atomic_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendMessagesRequest::~SendMessagesRequest() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.SendMessagesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendMessagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
}

void SendMessagesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendMessagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.SendMessagesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _impl_.atomic_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendMessagesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .unhinged.messaging.Message messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool atomic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.atomic_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendMessagesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.SendMessagesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .unhinged.messaging.Message messages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool atomic = 2;
  if (this->_internal_atomic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_atomic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.SendMessagesRequest)
  return target;
}

size_t SendMessagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.SendMessagesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .unhinged.messaging.Message messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_impl_.messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool atomic = 2;
  if (this->_internal_atomic() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendMessagesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendMessagesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendMessagesRequest::GetClassData() const { return &_class_data_; }


void SendMessagesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendMessagesRequest*>(&to_msg);
  auto& from = static_cast<const SendMessagesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.SendMessagesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  if (from._internal_atomic() != 0) {
    _this->_internal_set_atomic(from._internal_atomic());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessagesRequest::CopyFrom(const SendMessagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.SendMessagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessagesRequest::IsInitialized() const {
  return true;
}

void SendMessagesRequest::InternalSwap(SendMessagesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  swap(_impl_.atomic_, other->_impl_.atomic_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendMessagesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[37]);
}

// ===================================================================

class SendMessageResult::_Internal {
 public:
};

SendMessageResult::SendMessageResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.SendMessageResult)
}
SendMessageResult::SendMessageResult(const SendMessageResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendMessageResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message_id().empty()) {
    _this->_impl_.message_id_.Set(from._internal_message_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.SendMessageResult)
}

inline void SendMessageResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendMessageResult::~SendMessageResult() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.SendMessageResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendMessageResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_id_.Destroy();
  _impl_.error_message_.Destroy();
}

void SendMessageResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendMessageResult::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.SendMessageResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendMessageResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.SendMessageResult.message_id"));
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.SendMessageResult.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendMessageResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.SendMessageResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_id = 1;
  if (!this->_internal_message_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_id().data(), static_cast<int>(this->_internal_message_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.SendMessageResult.message_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message_id(), target);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.SendMessageResult.error_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.SendMessageResult)
  return target;
}

size_t SendMessageResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.SendMessageResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message_id = 1;
  if (!this->_internal_message_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_id());
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendMessageResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendMessageResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendMessageResult::GetClassData() const { return &_class_data_; }


void SendMessageResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendMessageResult*>(&to_msg);
  auto& from = static_cast<const SendMessageResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.SendMessageResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_id().empty()) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageResult::CopyFrom(const SendMessageResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.SendMessageResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessageResult::IsInitialized() const {
  return true;
}

void SendMessageResult::InternalSwap(SendMessageResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_id_, lhs_arena,
      &other->_impl_.message_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendMessageResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[38]);
}

// ===================================================================

class SendMessagesResponse::_Internal {
 public:
};

SendMessagesResponse::SendMessagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.SendMessagesResponse)
}
SendMessagesResponse::SendMessagesResponse(const SendMessagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendMessagesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.results_){from._impl_.results_}
    , decltype(_impl_.success_){}
    , decltype(_impl_.successful_count_){}
    , decltype(_impl_.failed_count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.success_, &from._impl_.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.failed_count_) -
    reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.failed_count_));
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.SendMessagesResponse)
}

inline void SendMessagesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.results_){arena}
    , decltype(_impl_.success_){false}
    , decltype(_impl_.successful_count_){0}
    , decltype(_impl_.failed_count_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendMessagesResponse::~SendMessagesResponse() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.SendMessagesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendMessagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.results_.~RepeatedPtrField();
}

void SendMessagesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendMessagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.SendMessagesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  ::memset(&_impl_.success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.failed_count_) -
      reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.failed_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendMessagesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .unhinged.messaging.SendMessageResult results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 successful_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.successful_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 failed_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.failed_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendMessagesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.SendMessagesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // repeated .unhinged.messaging.SendMessageResult results = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_results_size()); i < n; i++) {
    const auto& repfield = this->_internal_results(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 successful_count = 3;
  if (this->_internal_successful_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_successful_count(), target);
  }

  // int32 failed_count = 4;
  if (this->_internal_failed_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_failed_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.SendMessagesResponse)
  return target;
}

size_t SendMessagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.SendMessagesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .unhinged.messaging.SendMessageResult results = 2;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->_impl_.results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  // int32 successful_count = 3;
  if (this->_internal_successful_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_successful_count());
  }

  // int32 failed_count = 4;
  if (this->_internal_failed_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_failed_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendMessagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendMessagesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendMessagesResponse::GetClassData() const { return &_class_data_; }


void SendMessagesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendMessagesResponse*>(&to_msg);
  auto& from = static_cast<const SendMessagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.SendMessagesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.results_.MergeFrom(from._impl_.results_);
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  if (from._internal_successful_count() != 0) {
    _this->_internal_set_successful_count(from._internal_successful_count());
  }
  if (from._internal_failed_count() != 0) {
    _this->_internal_set_failed_count(from._internal_failed_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessagesResponse::CopyFrom(const SendMessagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.SendMessagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessagesResponse::IsInitialized() const {
  return true;
}

void SendMessagesResponse::InternalSwap(SendMessagesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendMessagesResponse, _impl_.failed_count_)
      + sizeof(SendMessagesResponse::_impl_.failed_count_)
      - PROTOBUF_FIELD_OFFSET(SendMessagesResponse, _impl_.success_)>(
          reinterpret_cast<char*>(&_impl_.success_),
          reinterpret_cast<char*>(&other->_impl_.success_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendMessagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[39]);
}

// ===================================================================

class ReceiveMessagesRequest::_Internal {
 public:
};

ReceiveMessagesRequest::ReceiveMessagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ReceiveMessagesRequest)
}
ReceiveMessagesRequest::ReceiveMessagesRequest(const ReceiveMessagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveMessagesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_types_){from._impl_.message_types_}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.max_messages_){}
    , decltype(_impl_.wait_time_seconds_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.max_messages_, &from._impl_.max_messages_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.wait_time_seconds_) -
    reinterpret_cast<char*>(&_impl_.max_messages_)) + sizeof(_impl_.wait_time_seconds_));
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ReceiveMessagesRequest)
}

inline void ReceiveMessagesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_types_){arena}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.max_messages_){0}
    , decltype(_impl_.wait_time_seconds_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReceiveMessagesRequest::~ReceiveMessagesRequest() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ReceiveMessagesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveMessagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_types_.~RepeatedPtrField();
  _impl_.service_name_.Destroy();
}

void ReceiveMessagesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveMessagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ReceiveMessagesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_types_.Clear();
  _impl_.service_name_.ClearToEmpty();
  ::memset(&_impl_.max_messages_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.wait_time_seconds_) -
      reinterpret_cast<char*>(&_impl_.max_messages_)) + sizeof(_impl_.wait_time_seconds_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveMessagesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ReceiveMessagesRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated string message_types = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_message_types();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ReceiveMessagesRequest.message_types"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 max_messages = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.max_messages_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 wait_time_seconds = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.wait_time_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveMessagesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ReceiveMessagesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ReceiveMessagesRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // repeated string message_types = 2;
  for (int i = 0, n = this->_internal_message_types_size(); i < n; i++) {
    const auto& s = this->_internal_message_types(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ReceiveMessagesRequest.message_types");
    target = stream->WriteString(2, s, target);
  }

  // int32 max_messages = 3;
  if (this->_internal_max_messages() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_max_messages(), target);
  }

  // int32 wait_time_seconds = 4;
  if (this->_internal_wait_time_seconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_wait_time_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ReceiveMessagesRequest)
  return target;
}

size_t ReceiveMessagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ReceiveMessagesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string message_types = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.message_types_.size());
  for (int i = 0, n = _impl_.message_types_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.message_types_.Get(i));
  }

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // int32 max_messages = 3;
  if (this->_internal_max_messages() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_max_messages());
  }

  // int32 wait_time_seconds = 4;
  if (this->_internal_wait_time_seconds() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_wait_time_seconds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveMessagesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveMessagesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveMessagesRequest::GetClassData() const { return &_class_data_; }


void ReceiveMessagesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveMessagesRequest*>(&to_msg);
  auto& from = static_cast<const ReceiveMessagesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ReceiveMessagesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.message_types_.MergeFrom(from._impl_.message_types_);
  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (from._internal_max_messages() != 0) {
    _this->_internal_set_max_messages(from._internal_max_messages());
  }
  if (from._internal_wait_time_seconds() != 0) {
    _this->_internal_set_wait_time_seconds(from._internal_wait_time_seconds());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveMessagesRequest::CopyFrom(const ReceiveMessagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ReceiveMessagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveMessagesRequest::IsInitialized() const {
  return true;
}

void ReceiveMessagesRequest::InternalSwap(ReceiveMessagesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.message_types_.InternalSwap(&other->_impl_.message_types_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReceiveMessagesRequest, _impl_.wait_time_seconds_)
      + sizeof(ReceiveMessagesRequest::_impl_.wait_time_seconds_)
      - PROTOBUF_FIELD_OFFSET(ReceiveMessagesRequest, _impl_.max_messages_)>(
          reinterpret_cast<char*>(&_impl_.max_messages_),
          reinterpret_cast<char*>(&other->_impl_.max_messages_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveMessagesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[40]);
}

// ===================================================================

class ReceiveMessagesResponse::_Internal {
 public:
};

ReceiveMessagesResponse::ReceiveMessagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.ReceiveMessagesResponse)
}
ReceiveMessagesResponse::ReceiveMessagesResponse(const ReceiveMessagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveMessagesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , decltype(_impl_.receipt_handle_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.receipt_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.receipt_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_receipt_handle().empty()) {
    _this->_impl_.receipt_handle_.Set(from._internal_receipt_handle(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.ReceiveMessagesResponse)
}

inline void ReceiveMessagesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , decltype(_impl_.receipt_handle_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.receipt_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.receipt_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReceiveMessagesResponse::~ReceiveMessagesResponse() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.ReceiveMessagesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveMessagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
  _impl_.receipt_handle_.Destroy();
}

void ReceiveMessagesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveMessagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.ReceiveMessagesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _impl_.receipt_handle_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveMessagesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .unhinged.messaging.Message messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string receipt_handle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_receipt_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.ReceiveMessagesResponse.receipt_handle"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveMessagesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.ReceiveMessagesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .unhinged.messaging.Message messages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string receipt_handle = 2;
  if (!this->_internal_receipt_handle().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receipt_handle().data(), static_cast<int>(this->_internal_receipt_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.ReceiveMessagesResponse.receipt_handle");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_receipt_handle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.ReceiveMessagesResponse)
  return target;
}

size_t ReceiveMessagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.ReceiveMessagesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .unhinged.messaging.Message messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_impl_.messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string receipt_handle = 2;
  if (!this->_internal_receipt_handle().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receipt_handle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveMessagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveMessagesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveMessagesResponse::GetClassData() const { return &_class_data_; }


void ReceiveMessagesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveMessagesResponse*>(&to_msg);
  auto& from = static_cast<const ReceiveMessagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.ReceiveMessagesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  if (!from._internal_receipt_handle().empty()) {
    _this->_internal_set_receipt_handle(from._internal_receipt_handle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveMessagesResponse::CopyFrom(const ReceiveMessagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.ReceiveMessagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveMessagesResponse::IsInitialized() const {
  return true;
}

void ReceiveMessagesResponse::InternalSwap(ReceiveMessagesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.receipt_handle_, lhs_arena,
      &other->_impl_.receipt_handle_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveMessagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[41]);
}

// ===================================================================

class AcknowledgeMessageRequest::_Internal {
 public:
};

AcknowledgeMessageRequest::AcknowledgeMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.AcknowledgeMessageRequest)
}
AcknowledgeMessageRequest::AcknowledgeMessageRequest(const AcknowledgeMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AcknowledgeMessageRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , decltype(_impl_.receipt_handle_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message_id().empty()) {
    _this->_impl_.message_id_.Set(from._internal_message_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.receipt_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.receipt_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_receipt_handle().empty()) {
    _this->_impl_.receipt_handle_.Set(from._internal_receipt_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.AcknowledgeMessageRequest)
}

inline void AcknowledgeMessageRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_id_){}
    , decltype(_impl_.receipt_handle_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.receipt_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.receipt_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AcknowledgeMessageRequest::~AcknowledgeMessageRequest() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.AcknowledgeMessageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AcknowledgeMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_id_.Destroy();
  _impl_.receipt_handle_.Destroy();
  _impl_.error_message_.Destroy();
}

void AcknowledgeMessageRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AcknowledgeMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.AcknowledgeMessageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_.ClearToEmpty();
  _impl_.receipt_handle_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AcknowledgeMessageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AcknowledgeMessageRequest.message_id"));
        } else
          goto handle_unusual;
        continue;
      // string receipt_handle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_receipt_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AcknowledgeMessageRequest.receipt_handle"));
        } else
          goto handle_unusual;
        continue;
      // bool success = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AcknowledgeMessageRequest.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AcknowledgeMessageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.AcknowledgeMessageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_id = 1;
  if (!this->_internal_message_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_id().data(), static_cast<int>(this->_internal_message_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AcknowledgeMessageRequest.message_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message_id(), target);
  }

  // string receipt_handle = 2;
  if (!this->_internal_receipt_handle().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_receipt_handle().data(), static_cast<int>(this->_internal_receipt_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AcknowledgeMessageRequest.receipt_handle");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_receipt_handle(), target);
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_success(), target);
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AcknowledgeMessageRequest.error_message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.AcknowledgeMessageRequest)
  return target;
}

size_t AcknowledgeMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.AcknowledgeMessageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message_id = 1;
  if (!this->_internal_message_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_id());
  }

  // string receipt_handle = 2;
  if (!this->_internal_receipt_handle().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_receipt_handle());
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AcknowledgeMessageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AcknowledgeMessageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AcknowledgeMessageRequest::GetClassData() const { return &_class_data_; }


void AcknowledgeMessageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AcknowledgeMessageRequest*>(&to_msg);
  auto& from = static_cast<const AcknowledgeMessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.AcknowledgeMessageRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_id().empty()) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (!from._internal_receipt_handle().empty()) {
    _this->_internal_set_receipt_handle(from._internal_receipt_handle());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AcknowledgeMessageRequest::CopyFrom(const AcknowledgeMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.AcknowledgeMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcknowledgeMessageRequest::IsInitialized() const {
  return true;
}

void AcknowledgeMessageRequest::InternalSwap(AcknowledgeMessageRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_id_, lhs_arena,
      &other->_impl_.message_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.receipt_handle_, lhs_arena,
      &other->_impl_.receipt_handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AcknowledgeMessageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[42]);
}

// ===================================================================

class AcknowledgeMessageResponse::_Internal {
 public:
};

AcknowledgeMessageResponse::AcknowledgeMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.AcknowledgeMessageResponse)
}
AcknowledgeMessageResponse::AcknowledgeMessageResponse(const AcknowledgeMessageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AcknowledgeMessageResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.AcknowledgeMessageResponse)
}

inline void AcknowledgeMessageResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AcknowledgeMessageResponse::~AcknowledgeMessageResponse() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.AcknowledgeMessageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AcknowledgeMessageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void AcknowledgeMessageResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AcknowledgeMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.AcknowledgeMessageResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AcknowledgeMessageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.AcknowledgeMessageResponse.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AcknowledgeMessageResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.AcknowledgeMessageResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.AcknowledgeMessageResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.AcknowledgeMessageResponse)
  return target;
}

size_t AcknowledgeMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.AcknowledgeMessageResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AcknowledgeMessageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AcknowledgeMessageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AcknowledgeMessageResponse::GetClassData() const { return &_class_data_; }


void AcknowledgeMessageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AcknowledgeMessageResponse*>(&to_msg);
  auto& from = static_cast<const AcknowledgeMessageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.AcknowledgeMessageResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AcknowledgeMessageResponse::CopyFrom(const AcknowledgeMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.AcknowledgeMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcknowledgeMessageResponse::IsInitialized() const {
  return true;
}

void AcknowledgeMessageResponse::InternalSwap(AcknowledgeMessageResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AcknowledgeMessageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[43]);
}

// ===================================================================

class SubscribeToMessagesRequest::_Internal {
 public:
  static const ::unhinged::messaging::MessageFilter& filter(const SubscribeToMessagesRequest* msg);
};

const ::unhinged::messaging::MessageFilter&
SubscribeToMessagesRequest::_Internal::filter(const SubscribeToMessagesRequest* msg) {
  return *msg->_impl_.filter_;
}
SubscribeToMessagesRequest::SubscribeToMessagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.SubscribeToMessagesRequest)
}
SubscribeToMessagesRequest::SubscribeToMessagesRequest(const SubscribeToMessagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SubscribeToMessagesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_types_){from._impl_.message_types_}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.filter_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_name().empty()) {
    _this->_impl_.service_name_.Set(from._internal_service_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_filter()) {
    _this->_impl_.filter_ = new ::unhinged::messaging::MessageFilter(*from._impl_.filter_);
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.SubscribeToMessagesRequest)
}

inline void SubscribeToMessagesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_types_){arena}
    , decltype(_impl_.service_name_){}
    , decltype(_impl_.filter_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SubscribeToMessagesRequest::~SubscribeToMessagesRequest() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.SubscribeToMessagesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SubscribeToMessagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_types_.~RepeatedPtrField();
  _impl_.service_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.filter_;
}

void SubscribeToMessagesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SubscribeToMessagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.SubscribeToMessagesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_types_.Clear();
  _impl_.service_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.filter_ != nullptr) {
    delete _impl_.filter_;
  }
  _impl_.filter_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeToMessagesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.SubscribeToMessagesRequest.service_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated string message_types = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_message_types();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.SubscribeToMessagesRequest.message_types"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.MessageFilter filter = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_filter(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubscribeToMessagesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.SubscribeToMessagesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.SubscribeToMessagesRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // repeated string message_types = 2;
  for (int i = 0, n = this->_internal_message_types_size(); i < n; i++) {
    const auto& s = this->_internal_message_types(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.SubscribeToMessagesRequest.message_types");
    target = stream->WriteString(2, s, target);
  }

  // .unhinged.messaging.MessageFilter filter = 3;
  if (this->_internal_has_filter()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::filter(this),
        _Internal::filter(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.SubscribeToMessagesRequest)
  return target;
}

size_t SubscribeToMessagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.SubscribeToMessagesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string message_types = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.message_types_.size());
  for (int i = 0, n = _impl_.message_types_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.message_types_.Get(i));
  }

  // string service_name = 1;
  if (!this->_internal_service_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // .unhinged.messaging.MessageFilter filter = 3;
  if (this->_internal_has_filter()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.filter_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeToMessagesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SubscribeToMessagesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeToMessagesRequest::GetClassData() const { return &_class_data_; }


void SubscribeToMessagesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SubscribeToMessagesRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeToMessagesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.SubscribeToMessagesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.message_types_.MergeFrom(from._impl_.message_types_);
  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (from._internal_has_filter()) {
    _this->_internal_mutable_filter()->::unhinged::messaging::MessageFilter::MergeFrom(
        from._internal_filter());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeToMessagesRequest::CopyFrom(const SubscribeToMessagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.SubscribeToMessagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeToMessagesRequest::IsInitialized() const {
  return true;
}

void SubscribeToMessagesRequest::InternalSwap(SubscribeToMessagesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.message_types_.InternalSwap(&other->_impl_.message_types_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
  swap(_impl_.filter_, other->_impl_.filter_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeToMessagesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[44]);
}

// ===================================================================

class MessageFilter::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& metadata_filter(const MessageFilter* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
MessageFilter::_Internal::metadata_filter(const MessageFilter* msg) {
  return *msg->_impl_.metadata_filter_;
}
void MessageFilter::clear_metadata_filter() {
  if (GetArenaForAllocation() == nullptr && _impl_.metadata_filter_ != nullptr) {
    delete _impl_.metadata_filter_;
  }
  _impl_.metadata_filter_ = nullptr;
}
MessageFilter::MessageFilter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.MessageFilter)
}
MessageFilter::MessageFilter(const MessageFilter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MessageFilter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.from_services_){from._impl_.from_services_}
    , decltype(_impl_.user_ids_){from._impl_.user_ids_}
    , decltype(_impl_.session_ids_){from._impl_.session_ids_}
    , decltype(_impl_.metadata_filter_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metadata_filter()) {
    _this->_impl_.metadata_filter_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.metadata_filter_);
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.MessageFilter)
}

inline void MessageFilter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.from_services_){arena}
    , decltype(_impl_.user_ids_){arena}
    , decltype(_impl_.session_ids_){arena}
    , decltype(_impl_.metadata_filter_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MessageFilter::~MessageFilter() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.MessageFilter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageFilter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.from_services_.~RepeatedPtrField();
  _impl_.user_ids_.~RepeatedPtrField();
  _impl_.session_ids_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.metadata_filter_;
}

void MessageFilter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.MessageFilter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.from_services_.Clear();
  _impl_.user_ids_.Clear();
  _impl_.session_ids_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.metadata_filter_ != nullptr) {
    delete _impl_.metadata_filter_;
  }
  _impl_.metadata_filter_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageFilter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string from_services = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_from_services();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.MessageFilter.from_services"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string user_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_user_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.MessageFilter.user_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string session_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_session_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.MessageFilter.session_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct metadata_filter = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata_filter(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MessageFilter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.MessageFilter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string from_services = 1;
  for (int i = 0, n = this->_internal_from_services_size(); i < n; i++) {
    const auto& s = this->_internal_from_services(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.MessageFilter.from_services");
    target = stream->WriteString(1, s, target);
  }

  // repeated string user_ids = 2;
  for (int i = 0, n = this->_internal_user_ids_size(); i < n; i++) {
    const auto& s = this->_internal_user_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.MessageFilter.user_ids");
    target = stream->WriteString(2, s, target);
  }

  // repeated string session_ids = 3;
  for (int i = 0, n = this->_internal_session_ids_size(); i < n; i++) {
    const auto& s = this->_internal_session_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.MessageFilter.session_ids");
    target = stream->WriteString(3, s, target);
  }

  // .google.protobuf.Struct metadata_filter = 4;
  if (this->_internal_has_metadata_filter()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::metadata_filter(this),
        _Internal::metadata_filter(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.MessageFilter)
  return target;
}

size_t MessageFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.MessageFilter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string from_services = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.from_services_.size());
  for (int i = 0, n = _impl_.from_services_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.from_services_.Get(i));
  }

  // repeated string user_ids = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.user_ids_.size());
  for (int i = 0, n = _impl_.user_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.user_ids_.Get(i));
  }

  // repeated string session_ids = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.session_ids_.size());
  for (int i = 0, n = _impl_.session_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.session_ids_.Get(i));
  }

  // .google.protobuf.Struct metadata_filter = 4;
  if (this->_internal_has_metadata_filter()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metadata_filter_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageFilter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageFilter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageFilter::GetClassData() const { return &_class_data_; }


void MessageFilter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageFilter*>(&to_msg);
  auto& from = static_cast<const MessageFilter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.MessageFilter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.from_services_.MergeFrom(from._impl_.from_services_);
  _this->_impl_.user_ids_.MergeFrom(from._impl_.user_ids_);
  _this->_impl_.session_ids_.MergeFrom(from._impl_.session_ids_);
  if (from._internal_has_metadata_filter()) {
    _this->_internal_mutable_metadata_filter()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_metadata_filter());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageFilter::CopyFrom(const MessageFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.MessageFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageFilter::IsInitialized() const {
  return true;
}

void MessageFilter::InternalSwap(MessageFilter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.from_services_.InternalSwap(&other->_impl_.from_services_);
  _impl_.user_ids_.InternalSwap(&other->_impl_.user_ids_);
  _impl_.session_ids_.InternalSwap(&other->_impl_.session_ids_);
  swap(_impl_.metadata_filter_, other->_impl_.metadata_filter_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageFilter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[45]);
}

// ===================================================================

class MessageStreamResponse::_Internal {
 public:
  static const ::unhinged::messaging::Message& message(const MessageStreamResponse* msg);
  static const ::unhinged::messaging::StreamStatus& status(const MessageStreamResponse* msg);
  static const ::unhinged::messaging::StreamError& error(const MessageStreamResponse* msg);
};

const ::unhinged::messaging::Message&
MessageStreamResponse::_Internal::message(const MessageStreamResponse* msg) {
  return *msg->_impl_.response_type_.message_;
}
const ::unhinged::messaging::StreamStatus&
MessageStreamResponse::_Internal::status(const MessageStreamResponse* msg) {
  return *msg->_impl_.response_type_.status_;
}
const ::unhinged::messaging::StreamError&
MessageStreamResponse::_Internal::error(const MessageStreamResponse* msg) {
  return *msg->_impl_.response_type_.error_;
}
void MessageStreamResponse::set_allocated_message(::unhinged::messaging::Message* message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response_type();
  if (message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(message);
    if (message_arena != submessage_arena) {
      message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    set_has_message();
    _impl_.response_type_.message_ = message;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.MessageStreamResponse.message)
}
void MessageStreamResponse::set_allocated_status(::unhinged::messaging::StreamStatus* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response_type();
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(status);
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    set_has_status();
    _impl_.response_type_.status_ = status;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.MessageStreamResponse.status)
}
void MessageStreamResponse::set_allocated_error(::unhinged::messaging::StreamError* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response_type();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(error);
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    _impl_.response_type_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:unhinged.messaging.MessageStreamResponse.error)
}
MessageStreamResponse::MessageStreamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.MessageStreamResponse)
}
MessageStreamResponse::MessageStreamResponse(const MessageStreamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MessageStreamResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.response_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_response_type();
  switch (from.response_type_case()) {
    case kMessage: {
      _this->_internal_mutable_message()->::unhinged::messaging::Message::MergeFrom(
          from._internal_message());
      break;
    }
    case kStatus: {
      _this->_internal_mutable_status()->::unhinged::messaging::StreamStatus::MergeFrom(
          from._internal_status());
      break;
    }
    case kError: {
      _this->_internal_mutable_error()->::unhinged::messaging::StreamError::MergeFrom(
          from._internal_error());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.MessageStreamResponse)
}

inline void MessageStreamResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.response_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_response_type();
}

MessageStreamResponse::~MessageStreamResponse() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.MessageStreamResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageStreamResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_response_type()) {
    clear_response_type();
  }
}

void MessageStreamResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageStreamResponse::clear_response_type() {
// @@protoc_insertion_point(one_of_clear_start:unhinged.messaging.MessageStreamResponse)
  switch (response_type_case()) {
    case kMessage: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.response_type_.message_;
      }
      break;
    }
    case kStatus: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.response_type_.status_;
      }
      break;
    }
    case kError: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.response_type_.error_;
      }
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESPONSE_TYPE_NOT_SET;
}


void MessageStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.MessageStreamResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageStreamResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .unhinged.messaging.Message message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.StreamStatus status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .unhinged.messaging.StreamError error = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MessageStreamResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.MessageStreamResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .unhinged.messaging.Message message = 1;
  if (_internal_has_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::message(this),
        _Internal::message(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.StreamStatus status = 2;
  if (_internal_has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .unhinged.messaging.StreamError error = 3;
  if (_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.MessageStreamResponse)
  return target;
}

size_t MessageStreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.MessageStreamResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (response_type_case()) {
    // .unhinged.messaging.Message message = 1;
    case kMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.response_type_.message_);
      break;
    }
    // .unhinged.messaging.StreamStatus status = 2;
    case kStatus: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.response_type_.status_);
      break;
    }
    // .unhinged.messaging.StreamError error = 3;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.response_type_.error_);
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageStreamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageStreamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageStreamResponse::GetClassData() const { return &_class_data_; }


void MessageStreamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageStreamResponse*>(&to_msg);
  auto& from = static_cast<const MessageStreamResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.MessageStreamResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_type_case()) {
    case kMessage: {
      _this->_internal_mutable_message()->::unhinged::messaging::Message::MergeFrom(
          from._internal_message());
      break;
    }
    case kStatus: {
      _this->_internal_mutable_status()->::unhinged::messaging::StreamStatus::MergeFrom(
          from._internal_status());
      break;
    }
    case kError: {
      _this->_internal_mutable_error()->::unhinged::messaging::StreamError::MergeFrom(
          from._internal_error());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageStreamResponse::CopyFrom(const MessageStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.MessageStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageStreamResponse::IsInitialized() const {
  return true;
}

void MessageStreamResponse::InternalSwap(MessageStreamResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.response_type_, other->_impl_.response_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageStreamResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[46]);
}

// ===================================================================

class StreamStatus::_Internal {
 public:
};

StreamStatus::StreamStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.StreamStatus)
}
StreamStatus::StreamStatus(const StreamStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){}
    , decltype(_impl_.messages_received_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.messages_received_ = from._impl_.messages_received_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.StreamStatus)
}

inline void StreamStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){}
    , decltype(_impl_.messages_received_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StreamStatus::~StreamStatus() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.StreamStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.status_.Destroy();
}

void StreamStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.StreamStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  _impl_.messages_received_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.StreamStatus.status"));
        } else
          goto handle_unusual;
        continue;
      // int32 messages_received = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.messages_received_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.StreamStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.StreamStatus.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  // int32 messages_received = 2;
  if (this->_internal_messages_received() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_messages_received(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.StreamStatus)
  return target;
}

size_t StreamStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.StreamStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // int32 messages_received = 2;
  if (this->_internal_messages_received() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_messages_received());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamStatus::GetClassData() const { return &_class_data_; }


void StreamStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamStatus*>(&to_msg);
  auto& from = static_cast<const StreamStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.StreamStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_messages_received() != 0) {
    _this->_internal_set_messages_received(from._internal_messages_received());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamStatus::CopyFrom(const StreamStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.StreamStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamStatus::IsInitialized() const {
  return true;
}

void StreamStatus::InternalSwap(StreamStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.status_, lhs_arena,
      &other->_impl_.status_, rhs_arena
  );
  swap(_impl_.messages_received_, other->_impl_.messages_received_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[47]);
}

// ===================================================================

class StreamError::_Internal {
 public:
};

StreamError::StreamError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:unhinged.messaging.StreamError)
}
StreamError::StreamError(const StreamError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamError* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_code_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.is_recoverable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_code().empty()) {
    _this->_impl_.error_code_.Set(from._internal_error_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.is_recoverable_ = from._impl_.is_recoverable_;
  // @@protoc_insertion_point(copy_constructor:unhinged.messaging.StreamError)
}

inline void StreamError::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_code_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.is_recoverable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StreamError::~StreamError() {
  // @@protoc_insertion_point(destructor:unhinged.messaging.StreamError)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_code_.Destroy();
  _impl_.error_message_.Destroy();
}

void StreamError::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamError::Clear() {
// @@protoc_insertion_point(message_clear_start:unhinged.messaging.StreamError)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_code_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.is_recoverable_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamError::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_error_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.StreamError.error_code"));
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "unhinged.messaging.StreamError.error_message"));
        } else
          goto handle_unusual;
        continue;
      // bool is_recoverable = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.is_recoverable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamError::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:unhinged.messaging.StreamError)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_code = 1;
  if (!this->_internal_error_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_code().data(), static_cast<int>(this->_internal_error_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.StreamError.error_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error_code(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "unhinged.messaging.StreamError.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // bool is_recoverable = 3;
  if (this->_internal_is_recoverable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_is_recoverable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:unhinged.messaging.StreamError)
  return target;
}

size_t StreamError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:unhinged.messaging.StreamError)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_code = 1;
  if (!this->_internal_error_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_code());
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool is_recoverable = 3;
  if (this->_internal_is_recoverable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamError::GetClassData() const { return &_class_data_; }


void StreamError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamError*>(&to_msg);
  auto& from = static_cast<const StreamError&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:unhinged.messaging.StreamError)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_code().empty()) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_is_recoverable() != 0) {
    _this->_internal_set_is_recoverable(from._internal_is_recoverable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamError::CopyFrom(const StreamError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:unhinged.messaging.StreamError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamError::IsInitialized() const {
  return true;
}

void StreamError::InternalSwap(StreamError* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_code_, lhs_arena,
      &other->_impl_.error_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.is_recoverable_, other->_impl_.is_recoverable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamError::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messaging_2eproto_getter, &descriptor_table_messaging_2eproto_once,
      file_level_metadata_messaging_2eproto[48]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace messaging
}  // namespace unhinged
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::unhinged::messaging::Message*
Arena::CreateMaybeMessage< ::unhinged::messaging::Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::Message >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::MessageOptions*
Arena::CreateMaybeMessage< ::unhinged::messaging::MessageOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::MessageOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::LLMMessage*
Arena::CreateMaybeMessage< ::unhinged::messaging::LLMMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::LLMMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::LLMPromptRequest*
Arena::CreateMaybeMessage< ::unhinged::messaging::LLMPromptRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::LLMPromptRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ContextDocument*
Arena::CreateMaybeMessage< ::unhinged::messaging::ContextDocument >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ContextDocument >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::LLMPromptResponse*
Arena::CreateMaybeMessage< ::unhinged::messaging::LLMPromptResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::LLMPromptResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::LLMStreamChunk*
Arena::CreateMaybeMessage< ::unhinged::messaging::LLMStreamChunk >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::LLMStreamChunk >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::LLMError*
Arena::CreateMaybeMessage< ::unhinged::messaging::LLMError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::LLMError >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::LLMCancel*
Arena::CreateMaybeMessage< ::unhinged::messaging::LLMCancel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::LLMCancel >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ToolCall*
Arena::CreateMaybeMessage< ::unhinged::messaging::ToolCall >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ToolCall >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::AgentMessage*
Arena::CreateMaybeMessage< ::unhinged::messaging::AgentMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::AgentMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::AgentTaskRequest*
Arena::CreateMaybeMessage< ::unhinged::messaging::AgentTaskRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::AgentTaskRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::AgentTaskResponse*
Arena::CreateMaybeMessage< ::unhinged::messaging::AgentTaskResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::AgentTaskResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::AgentStepUpdate*
Arena::CreateMaybeMessage< ::unhinged::messaging::AgentStepUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::AgentStepUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::AgentCollaboration*
Arena::CreateMaybeMessage< ::unhinged::messaging::AgentCollaboration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::AgentCollaboration >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::AgentError*
Arena::CreateMaybeMessage< ::unhinged::messaging::AgentError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::AgentError >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ToolMessage*
Arena::CreateMaybeMessage< ::unhinged::messaging::ToolMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ToolMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ToolInvocation*
Arena::CreateMaybeMessage< ::unhinged::messaging::ToolInvocation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ToolInvocation >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ToolResult*
Arena::CreateMaybeMessage< ::unhinged::messaging::ToolResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ToolResult >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ToolError*
Arena::CreateMaybeMessage< ::unhinged::messaging::ToolError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ToolError >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ToolRegistration*
Arena::CreateMaybeMessage< ::unhinged::messaging::ToolRegistration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ToolRegistration >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::WorkflowMessage*
Arena::CreateMaybeMessage< ::unhinged::messaging::WorkflowMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::WorkflowMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::WorkflowTrigger*
Arena::CreateMaybeMessage< ::unhinged::messaging::WorkflowTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::WorkflowTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::WorkflowStepExecution*
Arena::CreateMaybeMessage< ::unhinged::messaging::WorkflowStepExecution >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::WorkflowStepExecution >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::WorkflowCompletion*
Arena::CreateMaybeMessage< ::unhinged::messaging::WorkflowCompletion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::WorkflowCompletion >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::WorkflowControl*
Arena::CreateMaybeMessage< ::unhinged::messaging::WorkflowControl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::WorkflowControl >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::UIMessage*
Arena::CreateMaybeMessage< ::unhinged::messaging::UIMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::UIMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::UIUpdate*
Arena::CreateMaybeMessage< ::unhinged::messaging::UIUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::UIUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::UINotification*
Arena::CreateMaybeMessage< ::unhinged::messaging::UINotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::UINotification >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::UICommand*
Arena::CreateMaybeMessage< ::unhinged::messaging::UICommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::UICommand >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::SystemMessage*
Arena::CreateMaybeMessage< ::unhinged::messaging::SystemMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::SystemMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ServiceDiscovery*
Arena::CreateMaybeMessage< ::unhinged::messaging::ServiceDiscovery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ServiceDiscovery >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::HealthCheck*
Arena::CreateMaybeMessage< ::unhinged::messaging::HealthCheck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::HealthCheck >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ConfigUpdate*
Arena::CreateMaybeMessage< ::unhinged::messaging::ConfigUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ConfigUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ShutdownNotice*
Arena::CreateMaybeMessage< ::unhinged::messaging::ShutdownNotice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ShutdownNotice >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::SendMessageRequest*
Arena::CreateMaybeMessage< ::unhinged::messaging::SendMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::SendMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::SendMessageResponse*
Arena::CreateMaybeMessage< ::unhinged::messaging::SendMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::SendMessageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::SendMessagesRequest*
Arena::CreateMaybeMessage< ::unhinged::messaging::SendMessagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::SendMessagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::SendMessageResult*
Arena::CreateMaybeMessage< ::unhinged::messaging::SendMessageResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::SendMessageResult >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::SendMessagesResponse*
Arena::CreateMaybeMessage< ::unhinged::messaging::SendMessagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::SendMessagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ReceiveMessagesRequest*
Arena::CreateMaybeMessage< ::unhinged::messaging::ReceiveMessagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ReceiveMessagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::ReceiveMessagesResponse*
Arena::CreateMaybeMessage< ::unhinged::messaging::ReceiveMessagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::ReceiveMessagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::AcknowledgeMessageRequest*
Arena::CreateMaybeMessage< ::unhinged::messaging::AcknowledgeMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::AcknowledgeMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::AcknowledgeMessageResponse*
Arena::CreateMaybeMessage< ::unhinged::messaging::AcknowledgeMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::AcknowledgeMessageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::SubscribeToMessagesRequest*
Arena::CreateMaybeMessage< ::unhinged::messaging::SubscribeToMessagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::SubscribeToMessagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::MessageFilter*
Arena::CreateMaybeMessage< ::unhinged::messaging::MessageFilter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::MessageFilter >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::MessageStreamResponse*
Arena::CreateMaybeMessage< ::unhinged::messaging::MessageStreamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::MessageStreamResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::StreamStatus*
Arena::CreateMaybeMessage< ::unhinged::messaging::StreamStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::StreamStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::unhinged::messaging::StreamError*
Arena::CreateMaybeMessage< ::unhinged::messaging::StreamError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::unhinged::messaging::StreamError >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
