// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: observability.proto
// Original file comments:
// ============================================================================
// Observability Events - CDC Integration Schema
// ============================================================================
//
// @file observability.proto
// @version 1.0.0
// @author Unhinged Team
// @date 2025-10-06
// @description Protocol buffer definitions for observability events in CDC stream
//
// This schema extends our existing CDC event system to support OpenTelemetry
// traces, metrics, and logs with proper context preservation and dual persistence
// to both Kafka CDC stream and data lake storage.
// ============================================================================
//
#ifndef GRPC_observability_2eproto__INCLUDED
#define GRPC_observability_2eproto__INCLUDED

#include "observability.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace unhinged {
namespace observability {
namespace v1 {

}  // namespace v1
}  // namespace observability
}  // namespace unhinged


#endif  // GRPC_observability_2eproto__INCLUDED
