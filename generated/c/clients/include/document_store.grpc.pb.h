// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: document_store.proto
#ifndef GRPC_document_5fstore_2eproto__INCLUDED
#define GRPC_document_5fstore_2eproto__INCLUDED

#include "document_store.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace unhinged {
namespace document_store {

// Service definition
class DocumentStoreService final {
 public:
  static constexpr char const* service_full_name() {
    return "unhinged.document_store.DocumentStoreService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Document CRUD operations
    virtual ::grpc::Status PutDocument(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest& request, ::unhinged::document_store::PutDocumentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentResponse>> AsyncPutDocument(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentResponse>>(AsyncPutDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentResponse>> PrepareAsyncPutDocument(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentResponse>>(PrepareAsyncPutDocumentRaw(context, request, cq));
    }
    virtual ::grpc::Status PutDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest& request, ::unhinged::document_store::PutDocumentsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentsResponse>> AsyncPutDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentsResponse>>(AsyncPutDocumentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentsResponse>> PrepareAsyncPutDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentsResponse>>(PrepareAsyncPutDocumentsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDocument(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest& request, ::unhinged::document_store::GetDocumentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetDocumentResponse>> AsyncGetDocument(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetDocumentResponse>>(AsyncGetDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetDocumentResponse>> PrepareAsyncGetDocument(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetDocumentResponse>>(PrepareAsyncGetDocumentRaw(context, request, cq));
    }
    virtual ::grpc::Status ListDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest& request, ::unhinged::document_store::ListDocumentsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentsResponse>> AsyncListDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentsResponse>>(AsyncListDocumentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentsResponse>> PrepareAsyncListDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentsResponse>>(PrepareAsyncListDocumentsRaw(context, request, cq));
    }
    virtual ::grpc::Status ListDocumentVersions(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest& request, ::unhinged::document_store::ListDocumentVersionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentVersionsResponse>> AsyncListDocumentVersions(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentVersionsResponse>>(AsyncListDocumentVersionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentVersionsResponse>> PrepareAsyncListDocumentVersions(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentVersionsResponse>>(PrepareAsyncListDocumentVersionsRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteDocument(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest& request, ::unhinged::document_store::DeleteDocumentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::DeleteDocumentResponse>> AsyncDeleteDocument(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::DeleteDocumentResponse>>(AsyncDeleteDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::DeleteDocumentResponse>> PrepareAsyncDeleteDocument(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::DeleteDocumentResponse>>(PrepareAsyncDeleteDocumentRaw(context, request, cq));
    }
    // Tag operations
    virtual ::grpc::Status TagDocument(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest& request, ::unhinged::document_store::TagDocumentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::TagDocumentResponse>> AsyncTagDocument(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::TagDocumentResponse>>(AsyncTagDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::TagDocumentResponse>> PrepareAsyncTagDocument(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::TagDocumentResponse>>(PrepareAsyncTagDocumentRaw(context, request, cq));
    }
    virtual ::grpc::Status ListActiveTags(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest& request, ::unhinged::document_store::ListActiveTagsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListActiveTagsResponse>> AsyncListActiveTags(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListActiveTagsResponse>>(AsyncListActiveTagsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListActiveTagsResponse>> PrepareAsyncListActiveTags(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListActiveTagsResponse>>(PrepareAsyncListActiveTagsRaw(context, request, cq));
    }
    virtual ::grpc::Status ListTagEvents(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest& request, ::unhinged::document_store::ListTagEventsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListTagEventsResponse>> AsyncListTagEvents(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListTagEventsResponse>>(AsyncListTagEventsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListTagEventsResponse>> PrepareAsyncListTagEvents(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListTagEventsResponse>>(PrepareAsyncListTagEventsRaw(context, request, cq));
    }
    // Session context
    virtual ::grpc::Status GetSessionContext(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest& request, ::unhinged::document_store::GetSessionContextResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetSessionContextResponse>> AsyncGetSessionContext(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetSessionContextResponse>>(AsyncGetSessionContextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetSessionContextResponse>> PrepareAsyncGetSessionContext(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetSessionContextResponse>>(PrepareAsyncGetSessionContextRaw(context, request, cq));
    }
    // Health check
    virtual ::grpc::Status HealthCheck(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest& request, ::unhinged::document_store::HealthCheckResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::HealthCheckResponse>> AsyncHealthCheck(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::HealthCheckResponse>>(AsyncHealthCheckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::HealthCheckResponse>> PrepareAsyncHealthCheck(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::HealthCheckResponse>>(PrepareAsyncHealthCheckRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Document CRUD operations
      virtual void PutDocument(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest* request, ::unhinged::document_store::PutDocumentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PutDocument(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest* request, ::unhinged::document_store::PutDocumentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PutDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest* request, ::unhinged::document_store::PutDocumentsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PutDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest* request, ::unhinged::document_store::PutDocumentsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDocument(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest* request, ::unhinged::document_store::GetDocumentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDocument(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest* request, ::unhinged::document_store::GetDocumentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest* request, ::unhinged::document_store::ListDocumentsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest* request, ::unhinged::document_store::ListDocumentsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListDocumentVersions(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest* request, ::unhinged::document_store::ListDocumentVersionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListDocumentVersions(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest* request, ::unhinged::document_store::ListDocumentVersionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteDocument(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest* request, ::unhinged::document_store::DeleteDocumentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteDocument(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest* request, ::unhinged::document_store::DeleteDocumentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Tag operations
      virtual void TagDocument(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest* request, ::unhinged::document_store::TagDocumentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TagDocument(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest* request, ::unhinged::document_store::TagDocumentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListActiveTags(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest* request, ::unhinged::document_store::ListActiveTagsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListActiveTags(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest* request, ::unhinged::document_store::ListActiveTagsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListTagEvents(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest* request, ::unhinged::document_store::ListTagEventsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListTagEvents(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest* request, ::unhinged::document_store::ListTagEventsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Session context
      virtual void GetSessionContext(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest* request, ::unhinged::document_store::GetSessionContextResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSessionContext(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest* request, ::unhinged::document_store::GetSessionContextResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Health check
      virtual void HealthCheck(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest* request, ::unhinged::document_store::HealthCheckResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void HealthCheck(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest* request, ::unhinged::document_store::HealthCheckResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentResponse>* AsyncPutDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentResponse>* PrepareAsyncPutDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentsResponse>* AsyncPutDocumentsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::PutDocumentsResponse>* PrepareAsyncPutDocumentsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetDocumentResponse>* AsyncGetDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetDocumentResponse>* PrepareAsyncGetDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentsResponse>* AsyncListDocumentsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentsResponse>* PrepareAsyncListDocumentsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentVersionsResponse>* AsyncListDocumentVersionsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListDocumentVersionsResponse>* PrepareAsyncListDocumentVersionsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::DeleteDocumentResponse>* AsyncDeleteDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::DeleteDocumentResponse>* PrepareAsyncDeleteDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::TagDocumentResponse>* AsyncTagDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::TagDocumentResponse>* PrepareAsyncTagDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListActiveTagsResponse>* AsyncListActiveTagsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListActiveTagsResponse>* PrepareAsyncListActiveTagsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListTagEventsResponse>* AsyncListTagEventsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::ListTagEventsResponse>* PrepareAsyncListTagEventsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetSessionContextResponse>* AsyncGetSessionContextRaw(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::GetSessionContextResponse>* PrepareAsyncGetSessionContextRaw(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::HealthCheckResponse>* AsyncHealthCheckRaw(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::unhinged::document_store::HealthCheckResponse>* PrepareAsyncHealthCheckRaw(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status PutDocument(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest& request, ::unhinged::document_store::PutDocumentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentResponse>> AsyncPutDocument(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentResponse>>(AsyncPutDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentResponse>> PrepareAsyncPutDocument(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentResponse>>(PrepareAsyncPutDocumentRaw(context, request, cq));
    }
    ::grpc::Status PutDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest& request, ::unhinged::document_store::PutDocumentsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentsResponse>> AsyncPutDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentsResponse>>(AsyncPutDocumentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentsResponse>> PrepareAsyncPutDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentsResponse>>(PrepareAsyncPutDocumentsRaw(context, request, cq));
    }
    ::grpc::Status GetDocument(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest& request, ::unhinged::document_store::GetDocumentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetDocumentResponse>> AsyncGetDocument(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetDocumentResponse>>(AsyncGetDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetDocumentResponse>> PrepareAsyncGetDocument(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetDocumentResponse>>(PrepareAsyncGetDocumentRaw(context, request, cq));
    }
    ::grpc::Status ListDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest& request, ::unhinged::document_store::ListDocumentsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentsResponse>> AsyncListDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentsResponse>>(AsyncListDocumentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentsResponse>> PrepareAsyncListDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentsResponse>>(PrepareAsyncListDocumentsRaw(context, request, cq));
    }
    ::grpc::Status ListDocumentVersions(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest& request, ::unhinged::document_store::ListDocumentVersionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentVersionsResponse>> AsyncListDocumentVersions(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentVersionsResponse>>(AsyncListDocumentVersionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentVersionsResponse>> PrepareAsyncListDocumentVersions(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentVersionsResponse>>(PrepareAsyncListDocumentVersionsRaw(context, request, cq));
    }
    ::grpc::Status DeleteDocument(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest& request, ::unhinged::document_store::DeleteDocumentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::DeleteDocumentResponse>> AsyncDeleteDocument(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::DeleteDocumentResponse>>(AsyncDeleteDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::DeleteDocumentResponse>> PrepareAsyncDeleteDocument(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::DeleteDocumentResponse>>(PrepareAsyncDeleteDocumentRaw(context, request, cq));
    }
    ::grpc::Status TagDocument(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest& request, ::unhinged::document_store::TagDocumentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::TagDocumentResponse>> AsyncTagDocument(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::TagDocumentResponse>>(AsyncTagDocumentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::TagDocumentResponse>> PrepareAsyncTagDocument(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::TagDocumentResponse>>(PrepareAsyncTagDocumentRaw(context, request, cq));
    }
    ::grpc::Status ListActiveTags(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest& request, ::unhinged::document_store::ListActiveTagsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListActiveTagsResponse>> AsyncListActiveTags(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListActiveTagsResponse>>(AsyncListActiveTagsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListActiveTagsResponse>> PrepareAsyncListActiveTags(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListActiveTagsResponse>>(PrepareAsyncListActiveTagsRaw(context, request, cq));
    }
    ::grpc::Status ListTagEvents(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest& request, ::unhinged::document_store::ListTagEventsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListTagEventsResponse>> AsyncListTagEvents(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListTagEventsResponse>>(AsyncListTagEventsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListTagEventsResponse>> PrepareAsyncListTagEvents(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListTagEventsResponse>>(PrepareAsyncListTagEventsRaw(context, request, cq));
    }
    ::grpc::Status GetSessionContext(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest& request, ::unhinged::document_store::GetSessionContextResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetSessionContextResponse>> AsyncGetSessionContext(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetSessionContextResponse>>(AsyncGetSessionContextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetSessionContextResponse>> PrepareAsyncGetSessionContext(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetSessionContextResponse>>(PrepareAsyncGetSessionContextRaw(context, request, cq));
    }
    ::grpc::Status HealthCheck(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest& request, ::unhinged::document_store::HealthCheckResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::HealthCheckResponse>> AsyncHealthCheck(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::HealthCheckResponse>>(AsyncHealthCheckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::HealthCheckResponse>> PrepareAsyncHealthCheck(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::HealthCheckResponse>>(PrepareAsyncHealthCheckRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void PutDocument(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest* request, ::unhinged::document_store::PutDocumentResponse* response, std::function<void(::grpc::Status)>) override;
      void PutDocument(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest* request, ::unhinged::document_store::PutDocumentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PutDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest* request, ::unhinged::document_store::PutDocumentsResponse* response, std::function<void(::grpc::Status)>) override;
      void PutDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest* request, ::unhinged::document_store::PutDocumentsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDocument(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest* request, ::unhinged::document_store::GetDocumentResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDocument(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest* request, ::unhinged::document_store::GetDocumentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest* request, ::unhinged::document_store::ListDocumentsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListDocuments(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest* request, ::unhinged::document_store::ListDocumentsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListDocumentVersions(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest* request, ::unhinged::document_store::ListDocumentVersionsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListDocumentVersions(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest* request, ::unhinged::document_store::ListDocumentVersionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteDocument(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest* request, ::unhinged::document_store::DeleteDocumentResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteDocument(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest* request, ::unhinged::document_store::DeleteDocumentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void TagDocument(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest* request, ::unhinged::document_store::TagDocumentResponse* response, std::function<void(::grpc::Status)>) override;
      void TagDocument(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest* request, ::unhinged::document_store::TagDocumentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListActiveTags(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest* request, ::unhinged::document_store::ListActiveTagsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListActiveTags(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest* request, ::unhinged::document_store::ListActiveTagsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListTagEvents(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest* request, ::unhinged::document_store::ListTagEventsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListTagEvents(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest* request, ::unhinged::document_store::ListTagEventsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSessionContext(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest* request, ::unhinged::document_store::GetSessionContextResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSessionContext(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest* request, ::unhinged::document_store::GetSessionContextResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void HealthCheck(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest* request, ::unhinged::document_store::HealthCheckResponse* response, std::function<void(::grpc::Status)>) override;
      void HealthCheck(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest* request, ::unhinged::document_store::HealthCheckResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentResponse>* AsyncPutDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentResponse>* PrepareAsyncPutDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentsResponse>* AsyncPutDocumentsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::PutDocumentsResponse>* PrepareAsyncPutDocumentsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::PutDocumentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetDocumentResponse>* AsyncGetDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetDocumentResponse>* PrepareAsyncGetDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::GetDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentsResponse>* AsyncListDocumentsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentsResponse>* PrepareAsyncListDocumentsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentVersionsResponse>* AsyncListDocumentVersionsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListDocumentVersionsResponse>* PrepareAsyncListDocumentVersionsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::DeleteDocumentResponse>* AsyncDeleteDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::DeleteDocumentResponse>* PrepareAsyncDeleteDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::DeleteDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::TagDocumentResponse>* AsyncTagDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::TagDocumentResponse>* PrepareAsyncTagDocumentRaw(::grpc::ClientContext* context, const ::unhinged::document_store::TagDocumentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListActiveTagsResponse>* AsyncListActiveTagsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListActiveTagsResponse>* PrepareAsyncListActiveTagsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListActiveTagsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListTagEventsResponse>* AsyncListTagEventsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::ListTagEventsResponse>* PrepareAsyncListTagEventsRaw(::grpc::ClientContext* context, const ::unhinged::document_store::ListTagEventsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetSessionContextResponse>* AsyncGetSessionContextRaw(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::GetSessionContextResponse>* PrepareAsyncGetSessionContextRaw(::grpc::ClientContext* context, const ::unhinged::document_store::GetSessionContextRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::HealthCheckResponse>* AsyncHealthCheckRaw(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::unhinged::document_store::HealthCheckResponse>* PrepareAsyncHealthCheckRaw(::grpc::ClientContext* context, const ::unhinged::document_store::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_PutDocument_;
    const ::grpc::internal::RpcMethod rpcmethod_PutDocuments_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDocument_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDocuments_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDocumentVersions_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDocument_;
    const ::grpc::internal::RpcMethod rpcmethod_TagDocument_;
    const ::grpc::internal::RpcMethod rpcmethod_ListActiveTags_;
    const ::grpc::internal::RpcMethod rpcmethod_ListTagEvents_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSessionContext_;
    const ::grpc::internal::RpcMethod rpcmethod_HealthCheck_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Document CRUD operations
    virtual ::grpc::Status PutDocument(::grpc::ServerContext* context, const ::unhinged::document_store::PutDocumentRequest* request, ::unhinged::document_store::PutDocumentResponse* response);
    virtual ::grpc::Status PutDocuments(::grpc::ServerContext* context, const ::unhinged::document_store::PutDocumentsRequest* request, ::unhinged::document_store::PutDocumentsResponse* response);
    virtual ::grpc::Status GetDocument(::grpc::ServerContext* context, const ::unhinged::document_store::GetDocumentRequest* request, ::unhinged::document_store::GetDocumentResponse* response);
    virtual ::grpc::Status ListDocuments(::grpc::ServerContext* context, const ::unhinged::document_store::ListDocumentsRequest* request, ::unhinged::document_store::ListDocumentsResponse* response);
    virtual ::grpc::Status ListDocumentVersions(::grpc::ServerContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest* request, ::unhinged::document_store::ListDocumentVersionsResponse* response);
    virtual ::grpc::Status DeleteDocument(::grpc::ServerContext* context, const ::unhinged::document_store::DeleteDocumentRequest* request, ::unhinged::document_store::DeleteDocumentResponse* response);
    // Tag operations
    virtual ::grpc::Status TagDocument(::grpc::ServerContext* context, const ::unhinged::document_store::TagDocumentRequest* request, ::unhinged::document_store::TagDocumentResponse* response);
    virtual ::grpc::Status ListActiveTags(::grpc::ServerContext* context, const ::unhinged::document_store::ListActiveTagsRequest* request, ::unhinged::document_store::ListActiveTagsResponse* response);
    virtual ::grpc::Status ListTagEvents(::grpc::ServerContext* context, const ::unhinged::document_store::ListTagEventsRequest* request, ::unhinged::document_store::ListTagEventsResponse* response);
    // Session context
    virtual ::grpc::Status GetSessionContext(::grpc::ServerContext* context, const ::unhinged::document_store::GetSessionContextRequest* request, ::unhinged::document_store::GetSessionContextResponse* response);
    // Health check
    virtual ::grpc::Status HealthCheck(::grpc::ServerContext* context, const ::unhinged::document_store::HealthCheckRequest* request, ::unhinged::document_store::HealthCheckResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_PutDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PutDocument() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_PutDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentRequest* /*request*/, ::unhinged::document_store::PutDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPutDocument(::grpc::ServerContext* context, ::unhinged::document_store::PutDocumentRequest* request, ::grpc::ServerAsyncResponseWriter< ::unhinged::document_store::PutDocumentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PutDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PutDocuments() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_PutDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentsRequest* /*request*/, ::unhinged::document_store::PutDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPutDocuments(::grpc::ServerContext* context, ::unhinged::document_store::PutDocumentsRequest* request, ::grpc::ServerAsyncResponseWriter< ::unhinged::document_store::PutDocumentsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDocument() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetDocumentRequest* /*request*/, ::unhinged::document_store::GetDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDocument(::grpc::ServerContext* context, ::unhinged::document_store::GetDocumentRequest* request, ::grpc::ServerAsyncResponseWriter< ::unhinged::document_store::GetDocumentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListDocuments() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentsRequest* /*request*/, ::unhinged::document_store::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDocuments(::grpc::ServerContext* context, ::unhinged::document_store::ListDocumentsRequest* request, ::grpc::ServerAsyncResponseWriter< ::unhinged::document_store::ListDocumentsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDocumentVersions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListDocumentVersions() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListDocumentVersions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocumentVersions(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentVersionsRequest* /*request*/, ::unhinged::document_store::ListDocumentVersionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDocumentVersions(::grpc::ServerContext* context, ::unhinged::document_store::ListDocumentVersionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::unhinged::document_store::ListDocumentVersionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteDocument() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::DeleteDocumentRequest* /*request*/, ::unhinged::document_store::DeleteDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDocument(::grpc::ServerContext* context, ::unhinged::document_store::DeleteDocumentRequest* request, ::grpc::ServerAsyncResponseWriter< ::unhinged::document_store::DeleteDocumentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TagDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TagDocument() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_TagDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TagDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::TagDocumentRequest* /*request*/, ::unhinged::document_store::TagDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTagDocument(::grpc::ServerContext* context, ::unhinged::document_store::TagDocumentRequest* request, ::grpc::ServerAsyncResponseWriter< ::unhinged::document_store::TagDocumentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListActiveTags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListActiveTags() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ListActiveTags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListActiveTags(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListActiveTagsRequest* /*request*/, ::unhinged::document_store::ListActiveTagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListActiveTags(::grpc::ServerContext* context, ::unhinged::document_store::ListActiveTagsRequest* request, ::grpc::ServerAsyncResponseWriter< ::unhinged::document_store::ListActiveTagsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListTagEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListTagEvents() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_ListTagEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTagEvents(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListTagEventsRequest* /*request*/, ::unhinged::document_store::ListTagEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTagEvents(::grpc::ServerContext* context, ::unhinged::document_store::ListTagEventsRequest* request, ::grpc::ServerAsyncResponseWriter< ::unhinged::document_store::ListTagEventsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetSessionContextRequest* /*request*/, ::unhinged::document_store::GetSessionContextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSessionContext(::grpc::ServerContext* context, ::unhinged::document_store::GetSessionContextRequest* request, ::grpc::ServerAsyncResponseWriter< ::unhinged::document_store::GetSessionContextResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_HealthCheck() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::HealthCheckRequest* /*request*/, ::unhinged::document_store::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHealthCheck(::grpc::ServerContext* context, ::unhinged::document_store::HealthCheckRequest* request, ::grpc::ServerAsyncResponseWriter< ::unhinged::document_store::HealthCheckResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_PutDocument<WithAsyncMethod_PutDocuments<WithAsyncMethod_GetDocument<WithAsyncMethod_ListDocuments<WithAsyncMethod_ListDocumentVersions<WithAsyncMethod_DeleteDocument<WithAsyncMethod_TagDocument<WithAsyncMethod_ListActiveTags<WithAsyncMethod_ListTagEvents<WithAsyncMethod_GetSessionContext<WithAsyncMethod_HealthCheck<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_PutDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PutDocument() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::PutDocumentRequest, ::unhinged::document_store::PutDocumentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::unhinged::document_store::PutDocumentRequest* request, ::unhinged::document_store::PutDocumentResponse* response) { return this->PutDocument(context, request, response); }));}
    void SetMessageAllocatorFor_PutDocument(
        ::grpc::MessageAllocator< ::unhinged::document_store::PutDocumentRequest, ::unhinged::document_store::PutDocumentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::PutDocumentRequest, ::unhinged::document_store::PutDocumentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PutDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentRequest* /*request*/, ::unhinged::document_store::PutDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PutDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::unhinged::document_store::PutDocumentRequest* /*request*/, ::unhinged::document_store::PutDocumentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PutDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PutDocuments() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::PutDocumentsRequest, ::unhinged::document_store::PutDocumentsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::unhinged::document_store::PutDocumentsRequest* request, ::unhinged::document_store::PutDocumentsResponse* response) { return this->PutDocuments(context, request, response); }));}
    void SetMessageAllocatorFor_PutDocuments(
        ::grpc::MessageAllocator< ::unhinged::document_store::PutDocumentsRequest, ::unhinged::document_store::PutDocumentsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::PutDocumentsRequest, ::unhinged::document_store::PutDocumentsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PutDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentsRequest* /*request*/, ::unhinged::document_store::PutDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PutDocuments(
      ::grpc::CallbackServerContext* /*context*/, const ::unhinged::document_store::PutDocumentsRequest* /*request*/, ::unhinged::document_store::PutDocumentsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDocument() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::GetDocumentRequest, ::unhinged::document_store::GetDocumentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::unhinged::document_store::GetDocumentRequest* request, ::unhinged::document_store::GetDocumentResponse* response) { return this->GetDocument(context, request, response); }));}
    void SetMessageAllocatorFor_GetDocument(
        ::grpc::MessageAllocator< ::unhinged::document_store::GetDocumentRequest, ::unhinged::document_store::GetDocumentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::GetDocumentRequest, ::unhinged::document_store::GetDocumentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetDocumentRequest* /*request*/, ::unhinged::document_store::GetDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::unhinged::document_store::GetDocumentRequest* /*request*/, ::unhinged::document_store::GetDocumentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListDocuments() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::ListDocumentsRequest, ::unhinged::document_store::ListDocumentsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::unhinged::document_store::ListDocumentsRequest* request, ::unhinged::document_store::ListDocumentsResponse* response) { return this->ListDocuments(context, request, response); }));}
    void SetMessageAllocatorFor_ListDocuments(
        ::grpc::MessageAllocator< ::unhinged::document_store::ListDocumentsRequest, ::unhinged::document_store::ListDocumentsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::ListDocumentsRequest, ::unhinged::document_store::ListDocumentsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentsRequest* /*request*/, ::unhinged::document_store::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListDocuments(
      ::grpc::CallbackServerContext* /*context*/, const ::unhinged::document_store::ListDocumentsRequest* /*request*/, ::unhinged::document_store::ListDocumentsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListDocumentVersions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListDocumentVersions() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::ListDocumentVersionsRequest, ::unhinged::document_store::ListDocumentVersionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::unhinged::document_store::ListDocumentVersionsRequest* request, ::unhinged::document_store::ListDocumentVersionsResponse* response) { return this->ListDocumentVersions(context, request, response); }));}
    void SetMessageAllocatorFor_ListDocumentVersions(
        ::grpc::MessageAllocator< ::unhinged::document_store::ListDocumentVersionsRequest, ::unhinged::document_store::ListDocumentVersionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::ListDocumentVersionsRequest, ::unhinged::document_store::ListDocumentVersionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListDocumentVersions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocumentVersions(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentVersionsRequest* /*request*/, ::unhinged::document_store::ListDocumentVersionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListDocumentVersions(
      ::grpc::CallbackServerContext* /*context*/, const ::unhinged::document_store::ListDocumentVersionsRequest* /*request*/, ::unhinged::document_store::ListDocumentVersionsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteDocument() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::DeleteDocumentRequest, ::unhinged::document_store::DeleteDocumentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::unhinged::document_store::DeleteDocumentRequest* request, ::unhinged::document_store::DeleteDocumentResponse* response) { return this->DeleteDocument(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteDocument(
        ::grpc::MessageAllocator< ::unhinged::document_store::DeleteDocumentRequest, ::unhinged::document_store::DeleteDocumentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::DeleteDocumentRequest, ::unhinged::document_store::DeleteDocumentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::DeleteDocumentRequest* /*request*/, ::unhinged::document_store::DeleteDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::unhinged::document_store::DeleteDocumentRequest* /*request*/, ::unhinged::document_store::DeleteDocumentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_TagDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_TagDocument() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::TagDocumentRequest, ::unhinged::document_store::TagDocumentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::unhinged::document_store::TagDocumentRequest* request, ::unhinged::document_store::TagDocumentResponse* response) { return this->TagDocument(context, request, response); }));}
    void SetMessageAllocatorFor_TagDocument(
        ::grpc::MessageAllocator< ::unhinged::document_store::TagDocumentRequest, ::unhinged::document_store::TagDocumentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::TagDocumentRequest, ::unhinged::document_store::TagDocumentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_TagDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TagDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::TagDocumentRequest* /*request*/, ::unhinged::document_store::TagDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TagDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::unhinged::document_store::TagDocumentRequest* /*request*/, ::unhinged::document_store::TagDocumentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListActiveTags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListActiveTags() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::ListActiveTagsRequest, ::unhinged::document_store::ListActiveTagsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::unhinged::document_store::ListActiveTagsRequest* request, ::unhinged::document_store::ListActiveTagsResponse* response) { return this->ListActiveTags(context, request, response); }));}
    void SetMessageAllocatorFor_ListActiveTags(
        ::grpc::MessageAllocator< ::unhinged::document_store::ListActiveTagsRequest, ::unhinged::document_store::ListActiveTagsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::ListActiveTagsRequest, ::unhinged::document_store::ListActiveTagsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListActiveTags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListActiveTags(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListActiveTagsRequest* /*request*/, ::unhinged::document_store::ListActiveTagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListActiveTags(
      ::grpc::CallbackServerContext* /*context*/, const ::unhinged::document_store::ListActiveTagsRequest* /*request*/, ::unhinged::document_store::ListActiveTagsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListTagEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListTagEvents() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::ListTagEventsRequest, ::unhinged::document_store::ListTagEventsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::unhinged::document_store::ListTagEventsRequest* request, ::unhinged::document_store::ListTagEventsResponse* response) { return this->ListTagEvents(context, request, response); }));}
    void SetMessageAllocatorFor_ListTagEvents(
        ::grpc::MessageAllocator< ::unhinged::document_store::ListTagEventsRequest, ::unhinged::document_store::ListTagEventsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::ListTagEventsRequest, ::unhinged::document_store::ListTagEventsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListTagEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTagEvents(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListTagEventsRequest* /*request*/, ::unhinged::document_store::ListTagEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListTagEvents(
      ::grpc::CallbackServerContext* /*context*/, const ::unhinged::document_store::ListTagEventsRequest* /*request*/, ::unhinged::document_store::ListTagEventsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::GetSessionContextRequest, ::unhinged::document_store::GetSessionContextResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::unhinged::document_store::GetSessionContextRequest* request, ::unhinged::document_store::GetSessionContextResponse* response) { return this->GetSessionContext(context, request, response); }));}
    void SetMessageAllocatorFor_GetSessionContext(
        ::grpc::MessageAllocator< ::unhinged::document_store::GetSessionContextRequest, ::unhinged::document_store::GetSessionContextResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::GetSessionContextRequest, ::unhinged::document_store::GetSessionContextResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetSessionContextRequest* /*request*/, ::unhinged::document_store::GetSessionContextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSessionContext(
      ::grpc::CallbackServerContext* /*context*/, const ::unhinged::document_store::GetSessionContextRequest* /*request*/, ::unhinged::document_store::GetSessionContextResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_HealthCheck() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::HealthCheckRequest, ::unhinged::document_store::HealthCheckResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::unhinged::document_store::HealthCheckRequest* request, ::unhinged::document_store::HealthCheckResponse* response) { return this->HealthCheck(context, request, response); }));}
    void SetMessageAllocatorFor_HealthCheck(
        ::grpc::MessageAllocator< ::unhinged::document_store::HealthCheckRequest, ::unhinged::document_store::HealthCheckResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::unhinged::document_store::HealthCheckRequest, ::unhinged::document_store::HealthCheckResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::HealthCheckRequest* /*request*/, ::unhinged::document_store::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* HealthCheck(
      ::grpc::CallbackServerContext* /*context*/, const ::unhinged::document_store::HealthCheckRequest* /*request*/, ::unhinged::document_store::HealthCheckResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_PutDocument<WithCallbackMethod_PutDocuments<WithCallbackMethod_GetDocument<WithCallbackMethod_ListDocuments<WithCallbackMethod_ListDocumentVersions<WithCallbackMethod_DeleteDocument<WithCallbackMethod_TagDocument<WithCallbackMethod_ListActiveTags<WithCallbackMethod_ListTagEvents<WithCallbackMethod_GetSessionContext<WithCallbackMethod_HealthCheck<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_PutDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PutDocument() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_PutDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentRequest* /*request*/, ::unhinged::document_store::PutDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PutDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PutDocuments() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_PutDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentsRequest* /*request*/, ::unhinged::document_store::PutDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDocument() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetDocumentRequest* /*request*/, ::unhinged::document_store::GetDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListDocuments() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentsRequest* /*request*/, ::unhinged::document_store::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDocumentVersions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListDocumentVersions() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListDocumentVersions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocumentVersions(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentVersionsRequest* /*request*/, ::unhinged::document_store::ListDocumentVersionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteDocument() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::DeleteDocumentRequest* /*request*/, ::unhinged::document_store::DeleteDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TagDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TagDocument() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_TagDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TagDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::TagDocumentRequest* /*request*/, ::unhinged::document_store::TagDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListActiveTags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListActiveTags() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ListActiveTags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListActiveTags(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListActiveTagsRequest* /*request*/, ::unhinged::document_store::ListActiveTagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListTagEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListTagEvents() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_ListTagEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTagEvents(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListTagEventsRequest* /*request*/, ::unhinged::document_store::ListTagEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetSessionContextRequest* /*request*/, ::unhinged::document_store::GetSessionContextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_HealthCheck() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::HealthCheckRequest* /*request*/, ::unhinged::document_store::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_PutDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PutDocument() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_PutDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentRequest* /*request*/, ::unhinged::document_store::PutDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPutDocument(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PutDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PutDocuments() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_PutDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentsRequest* /*request*/, ::unhinged::document_store::PutDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPutDocuments(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDocument() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetDocumentRequest* /*request*/, ::unhinged::document_store::GetDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDocument(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListDocuments() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentsRequest* /*request*/, ::unhinged::document_store::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDocuments(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListDocumentVersions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListDocumentVersions() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListDocumentVersions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocumentVersions(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentVersionsRequest* /*request*/, ::unhinged::document_store::ListDocumentVersionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDocumentVersions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteDocument() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::DeleteDocumentRequest* /*request*/, ::unhinged::document_store::DeleteDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDocument(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TagDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TagDocument() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_TagDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TagDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::TagDocumentRequest* /*request*/, ::unhinged::document_store::TagDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTagDocument(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListActiveTags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListActiveTags() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ListActiveTags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListActiveTags(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListActiveTagsRequest* /*request*/, ::unhinged::document_store::ListActiveTagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListActiveTags(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListTagEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListTagEvents() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_ListTagEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTagEvents(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListTagEventsRequest* /*request*/, ::unhinged::document_store::ListTagEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTagEvents(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetSessionContextRequest* /*request*/, ::unhinged::document_store::GetSessionContextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSessionContext(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_HealthCheck() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::HealthCheckRequest* /*request*/, ::unhinged::document_store::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHealthCheck(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PutDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PutDocument() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PutDocument(context, request, response); }));
    }
    ~WithRawCallbackMethod_PutDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentRequest* /*request*/, ::unhinged::document_store::PutDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PutDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PutDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PutDocuments() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PutDocuments(context, request, response); }));
    }
    ~WithRawCallbackMethod_PutDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PutDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentsRequest* /*request*/, ::unhinged::document_store::PutDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PutDocuments(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDocument() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDocument(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetDocumentRequest* /*request*/, ::unhinged::document_store::GetDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListDocuments() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListDocuments(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentsRequest* /*request*/, ::unhinged::document_store::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListDocuments(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListDocumentVersions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListDocumentVersions() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListDocumentVersions(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListDocumentVersions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDocumentVersions(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentVersionsRequest* /*request*/, ::unhinged::document_store::ListDocumentVersionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListDocumentVersions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteDocument() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteDocument(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::DeleteDocumentRequest* /*request*/, ::unhinged::document_store::DeleteDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_TagDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_TagDocument() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TagDocument(context, request, response); }));
    }
    ~WithRawCallbackMethod_TagDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TagDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::TagDocumentRequest* /*request*/, ::unhinged::document_store::TagDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TagDocument(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListActiveTags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListActiveTags() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListActiveTags(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListActiveTags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListActiveTags(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListActiveTagsRequest* /*request*/, ::unhinged::document_store::ListActiveTagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListActiveTags(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListTagEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListTagEvents() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListTagEvents(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListTagEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTagEvents(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListTagEventsRequest* /*request*/, ::unhinged::document_store::ListTagEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListTagEvents(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSessionContext(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetSessionContextRequest* /*request*/, ::unhinged::document_store::GetSessionContextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSessionContext(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_HealthCheck() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->HealthCheck(context, request, response); }));
    }
    ~WithRawCallbackMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::HealthCheckRequest* /*request*/, ::unhinged::document_store::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* HealthCheck(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PutDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PutDocument() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::unhinged::document_store::PutDocumentRequest, ::unhinged::document_store::PutDocumentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::unhinged::document_store::PutDocumentRequest, ::unhinged::document_store::PutDocumentResponse>* streamer) {
                       return this->StreamedPutDocument(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PutDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PutDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentRequest* /*request*/, ::unhinged::document_store::PutDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPutDocument(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::unhinged::document_store::PutDocumentRequest,::unhinged::document_store::PutDocumentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PutDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PutDocuments() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::unhinged::document_store::PutDocumentsRequest, ::unhinged::document_store::PutDocumentsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::unhinged::document_store::PutDocumentsRequest, ::unhinged::document_store::PutDocumentsResponse>* streamer) {
                       return this->StreamedPutDocuments(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PutDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PutDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::PutDocumentsRequest* /*request*/, ::unhinged::document_store::PutDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPutDocuments(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::unhinged::document_store::PutDocumentsRequest,::unhinged::document_store::PutDocumentsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDocument() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::unhinged::document_store::GetDocumentRequest, ::unhinged::document_store::GetDocumentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::unhinged::document_store::GetDocumentRequest, ::unhinged::document_store::GetDocumentResponse>* streamer) {
                       return this->StreamedGetDocument(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetDocumentRequest* /*request*/, ::unhinged::document_store::GetDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDocument(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::unhinged::document_store::GetDocumentRequest,::unhinged::document_store::GetDocumentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListDocuments() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::unhinged::document_store::ListDocumentsRequest, ::unhinged::document_store::ListDocumentsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::unhinged::document_store::ListDocumentsRequest, ::unhinged::document_store::ListDocumentsResponse>* streamer) {
                       return this->StreamedListDocuments(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDocuments(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentsRequest* /*request*/, ::unhinged::document_store::ListDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDocuments(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::unhinged::document_store::ListDocumentsRequest,::unhinged::document_store::ListDocumentsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDocumentVersions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListDocumentVersions() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::unhinged::document_store::ListDocumentVersionsRequest, ::unhinged::document_store::ListDocumentVersionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::unhinged::document_store::ListDocumentVersionsRequest, ::unhinged::document_store::ListDocumentVersionsResponse>* streamer) {
                       return this->StreamedListDocumentVersions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListDocumentVersions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDocumentVersions(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListDocumentVersionsRequest* /*request*/, ::unhinged::document_store::ListDocumentVersionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDocumentVersions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::unhinged::document_store::ListDocumentVersionsRequest,::unhinged::document_store::ListDocumentVersionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteDocument() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::unhinged::document_store::DeleteDocumentRequest, ::unhinged::document_store::DeleteDocumentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::unhinged::document_store::DeleteDocumentRequest, ::unhinged::document_store::DeleteDocumentResponse>* streamer) {
                       return this->StreamedDeleteDocument(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::DeleteDocumentRequest* /*request*/, ::unhinged::document_store::DeleteDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDocument(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::unhinged::document_store::DeleteDocumentRequest,::unhinged::document_store::DeleteDocumentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TagDocument : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TagDocument() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::unhinged::document_store::TagDocumentRequest, ::unhinged::document_store::TagDocumentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::unhinged::document_store::TagDocumentRequest, ::unhinged::document_store::TagDocumentResponse>* streamer) {
                       return this->StreamedTagDocument(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TagDocument() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TagDocument(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::TagDocumentRequest* /*request*/, ::unhinged::document_store::TagDocumentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTagDocument(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::unhinged::document_store::TagDocumentRequest,::unhinged::document_store::TagDocumentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListActiveTags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListActiveTags() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::unhinged::document_store::ListActiveTagsRequest, ::unhinged::document_store::ListActiveTagsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::unhinged::document_store::ListActiveTagsRequest, ::unhinged::document_store::ListActiveTagsResponse>* streamer) {
                       return this->StreamedListActiveTags(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListActiveTags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListActiveTags(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListActiveTagsRequest* /*request*/, ::unhinged::document_store::ListActiveTagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListActiveTags(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::unhinged::document_store::ListActiveTagsRequest,::unhinged::document_store::ListActiveTagsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListTagEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListTagEvents() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::unhinged::document_store::ListTagEventsRequest, ::unhinged::document_store::ListTagEventsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::unhinged::document_store::ListTagEventsRequest, ::unhinged::document_store::ListTagEventsResponse>* streamer) {
                       return this->StreamedListTagEvents(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListTagEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListTagEvents(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::ListTagEventsRequest* /*request*/, ::unhinged::document_store::ListTagEventsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListTagEvents(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::unhinged::document_store::ListTagEventsRequest,::unhinged::document_store::ListTagEventsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::unhinged::document_store::GetSessionContextRequest, ::unhinged::document_store::GetSessionContextResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::unhinged::document_store::GetSessionContextRequest, ::unhinged::document_store::GetSessionContextResponse>* streamer) {
                       return this->StreamedGetSessionContext(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::GetSessionContextRequest* /*request*/, ::unhinged::document_store::GetSessionContextResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSessionContext(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::unhinged::document_store::GetSessionContextRequest,::unhinged::document_store::GetSessionContextResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_HealthCheck() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::unhinged::document_store::HealthCheckRequest, ::unhinged::document_store::HealthCheckResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::unhinged::document_store::HealthCheckRequest, ::unhinged::document_store::HealthCheckResponse>* streamer) {
                       return this->StreamedHealthCheck(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::unhinged::document_store::HealthCheckRequest* /*request*/, ::unhinged::document_store::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedHealthCheck(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::unhinged::document_store::HealthCheckRequest,::unhinged::document_store::HealthCheckResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_PutDocument<WithStreamedUnaryMethod_PutDocuments<WithStreamedUnaryMethod_GetDocument<WithStreamedUnaryMethod_ListDocuments<WithStreamedUnaryMethod_ListDocumentVersions<WithStreamedUnaryMethod_DeleteDocument<WithStreamedUnaryMethod_TagDocument<WithStreamedUnaryMethod_ListActiveTags<WithStreamedUnaryMethod_ListTagEvents<WithStreamedUnaryMethod_GetSessionContext<WithStreamedUnaryMethod_HealthCheck<Service > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_PutDocument<WithStreamedUnaryMethod_PutDocuments<WithStreamedUnaryMethod_GetDocument<WithStreamedUnaryMethod_ListDocuments<WithStreamedUnaryMethod_ListDocumentVersions<WithStreamedUnaryMethod_DeleteDocument<WithStreamedUnaryMethod_TagDocument<WithStreamedUnaryMethod_ListActiveTags<WithStreamedUnaryMethod_ListTagEvents<WithStreamedUnaryMethod_GetSessionContext<WithStreamedUnaryMethod_HealthCheck<Service > > > > > > > > > > > StreamedService;
};

}  // namespace document_store
}  // namespace unhinged


#endif  // GRPC_document_5fstore_2eproto__INCLUDED
